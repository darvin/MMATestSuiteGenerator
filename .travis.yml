sudo: required
dist: trusty
services:
  - docker
cache:
  directories:
    - build/
    - build_docs/


before_install:
  - echo "trust_server_cert /opt/boxcert.pem" | sudo tee --append  /etc/davfs2/davfs2.conf 
  - echo "https://dav.box.com/dav/ sergey.v.klimov+mathbackupbox@gmail.com mathematica" | sudo tee --append  /etc/davfs2/secrets
  - openssl s_client -showcerts -servername dav.box.com -connect dav.box.com:443 </dev/null 2>/dev/null|openssl x509 -outform PEM > boxcert.pem && sudo mv boxcert.pem /opt/
  - sudo mount.davfs -o user=$USER,rw https://dav.box.com/dav/ /mnt/
  - cp -R /mnt/INTERMED/$TRAVIS_BUILD_NUMBER/output ./output || true
  - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
  - docker run --rm --privileged multiarch/qemu-user-static:register --reset
  - docker pull mmacompat/mathematica || true


after_script:
  - mkdir -p /mnt/INTERMED/$TRAVIS_BUILD_NUMBER/ || true
  - cp -R ./output/ /mnt/INTERMED/$TRAVIS_BUILD_NUMBER/ || true
  - ls /mnt/INTERMED/$TRAVIS_BUILD_NUMBER/*/* || true

addons:
  apt:
    packages:
      - davfs2
      - docker-ce
      - parallel
      - openssl
env:
  - PORTION_COUNT=10
  
 
jobs:
  include:
    - stage: prepare cache
      script:
        - make docker
        - make mathematica-self-tests
        - make download-docs
        - docker push mmacompat/mathematica
    - stage: generate tests
      script: PORTION_INDEX=1 make generate-compat-tests
    - script: PORTION_INDEX=2 make generate-compat-tests
    - script: PORTION_INDEX=3 make generate-compat-tests
    - script: PORTION_INDEX=4 make generate-compat-tests
    - script: PORTION_INDEX=5 make generate-compat-tests
    - script: PORTION_INDEX=6 make generate-compat-tests
    - script: PORTION_INDEX=7 make generate-compat-tests
    - script: PORTION_INDEX=8 make generate-compat-tests
    - script: PORTION_INDEX=9 make generate-compat-tests
    - script: PORTION_INDEX=10 make generate-compat-tests
    - stage: deploy
      script: skip
      deploy: &pages
        provider: pages
        skip-cleanup: true
        github-token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
        keep-history: true
        on:
          branch: master
        local-dir: output/



