{
    "stats": {
        "suites": 0,
        "tests": 15,
        "passes": 11,
        "pending": 0,
        "failures": 4,
        "start": "2018-06-11T04:13:56.730Z",
        "end": "2018-06-11T04:13:56.730Z",
        "duration": 0,
        "testsRegistered": 15,
        "passPercent": 73.33333333333333,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "$Failed    ➡️     HoldComplete[HoldComplete[1 + 1, Evaluate[1 + 2], Sequence[3, 4]]]",
                "fullTitle": "$Failed    ➡️     HoldComplete[HoldComplete[1 + 1, Evaluate[1 + 2], Sequence[3, 4]]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "20949b2f-18a9-45ee-89a6-8115abafe6ae",
                "parentUUID": "737c16f7-aef7-474e-9fba-b5f04939b38e",
                "skipped": true,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/HoldComplete_Tests.m\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n#! TextForm[ColonForm[MessageName[ReplaceAll, argrx], StringForm[`1` called with `2` arguments; `3` arguments are expected., Short[HoldForm[ReplaceAll], 3], Short[HoldForm[4], 3], Short[HoldForm[2], 3]]]]\\n#! TextForm[ColonForm[MessageName[ToString, nonopt], StringForm[Options expected (instead of `1`) beyond position `2` in `3`. An option must be a rule or a list of rules., Short[HoldForm[OutputForm], 3], Short[HoldForm[2], 3], Short[HoldForm[ToString[a, b, 3, OutputForm]], 3]]]]\\n#! TextForm[ColonForm[MessageName[ReplaceAll, argrx], StringForm[`1` called with `2` arguments; `3` arguments are expected., Short[HoldForm[ReplaceAll], 3], Short[HoldForm[3], 3], Short[HoldForm[2], 3]]]]\\n#! TextForm[ColonForm[MessageName[ToString, nonopt], StringForm[Options expected (instead of `1`) beyond position `2` in `3`. An option must be a rule or a list of rules., Short[HoldForm[OutputForm], 3], Short[HoldForm[2], 3], Short[HoldForm[ToString[a, b, OutputForm]], 3]]]]\\n#! TextForm[ColonForm[MessageName[ReleaseHold, argx], StringForm[`1` called with `2` arguments; 1 argument is expected., Short[HoldForm[ReleaseHold], 3], Short[HoldForm[2], 3]]]]\\n#! TextForm[ColonForm[MessageName[ReleaseHold, argx], StringForm[`1` called with `2` arguments; 1 argument is expected., Short[HoldForm[ReleaseHold], 3], Short[HoldForm[2], 3]]]]\\n#! TextForm[ColonForm[MessageName[ReplaceAll, argrx], StringForm[`1` called with `2` arguments; `3` arguments are expected., Short[HoldForm[ReplaceAll], 3], Short[HoldForm[3], 3], Short[HoldForm[2], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[ReplaceAll, argrx]], 3]]]]\\n#! TextForm[ColonForm[MessageName[ToString, nonopt], StringForm[Options expected (instead of `1`) beyond position `2` in `3`. An option must be a rule or a list of rules., Short[HoldForm[OutputForm], 3], Short[HoldForm[2], 3], Short[HoldForm[ToString[a, b, OutputForm]], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[ToString, nonopt]], 3]]]]\\n#! TextForm[ColonForm[MessageName[FullForm, nonopt], StringForm[Options expected (instead of `1`) beyond position `2` in `3`. An option must be a rule or a list of rules., Short[HoldForm[a/b], 3], Short[HoldForm[1], 3], Short[HoldForm[FullForm[a - b, a/b]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: HoldComplete_Tests\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Attributes[HoldComplete]    ➡️     {HoldAllComplete, Protected}",
                "fullTitle": "Attributes[HoldComplete]    ➡️     {HoldAllComplete, Protected}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0eb02344-5d87-410e-9b1d-4125e3f8864f",
                "parentUUID": "737c16f7-aef7-474e-9fba-b5f04939b38e",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[HoldComplete,paclet:ref/HoldComplete] is the standard container with attribute RefLink[HoldAllComplete,paclet:ref/HoldAllComplete]:\\n\\n\\ndata: \\n  got: \\n    HoldAllComplete: null\\n    Protected:       null\\n  expect: \\n    HoldAllComplete: null\\n    Protected:       null\\n  expect_evaluated: \\n    HoldAllComplete: null\\n    Protected:       null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "HoldAllComplete": null,
                        "Protected": null
                    },
                    "expected": {
                        "HoldAllComplete": null,
                        "Protected": null
                    }
                }
            },
            {
                "title": "HoldComplete[Sequence[a, b], 1 + 2]    ➡️     HoldComplete[Sequence[a, b], 1 + 2]",
                "fullTitle": "HoldComplete[Sequence[a, b], 1 + 2]    ➡️     HoldComplete[Sequence[a, b], 1 + 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "63040595-cb76-4c68-b0e2-1dfa491ff826",
                "parentUUID": "737c16f7-aef7-474e-9fba-b5f04939b38e",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              a /. Sequence[b, 3, Hold[Out[$Line - 1]] -> {HoldAllComplete, Protected}]\\n  expect:           HoldComplete[Sequence[a, b], 1 + 2]\\n  expect_evaluated: ToString[a, b, 3, OutputForm]\"",
                "state": "failed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a /. Sequence[b, 3, Hold[Out[$Line - 1]] -> {HoldAllComplete, Protected}]",
                    "expected": "HoldComplete[Sequence[a, b], 1 + 2]"
                }
            },
            {
                "title": "HoldComplete[1 + 2]    ➡️     HoldComplete[1 + 2]",
                "fullTitle": "HoldComplete[1 + 2]    ➡️     HoldComplete[1 + 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1d4f95fa-fb90-4762-995b-0f01cf92b5f0",
                "parentUUID": "737c16f7-aef7-474e-9fba-b5f04939b38e",
                "skipped": false,
                "isHook": false,
                "context": "\"# No form of evaluation control affects an expression with attribute RefLink[HoldAllComplete,paclet:ref/HoldAllComplete]:\\n\\n\\ndata: \\n  got:              3\\n  expect:           HoldComplete[1 + 2]\\n  expect_evaluated: 3\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 3,
                    "expected": "HoldComplete[1 + 2]"
                }
            },
            {
                "title": "HoldComplete[Evaluate[1 + 2]]    ➡️     HoldComplete[Evaluate[1 + 2]]",
                "fullTitle": "HoldComplete[Evaluate[1 + 2]]    ➡️     HoldComplete[Evaluate[1 + 2]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f6116a0d-2e85-4d3c-9a4a-2580c239f6c7",
                "parentUUID": "737c16f7-aef7-474e-9fba-b5f04939b38e",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              3\\n  expect:           HoldComplete[Evaluate[1 + 2]]\\n  expect_evaluated: 3\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 3,
                    "expected": "HoldComplete[Evaluate[1 + 2]]"
                }
            },
            {
                "title": "HoldComplete[Sequence[a, b]]    ➡️     HoldComplete[Sequence[a, b]]",
                "fullTitle": "HoldComplete[Sequence[a, b]]    ➡️     HoldComplete[Sequence[a, b]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d862dd35-4fcc-4daa-a8a7-39733de47298",
                "parentUUID": "737c16f7-aef7-474e-9fba-b5f04939b38e",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              a /. Sequence[b, Hold[Out[$Line - 1]] -> 3]\\n  expect:           HoldComplete[Sequence[a, b]]\\n  expect_evaluated: ToString[a, b, OutputForm]\"",
                "state": "failed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a /. Sequence[b, Hold[Out[$Line - 1]] -> 3]",
                    "expected": "HoldComplete[Sequence[a, b]]"
                }
            },
            {
                "title": "g /: HoldComplete[g[x_]] := x; HoldComplete[g[1]]    ➡️     HoldComplete[g[1]]",
                "fullTitle": "g /: HoldComplete[g[x_]] := x; HoldComplete[g[1]]    ➡️     HoldComplete[g[1]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9d5ba13c-71b3-44ba-ad93-54819039640c",
                "parentUUID": "737c16f7-aef7-474e-9fba-b5f04939b38e",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              g[1]\\n  expect:           HoldComplete[g[1]]\\n  expect_evaluated: g[1]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "g[1]",
                    "expected": "HoldComplete[g[1]]"
                }
            },
            {
                "title": "HoldComplete[f[1 + 2]] /. f[x_] :> g[x]    ➡️     HoldComplete[g[1 + 2]]",
                "fullTitle": "HoldComplete[f[1 + 2]] /. f[x_] :> g[x]    ➡️     HoldComplete[g[1 + 2]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0b611271-974f-4984-a613-be465c4356e0",
                "parentUUID": "737c16f7-aef7-474e-9fba-b5f04939b38e",
                "skipped": false,
                "isHook": false,
                "context": "\"# Substitution still happens inside RefLink[HoldComplete,paclet:ref/HoldComplete]:\\n\\n\\ndata: \\n  got:              g[3]\\n  expect:           HoldComplete[g[1 + 2]]\\n  expect_evaluated: g[3]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "g[3]",
                    "expected": "HoldComplete[g[1 + 2]]"
                }
            },
            {
                "title": "ReleaseHold[HoldComplete[Sequence[1, 2]]]    ➡️     Sequence[1, 2]",
                "fullTitle": "ReleaseHold[HoldComplete[Sequence[1, 2]]]    ➡️     Sequence[1, 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "84c664b3-4d62-4f93-bc79-c8250758a125",
                "parentUUID": "737c16f7-aef7-474e-9fba-b5f04939b38e",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[ReleaseHold,paclet:ref/ReleaseHold] removes one level of RefLink[HoldComplete,paclet:ref/HoldComplete]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Hold[1 + 2]    ➡️     Hold[1 + 2]",
                "fullTitle": "Hold[1 + 2]    ➡️     Hold[1 + 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "687e7fbb-00ed-422c-bb77-b65287dd53ab",
                "parentUUID": "737c16f7-aef7-474e-9fba-b5f04939b38e",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Hold,paclet:ref/Hold] is a milder form of RefLink[HoldComplete,paclet:ref/HoldComplete] that allows for some form of evaluation:\\n\\n\\ndata: \\n  got:              3\\n  expect:           Hold[1 + 2]\\n  expect_evaluated: 3\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 3,
                    "expected": "Hold[1 + 2]"
                }
            },
            {
                "title": "Hold[Evaluate[1 + 2]]    ➡️     Hold[3]",
                "fullTitle": "Hold[Evaluate[1 + 2]]    ➡️     Hold[3]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fd9389a0-515b-4f41-b5ba-41ab89067b35",
                "parentUUID": "737c16f7-aef7-474e-9fba-b5f04939b38e",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              3\\n  expect:           Hold[3]\\n  expect_evaluated: 3\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 3,
                    "expected": "Hold[3]"
                }
            },
            {
                "title": "Hold[Sequence[a, b]]    ➡️     Hold[a, b]",
                "fullTitle": "Hold[Sequence[a, b]]    ➡️     Hold[a, b]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "691a8e58-fd04-49c9-a0d6-99f91c5b1fc5",
                "parentUUID": "737c16f7-aef7-474e-9fba-b5f04939b38e",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              a /. Sequence[b, Hold[Out[$Line - 1]] -> 3]\\n  expect:           Hold[a, b]\\n  expect_evaluated: ToString[a, b, OutputForm]\"",
                "state": "failed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a /. Sequence[b, Hold[Out[$Line - 1]] -> 3]",
                    "expected": "Hold[a, b]"
                }
            },
            {
                "title": "g /: Hold[g[x_]] := x; Hold[g[1]]    ➡️     1",
                "fullTitle": "g /: Hold[g[x_]] := x; Hold[g[1]]    ➡️     1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3b6d7705-50fa-4590-b638-f9be7aea441d",
                "parentUUID": "737c16f7-aef7-474e-9fba-b5f04939b38e",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              1\\n  expect:           1\\n  expect_evaluated: 1\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1,
                    "expected": 1
                }
            },
            {
                "title": "ToExpression[\"Sequence[a,b]\", InputForm, HoldComplete]    ➡️     HoldComplete[Sequence[a, b]]",
                "fullTitle": "ToExpression[\"Sequence[a,b]\", InputForm, HoldComplete]    ➡️     HoldComplete[Sequence[a, b]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9daad158-b789-4300-89a6-cd57be3c3ab1",
                "parentUUID": "737c16f7-aef7-474e-9fba-b5f04939b38e",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[HoldComplete,paclet:ref/HoldComplete] can be used to freeze the result of RefLink[ToExpression,paclet:ref/ToExpression] before it is evaluated:\\n\\n\\ndata: \\n  got:              a /. Sequence[b, Hold[Out[$Line - 1]] -> 1]\\n  expect:           HoldComplete[Sequence[a, b]]\\n  expect_evaluated: ToString[a, b, OutputForm]\"",
                "state": "failed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a /. Sequence[b, Hold[Out[$Line - 1]] -> 1]",
                    "expected": "HoldComplete[Sequence[a, b]]"
                }
            },
            {
                "title": "FullForm[HoldComplete[a - b, a/b]]    ➡️     HoldComplete[a - b, a/b]",
                "fullTitle": "FullForm[HoldComplete[a - b, a/b]]    ➡️     HoldComplete[a - b, a/b]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "054a8d79-a517-4e17-903f-2edad6b9f471",
                "parentUUID": "737c16f7-aef7-474e-9fba-b5f04939b38e",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[HoldComplete,paclet:ref/HoldComplete] affects only evaluation; input transformations are still applied:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "20949b2f-18a9-45ee-89a6-8115abafe6ae",
            "0eb02344-5d87-410e-9b1d-4125e3f8864f",
            "1d4f95fa-fb90-4762-995b-0f01cf92b5f0",
            "f6116a0d-2e85-4d3c-9a4a-2580c239f6c7",
            "9d5ba13c-71b3-44ba-ad93-54819039640c",
            "0b611271-974f-4984-a613-be465c4356e0",
            "84c664b3-4d62-4f93-bc79-c8250758a125",
            "687e7fbb-00ed-422c-bb77-b65287dd53ab",
            "fd9389a0-515b-4f41-b5ba-41ab89067b35",
            "3b6d7705-50fa-4590-b638-f9be7aea441d",
            "054a8d79-a517-4e17-903f-2edad6b9f471"
        ],
        "failures": [
            "63040595-cb76-4c68-b0e2-1dfa491ff826",
            "d862dd35-4fcc-4daa-a8a7-39733de47298",
            "691a8e58-fd04-49c9-a0d6-99f91c5b1fc5",
            "9daad158-b789-4300-89a6-cd57be3c3ab1"
        ],
        "skipped": [
            "20949b2f-18a9-45ee-89a6-8115abafe6ae",
            "84c664b3-4d62-4f93-bc79-c8250758a125",
            "054a8d79-a517-4e17-903f-2edad6b9f471"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "737c16f7-aef7-474e-9fba-b5f04939b38e",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
