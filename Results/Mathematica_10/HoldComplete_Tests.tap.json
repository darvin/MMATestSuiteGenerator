{
    "stats": {
        "suites": 0,
        "tests": 15,
        "passes": 10,
        "pending": 0,
        "failures": 5,
        "start": "2018-06-03T12:20:30.900Z",
        "end": "2018-06-03T12:20:30.900Z",
        "duration": 0,
        "testsRegistered": 15,
        "passPercent": 66.66666666666666,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "HoldComplete[1 + 1, Evaluate[1 + 2], Sequence[3, 4]]    ➡️     HoldComplete[1 + 1, Evaluate[1 + 2], Sequence[3, 4]]",
                "fullTitle": "HoldComplete[1 + 1, Evaluate[1 + 2], Sequence[3, 4]]    ➡️     HoldComplete[1 + 1, Evaluate[1 + 2], Sequence[3, 4]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "22d1e28d-3531-44cc-8326-a8171d80896a",
                "parentUUID": "5294bef7-a0b3-4fe7-a73c-9d8d548bba59",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/HoldComplete_Tests.m\\n#! TextForm[ColonForm[MessageName[InputForm, nonopt], StringForm[Options expected (instead of `1`) beyond position `2` in `3`. An option must be a rule or a list of rules., Short[HoldForm[4], 3], Short[HoldForm[1], 3], Short[HoldForm[InputForm[2, 3, 3, 4]], 3]]]]\\n#! TextForm[ColonForm[MessageName[InputForm, nonopt], StringForm[Options expected (instead of `1`) beyond position `2` in `3`. An option must be a rule or a list of rules., Short[HoldForm[4], 3], Short[HoldForm[1], 3], Short[HoldForm[InputForm[2, 3, 3, 4]], 3]]]]\\n#! TextForm[ColonForm[MessageName[InputForm, nonopt], StringForm[Options expected (instead of `1`) beyond position `2` in `3`. An option must be a rule or a list of rules., Short[HoldForm[3], 3], Short[HoldForm[1], 3], Short[HoldForm[InputForm[a, b, 3]], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[InputForm, nonopt]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: HoldComplete_Tests\\n\\n\\ndata: \\n  got:              InputForm[2, 3, 3, 4]\\n  expect:           HoldComplete[1 + 1, Evaluate[1 + 2], Sequence[3, 4]]\\n  expect_evaluated: InputForm[2, 3, 3, 4]\"",
                "state": "failed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "InputForm[2, 3, 3, 4]",
                    "expected": "HoldComplete[1 + 1, Evaluate[1 + 2], Sequence[3, 4]]"
                }
            },
            {
                "title": "Attributes[HoldComplete]    ➡️     {HoldAllComplete, Protected}",
                "fullTitle": "Attributes[HoldComplete]    ➡️     {HoldAllComplete, Protected}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6a89d174-4550-4185-bd0a-49affd901140",
                "parentUUID": "5294bef7-a0b3-4fe7-a73c-9d8d548bba59",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[HoldComplete,paclet:ref/HoldComplete] is the standard container with attribute RefLink[HoldAllComplete,paclet:ref/HoldAllComplete]:\\n\\n\\ndata: \\n  got: \\n    HoldAllComplete: null\\n    Protected:       null\\n  expect: \\n    HoldAllComplete: null\\n    Protected:       null\\n  expect_evaluated: \\n    HoldAllComplete: null\\n    Protected:       null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "HoldAllComplete": null,
                        "Protected": null
                    },
                    "expected": {
                        "HoldAllComplete": null,
                        "Protected": null
                    }
                }
            },
            {
                "title": "HoldComplete[Sequence[a, b], 1 + 2]    ➡️     HoldComplete[Sequence[a, b], 1 + 2]",
                "fullTitle": "HoldComplete[Sequence[a, b], 1 + 2]    ➡️     HoldComplete[Sequence[a, b], 1 + 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c984d34b-1242-456f-87be-ff49e71ca9dc",
                "parentUUID": "5294bef7-a0b3-4fe7-a73c-9d8d548bba59",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              InputForm[a, b, 3]\\n  expect:           HoldComplete[Sequence[a, b], 1 + 2]\\n  expect_evaluated: InputForm[a, b, 3]\"",
                "state": "failed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "InputForm[a, b, 3]",
                    "expected": "HoldComplete[Sequence[a, b], 1 + 2]"
                }
            },
            {
                "title": "HoldComplete[1 + 2]    ➡️     HoldComplete[1 + 2]",
                "fullTitle": "HoldComplete[1 + 2]    ➡️     HoldComplete[1 + 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a1000ea1-ee47-4269-a872-f3f168ac350b",
                "parentUUID": "5294bef7-a0b3-4fe7-a73c-9d8d548bba59",
                "skipped": false,
                "isHook": false,
                "context": "\"# No form of evaluation control affects an expression with attribute RefLink[HoldAllComplete,paclet:ref/HoldAllComplete]:\\n\\n\\ndata: \\n  got:              3\\n  expect:           HoldComplete[1 + 2]\\n  expect_evaluated: 3\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 3,
                    "expected": "HoldComplete[1 + 2]"
                }
            },
            {
                "title": "HoldComplete[Evaluate[1 + 2]]    ➡️     HoldComplete[Evaluate[1 + 2]]",
                "fullTitle": "HoldComplete[Evaluate[1 + 2]]    ➡️     HoldComplete[Evaluate[1 + 2]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f641dcbc-c61c-429b-b39c-043c74d5c9cc",
                "parentUUID": "5294bef7-a0b3-4fe7-a73c-9d8d548bba59",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              3\\n  expect:           HoldComplete[Evaluate[1 + 2]]\\n  expect_evaluated: 3\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 3,
                    "expected": "HoldComplete[Evaluate[1 + 2]]"
                }
            },
            {
                "title": "HoldComplete[Sequence[a, b]]    ➡️     HoldComplete[Sequence[a, b]]",
                "fullTitle": "HoldComplete[Sequence[a, b]]    ➡️     HoldComplete[Sequence[a, b]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a5008b5d-ce35-47b7-baeb-1a78aa569cec",
                "parentUUID": "5294bef7-a0b3-4fe7-a73c-9d8d548bba59",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              InputForm[a, b]\\n  expect:           HoldComplete[Sequence[a, b]]\\n  expect_evaluated: InputForm[a, b]\"",
                "state": "failed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "InputForm[a, b]",
                    "expected": "HoldComplete[Sequence[a, b]]"
                }
            },
            {
                "title": "HoldComplete[g[1]]    ➡️     HoldComplete[g[1]]",
                "fullTitle": "HoldComplete[g[1]]    ➡️     HoldComplete[g[1]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1e71f27e-cc6e-42b4-a2bf-0b186a482d14",
                "parentUUID": "5294bef7-a0b3-4fe7-a73c-9d8d548bba59",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              g[1]\\n  expect:           HoldComplete[g[1]]\\n  expect_evaluated: g[1]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "g[1]",
                    "expected": "HoldComplete[g[1]]"
                }
            },
            {
                "title": "HoldComplete[f[1 + 2]] /. f[x_] :> g[x]    ➡️     HoldComplete[g[1 + 2]]",
                "fullTitle": "HoldComplete[f[1 + 2]] /. f[x_] :> g[x]    ➡️     HoldComplete[g[1 + 2]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2779860c-ddd9-4110-aa3f-8b0afd5cf410",
                "parentUUID": "5294bef7-a0b3-4fe7-a73c-9d8d548bba59",
                "skipped": false,
                "isHook": false,
                "context": "\"# Substitution still happens inside RefLink[HoldComplete,paclet:ref/HoldComplete]:\\n\\n\\ndata: \\n  got:              g[3]\\n  expect:           HoldComplete[g[1 + 2]]\\n  expect_evaluated: g[3]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "g[3]",
                    "expected": "HoldComplete[g[1 + 2]]"
                }
            },
            {
                "title": "ReleaseHold[HoldComplete[Sequence[1, 2]]]    ➡️     Sequence[1, 2]",
                "fullTitle": "ReleaseHold[HoldComplete[Sequence[1, 2]]]    ➡️     Sequence[1, 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "43093504-eb9a-4bb3-982c-6afda27797cf",
                "parentUUID": "5294bef7-a0b3-4fe7-a73c-9d8d548bba59",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[ReleaseHold,paclet:ref/ReleaseHold] removes one level of RefLink[HoldComplete,paclet:ref/HoldComplete]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Hold[1 + 2]    ➡️     Hold[1 + 2]",
                "fullTitle": "Hold[1 + 2]    ➡️     Hold[1 + 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "700494cf-b1ee-46e9-af95-c05c71bd40d5",
                "parentUUID": "5294bef7-a0b3-4fe7-a73c-9d8d548bba59",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Hold,paclet:ref/Hold] is a milder form of RefLink[HoldComplete,paclet:ref/HoldComplete] that allows for some form of evaluation:\\n\\n\\ndata: \\n  got:              3\\n  expect:           Hold[1 + 2]\\n  expect_evaluated: 3\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 3,
                    "expected": "Hold[1 + 2]"
                }
            },
            {
                "title": "Hold[Evaluate[1 + 2]]    ➡️     Hold[3]",
                "fullTitle": "Hold[Evaluate[1 + 2]]    ➡️     Hold[3]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "06fc9ecb-d518-4697-bd64-a802ab0a882c",
                "parentUUID": "5294bef7-a0b3-4fe7-a73c-9d8d548bba59",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              3\\n  expect:           Hold[3]\\n  expect_evaluated: 3\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 3,
                    "expected": "Hold[3]"
                }
            },
            {
                "title": "Hold[Sequence[a, b]]    ➡️     Hold[a, b]",
                "fullTitle": "Hold[Sequence[a, b]]    ➡️     Hold[a, b]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "794e6ecd-7303-46bb-9e3c-c1edc22f0fdf",
                "parentUUID": "5294bef7-a0b3-4fe7-a73c-9d8d548bba59",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              InputForm[a, b]\\n  expect:           Hold[a, b]\\n  expect_evaluated: InputForm[a, b]\"",
                "state": "failed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "InputForm[a, b]",
                    "expected": "Hold[a, b]"
                }
            },
            {
                "title": "Hold[g[1]]    ➡️     1",
                "fullTitle": "Hold[g[1]]    ➡️     1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f12db142-334d-4ac6-a8d4-2dcff9c78cf6",
                "parentUUID": "5294bef7-a0b3-4fe7-a73c-9d8d548bba59",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "ToExpression[\"Sequence[a,b]\", InputForm, HoldComplete]    ➡️     HoldComplete[Sequence[a, b]]",
                "fullTitle": "ToExpression[\"Sequence[a,b]\", InputForm, HoldComplete]    ➡️     HoldComplete[Sequence[a, b]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "720b6975-794f-479c-b84a-ab3a7f8f6979",
                "parentUUID": "5294bef7-a0b3-4fe7-a73c-9d8d548bba59",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[HoldComplete,paclet:ref/HoldComplete] can be used to freeze the result of RefLink[ToExpression,paclet:ref/ToExpression] before it is evaluated:\\n\\n\\ndata: \\n  got:              InputForm[a, b]\\n  expect:           HoldComplete[Sequence[a, b]]\\n  expect_evaluated: InputForm[a, b]\"",
                "state": "failed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "InputForm[a, b]",
                    "expected": "HoldComplete[Sequence[a, b]]"
                }
            },
            {
                "title": "FullForm[HoldComplete[a - b, a/b]]    ➡️     HoldComplete[a - b, a/b]",
                "fullTitle": "FullForm[HoldComplete[a - b, a/b]]    ➡️     HoldComplete[a - b, a/b]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e2067834-2103-4ce9-83aa-334b3b731153",
                "parentUUID": "5294bef7-a0b3-4fe7-a73c-9d8d548bba59",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[HoldComplete,paclet:ref/HoldComplete] affects only evaluation; input transformations are still applied:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "6a89d174-4550-4185-bd0a-49affd901140",
            "a1000ea1-ee47-4269-a872-f3f168ac350b",
            "f641dcbc-c61c-429b-b39c-043c74d5c9cc",
            "1e71f27e-cc6e-42b4-a2bf-0b186a482d14",
            "2779860c-ddd9-4110-aa3f-8b0afd5cf410",
            "43093504-eb9a-4bb3-982c-6afda27797cf",
            "700494cf-b1ee-46e9-af95-c05c71bd40d5",
            "06fc9ecb-d518-4697-bd64-a802ab0a882c",
            "f12db142-334d-4ac6-a8d4-2dcff9c78cf6",
            "e2067834-2103-4ce9-83aa-334b3b731153"
        ],
        "failures": [
            "22d1e28d-3531-44cc-8326-a8171d80896a",
            "c984d34b-1242-456f-87be-ff49e71ca9dc",
            "a5008b5d-ce35-47b7-baeb-1a78aa569cec",
            "794e6ecd-7303-46bb-9e3c-c1edc22f0fdf",
            "720b6975-794f-479c-b84a-ab3a7f8f6979"
        ],
        "skipped": [
            "43093504-eb9a-4bb3-982c-6afda27797cf",
            "f12db142-334d-4ac6-a8d4-2dcff9c78cf6",
            "e2067834-2103-4ce9-83aa-334b3b731153"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "5294bef7-a0b3-4fe7-a73c-9d8d548bba59",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
