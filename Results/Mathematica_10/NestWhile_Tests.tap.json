{
    "stats": {
        "suites": 0,
        "tests": 25,
        "passes": 25,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T12:20:44.848Z",
        "end": "2018-06-03T12:20:44.848Z",
        "duration": 0,
        "testsRegistered": 25,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "NestWhile[#1/2 & , 123456, EvenQ]    ➡️     1929",
                "fullTitle": "NestWhile[#1/2 & , 123456, EvenQ]    ➡️     1929",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6c4cb400-767f-484d-b634-dc81c193580b",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/NestWhile_Tests.m\\n#! {10}\\n#! {10, 5}\\n#! {10, 5, 2}\\n#! {10, 5, 2, 1}\\n#! {10, 5, 2, 1, 0}\\n#! {10, 5, 2, 1, 0, 0}\\n#! {10, 5, 2, 1}\\n#! {5, 2, 1, 0}\\n#! {2, 1, 0, 0}\\n#! {10, 5, 2, 1}\\n#! {10, 5, 2, 1, 0}\\n#! {10, 5, 2, 1, 0, 0}\\n# SYSTEM: Mathematica_10\\n# TEST: NestWhile_Tests\\n# Keep dividing by 2 until the result is no longer an even number:\\n\\n\\ndata: \\n  got:              1929\\n  expect:           1929\\n  expect_evaluated: 1929\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1929,
                    "expected": 1929
                }
            },
            {
                "title": "NestWhile[Log, 100, #1 > 0 & ]    ➡️     Log[Log[Log[Log[100]]]]",
                "fullTitle": "NestWhile[Log, 100, #1 > 0 & ]    ➡️     Log[Log[Log[Log[100]]]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "66df4270-77cf-4d0d-a602-8a09fcad70cf",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# Iterate taking logarithms until the result is no longer positive:\\n\\n\\ndata: \\n  got:              Log[Log[Log[Log[100]]]]\\n  expect:           Log[Log[Log[Log[100]]]]\\n  expect_evaluated: Log[Log[Log[Log[100]]]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Log[Log[Log[Log[100]]]]",
                    "expected": "Log[Log[Log[Log[100]]]]"
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 2]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 2]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ec7ab4fe-3d90-4609-97a6-33a8c27d7e62",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare the last two values generated:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , All]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , All]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "542e0451-0a9c-4fae-876c-85a3c33a9d8c",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# Always compare all values generated:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , 4]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , 4]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bc798877-011b-4c38-bca7-bf5fa2ff7bb0",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# Start comparisons after 4 iterations, and compare using the 4 last values:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , {4, 6}]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , {4, 6}]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7b5d4841-4b0f-4e9c-a0cd-b0486a0a0dba",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# Start comparisons after 4 iterations, and compare using the 6 last values:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[#1/2 & , 123456, EvenQ, 1, 4]    ➡️     7716",
                "fullTitle": "NestWhile[#1/2 & , 123456, EvenQ, 1, 4]    ➡️     7716",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f60e565c-bd03-46f6-9729-8bbc5fb6710f",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# Stop after at most 4 iterations, even if the test is still RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              7716\\n  expect:           7716\\n  expect_evaluated: 7716\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 7716,
                    "expected": 7716
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity]    ➡️     1",
                "fullTitle": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity]    ➡️     1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f78ecdc5-7249-4f80-9d8b-8a8b98338f2b",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# Continue until the result is no longer greater than 1:\\n\\n\\ndata: \\n  got:              1\\n  expect:           1\\n  expect_evaluated: 1\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1,
                    "expected": 1
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, 1]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, 1]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6f5a16aa-ee8d-422e-aeca-a38dcffef645",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# Perform one more step after the condition is no longer RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, -1]    ➡️     2",
                "fullTitle": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, -1]    ➡️     2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b9cbddfe-72b0-4883-8d9a-7c1ddd6079bc",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# Return the last value for which the condition was still RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              2\\n  expect:           2\\n  expect_evaluated: 2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 2,
                    "expected": 2
                }
            },
            {
                "title": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] & ]    ➡️     907",
                "fullTitle": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] & ]    ➡️     907",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8f0e2a0e-cf9a-418a-a82a-fd0012ea1acd",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the next prime after 888:\\n\\n\\ndata: \\n  got:              907\\n  expect:           907\\n  expect_evaluated: 907\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 907,
                    "expected": 907
                }
            },
            {
                "title": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] ||  !PrimeQ[#3] & , 3]    ➡️     1021",
                "fullTitle": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] ||  !PrimeQ[#3] & , 3]    ➡️     1021",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f1af531f-cb62-42c5-a7ae-350331d47ba9",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the next twin prime after 888:\\n\\n\\ndata: \\n  got:              1021\\n  expect:           1021\\n  expect_evaluated: 1021\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1021,
                    "expected": 1021
                }
            },
            {
                "title": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & ]    ➡️     31",
                "fullTitle": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & ]    ➡️     31",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "89122456-3b85-4899-84b2-8f62d40c98a0",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the index of the first Fibonacci number above a million:\\n\\n\\ndata: \\n  got:              31\\n  expect:           31\\n  expect_evaluated: 31\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 31,
                    "expected": 31
                }
            },
            {
                "title": "Fibonacci[%]    ➡️     1346269",
                "fullTitle": "Fibonacci[%]    ➡️     1346269",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d2b17383-1018-43a9-aa17-37837410734c",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[ListLinePlot[Table[NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= n & ], {n, 200}]]]    ➡️     $Failed # skip",
                "fullTitle": "HoldComplete[ListLinePlot[Table[NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= n & ], {n, 200}]]]    ➡️     $Failed # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d0cfb616-0dd4-4491-9849-0e7a5fdc76b1",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & , 1, Infinity, -1]    ➡️     30",
                "fullTitle": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & , 1, Infinity, -1]    ➡️     30",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ee7ee5c2-5898-41bf-9ba2-e7f489cf41a5",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the index of the last Fibonacci number below a million:\\n\\n\\ndata: \\n  got:              30\\n  expect:           30\\n  expect_evaluated: 30\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 30,
                    "expected": 30
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, UnsameQ, {4, 4}]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, UnsameQ, {4, 4}]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d2079dab-ef12-4191-beb0-dfdaa5d07869",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# These two forms are equivalent:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 4]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 4]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2dbf9e3b-f8cd-4fd3-8c0c-e20a58f6d486",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , a, Positive]    ➡️     a",
                "fullTitle": "NestWhile[Floor[#1/2] & , a, Positive]    ➡️     a",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2d15532e-f6f7-4743-8cdc-14df9ff3edb9",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NestWhile,paclet:ref/NestWhile] returns if the condition returns anything other then RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              a\\n  expect:           a\\n  expect_evaluated: a\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a",
                    "expected": "a"
                }
            },
            {
                "title": "Positive[a]    ➡️     Positive[a]",
                "fullTitle": "Positive[a]    ➡️     Positive[a]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bc89e233-026f-4ecd-bc73-94562c03e7c0",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# The outcome of a condition need not be RefLink[True,paclet:ref/True] or RefLink[False,paclet:ref/False]:\\n\\n\\ndata: \\n  got:              Positive[a]\\n  expect:           Positive[a]\\n  expect_evaluated: Positive[a]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Positive[a]",
                    "expected": "Positive[a]"
                }
            },
            {
                "title": "NestWhile[Cos, 1., UnsameQ, 2]    ➡️     0.739085",
                "fullTitle": "NestWhile[Cos, 1., UnsameQ, 2]    ➡️     0.739085",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "eacc5483-6890-4b03-b07d-7f898fd8e590",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[FixedPoint,paclet:ref/FixedPoint] always compares the last two values; these two forms are equivalent:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "FixedPoint[Cos, 1.]    ➡️     0.739085",
                "fullTitle": "FixedPoint[Cos, 1.]    ➡️     0.739085",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a8dec592-6ecf-4c61-a21a-5a4300fc6fe1",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NestWhileList[(#1 + 3/#1)/2 & , 1., Unequal, 2]    ➡️     {1., 2., 1.75, 1.73214, 1.73205, 1.73205, 1.73205} # skip",
                "fullTitle": "NestWhileList[(#1 + 3/#1)/2 & , 1., Unequal, 2]    ➡️     {1., 2., 1.75, 1.73214, 1.73205, 1.73205, 1.73205} # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "79c79a51-64c6-4ad9-9d7e-8270e845620d",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NestWhileList,paclet:ref/NestWhileList] applies the same stopping criteria, but returns all values generated:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, #1 > 0 & ]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, #1 > 0 & ]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6ff2b504-6844-414c-8aca-7c647ce07d86",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NestWhile,paclet:ref/NestWhile] can be expressed in terms of a RefLink[While,paclet:ref/While] loop:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "x = 10; While[x > 0, x = Floor[x/2]]; x    ➡️     0",
                "fullTitle": "x = 10; While[x > 0, x = Floor[x/2]]; x    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a7472755-ca04-4bbc-ae9c-14f977a342b0",
                "parentUUID": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "6c4cb400-767f-484d-b634-dc81c193580b",
            "66df4270-77cf-4d0d-a602-8a09fcad70cf",
            "ec7ab4fe-3d90-4609-97a6-33a8c27d7e62",
            "542e0451-0a9c-4fae-876c-85a3c33a9d8c",
            "bc798877-011b-4c38-bca7-bf5fa2ff7bb0",
            "7b5d4841-4b0f-4e9c-a0cd-b0486a0a0dba",
            "f60e565c-bd03-46f6-9729-8bbc5fb6710f",
            "f78ecdc5-7249-4f80-9d8b-8a8b98338f2b",
            "6f5a16aa-ee8d-422e-aeca-a38dcffef645",
            "b9cbddfe-72b0-4883-8d9a-7c1ddd6079bc",
            "8f0e2a0e-cf9a-418a-a82a-fd0012ea1acd",
            "f1af531f-cb62-42c5-a7ae-350331d47ba9",
            "89122456-3b85-4899-84b2-8f62d40c98a0",
            "d2b17383-1018-43a9-aa17-37837410734c",
            "d0cfb616-0dd4-4491-9849-0e7a5fdc76b1",
            "ee7ee5c2-5898-41bf-9ba2-e7f489cf41a5",
            "d2079dab-ef12-4191-beb0-dfdaa5d07869",
            "2dbf9e3b-f8cd-4fd3-8c0c-e20a58f6d486",
            "2d15532e-f6f7-4743-8cdc-14df9ff3edb9",
            "bc89e233-026f-4ecd-bc73-94562c03e7c0",
            "eacc5483-6890-4b03-b07d-7f898fd8e590",
            "a8dec592-6ecf-4c61-a21a-5a4300fc6fe1",
            "79c79a51-64c6-4ad9-9d7e-8270e845620d",
            "6ff2b504-6844-414c-8aca-7c647ce07d86",
            "a7472755-ca04-4bbc-ae9c-14f977a342b0"
        ],
        "failures": [],
        "skipped": [
            "d2b17383-1018-43a9-aa17-37837410734c",
            "eacc5483-6890-4b03-b07d-7f898fd8e590",
            "a8dec592-6ecf-4c61-a21a-5a4300fc6fe1"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "59a325eb-2e92-4228-a2bd-0ed0d832b038",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
