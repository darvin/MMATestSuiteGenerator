{
    "stats": {
        "suites": 0,
        "tests": 25,
        "passes": 25,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T23:02:04.060Z",
        "end": "2018-06-03T23:02:04.060Z",
        "duration": 0,
        "testsRegistered": 25,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "NestWhile[#1/2 & , 123456, EvenQ]    ➡️     1929",
                "fullTitle": "NestWhile[#1/2 & , 123456, EvenQ]    ➡️     1929",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "63dca924-04f6-4f43-98a4-00f0d9af14c5",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/NestWhile_Tests.m\\n#! {10}\\n#! {10, 5}\\n#! {10, 5, 2}\\n#! {10, 5, 2, 1}\\n#! {10, 5, 2, 1, 0}\\n#! {10, 5, 2, 1, 0, 0}\\n#! {10, 5, 2, 1}\\n#! {5, 2, 1, 0}\\n#! {2, 1, 0, 0}\\n#! {10, 5, 2, 1}\\n#! {10, 5, 2, 1, 0}\\n#! {10, 5, 2, 1, 0, 0}\\n# SYSTEM: Mathematica_10\\n# TEST: NestWhile_Tests\\n# Keep dividing by 2 until the result is no longer an even number:\\n\\n\\ndata: \\n  got:              1929\\n  expect:           1929\\n  expect_evaluated: 1929\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1929,
                    "expected": 1929
                }
            },
            {
                "title": "NestWhile[Log, 100, #1 > 0 & ]    ➡️     Log[Log[Log[Log[100]]]]",
                "fullTitle": "NestWhile[Log, 100, #1 > 0 & ]    ➡️     Log[Log[Log[Log[100]]]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "18b5dacb-506f-4979-82e2-2eb614a231c4",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Iterate taking logarithms until the result is no longer positive:\\n\\n\\ndata: \\n  got:              Log[Log[Log[Log[100]]]]\\n  expect:           Log[Log[Log[Log[100]]]]\\n  expect_evaluated: Log[Log[Log[Log[100]]]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Log[Log[Log[Log[100]]]]",
                    "expected": "Log[Log[Log[Log[100]]]]"
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 2]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 2]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "39bdf098-f5a5-412e-b666-c0de350be852",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare the last two values generated:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , All]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , All]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c4e19ac0-910c-427c-a51f-fee9c2ba8902",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Always compare all values generated:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , 4]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , 4]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "44bc1c2a-0e92-4631-a871-eba7bed39e62",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Start comparisons after 4 iterations, and compare using the 4 last values:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , {4, 6}]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , {4, 6}]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "de0d9f7e-bc7c-430e-bce4-249adf5ebeb4",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Start comparisons after 4 iterations, and compare using the 6 last values:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[#1/2 & , 123456, EvenQ, 1, 4]    ➡️     7716",
                "fullTitle": "NestWhile[#1/2 & , 123456, EvenQ, 1, 4]    ➡️     7716",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6de5e874-9088-4f9b-a92b-c0cd8330cb9d",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Stop after at most 4 iterations, even if the test is still RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              7716\\n  expect:           7716\\n  expect_evaluated: 7716\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 7716,
                    "expected": 7716
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity]    ➡️     1",
                "fullTitle": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity]    ➡️     1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3e94d953-84a7-4678-816d-c4b058a4e210",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Continue until the result is no longer greater than 1:\\n\\n\\ndata: \\n  got:              1\\n  expect:           1\\n  expect_evaluated: 1\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1,
                    "expected": 1
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, 1]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, 1]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cfde7e1b-3686-4d04-9ebd-e52e0c959076",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Perform one more step after the condition is no longer RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, -1]    ➡️     2",
                "fullTitle": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, -1]    ➡️     2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a8baa215-472c-4341-ab89-aa4fb6ad549e",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Return the last value for which the condition was still RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              2\\n  expect:           2\\n  expect_evaluated: 2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 2,
                    "expected": 2
                }
            },
            {
                "title": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] & ]    ➡️     907",
                "fullTitle": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] & ]    ➡️     907",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6857ce15-b01a-42bb-8d8e-825f8d156e54",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the next prime after 888:\\n\\n\\ndata: \\n  got:              907\\n  expect:           907\\n  expect_evaluated: 907\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 907,
                    "expected": 907
                }
            },
            {
                "title": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] ||  !PrimeQ[#3] & , 3]    ➡️     1021",
                "fullTitle": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] ||  !PrimeQ[#3] & , 3]    ➡️     1021",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4f11f058-f541-4c5b-b551-bae435e8ee6c",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the next twin prime after 888:\\n\\n\\ndata: \\n  got:              1021\\n  expect:           1021\\n  expect_evaluated: 1021\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1021,
                    "expected": 1021
                }
            },
            {
                "title": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & ]    ➡️     31",
                "fullTitle": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & ]    ➡️     31",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "51416b81-1886-4c6f-aa5b-07b2df6a4543",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the index of the first Fibonacci number above a million:\\n\\n\\ndata: \\n  got:              31\\n  expect:           31\\n  expect_evaluated: 31\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 31,
                    "expected": 31
                }
            },
            {
                "title": "Fibonacci[%]    ➡️     1346269",
                "fullTitle": "Fibonacci[%]    ➡️     1346269",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1f93c2ed-2791-4a19-a20b-1053f07cead3",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[ListLinePlot[Table[NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= n & ], {n, 200}]]]    ➡️     $Failed # skip",
                "fullTitle": "HoldComplete[ListLinePlot[Table[NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= n & ], {n, 200}]]]    ➡️     $Failed # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "85ab407f-69b1-4ef9-8495-d00b3fcd8c9a",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & , 1, Infinity, -1]    ➡️     30",
                "fullTitle": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & , 1, Infinity, -1]    ➡️     30",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "10d5e822-2c62-4566-b386-a6b3274d9210",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the index of the last Fibonacci number below a million:\\n\\n\\ndata: \\n  got:              30\\n  expect:           30\\n  expect_evaluated: 30\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 30,
                    "expected": 30
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, UnsameQ, {4, 4}]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, UnsameQ, {4, 4}]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1ffa5900-639e-41b8-babc-c790ac7c5aab",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# These two forms are equivalent:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 4]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 4]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ee549e31-18dd-4f79-bbb5-bb988fa04d1a",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , a, Positive]    ➡️     a",
                "fullTitle": "NestWhile[Floor[#1/2] & , a, Positive]    ➡️     a",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "50953424-7069-4543-948b-3b9f5c07fa3e",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NestWhile,paclet:ref/NestWhile] returns if the condition returns anything other then RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              a\\n  expect:           a\\n  expect_evaluated: a\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a",
                    "expected": "a"
                }
            },
            {
                "title": "Positive[a]    ➡️     Positive[a]",
                "fullTitle": "Positive[a]    ➡️     Positive[a]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4520866c-3987-46db-a0b5-8177151ac5b4",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# The outcome of a condition need not be RefLink[True,paclet:ref/True] or RefLink[False,paclet:ref/False]:\\n\\n\\ndata: \\n  got:              Positive[a]\\n  expect:           Positive[a]\\n  expect_evaluated: Positive[a]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Positive[a]",
                    "expected": "Positive[a]"
                }
            },
            {
                "title": "NestWhile[Cos, 1., UnsameQ, 2]    ➡️     0.739085",
                "fullTitle": "NestWhile[Cos, 1., UnsameQ, 2]    ➡️     0.739085",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9716c19c-e1d4-4d30-9528-833ba61bd3da",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[FixedPoint,paclet:ref/FixedPoint] always compares the last two values; these two forms are equivalent:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "FixedPoint[Cos, 1.]    ➡️     0.739085",
                "fullTitle": "FixedPoint[Cos, 1.]    ➡️     0.739085",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "da5247f4-bb3b-41a4-8627-091e5472ecbe",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NestWhileList[(#1 + 3/#1)/2 & , 1., Unequal, 2]    ➡️     {1., 2., 1.75, 1.73214, 1.73205, 1.73205, 1.73205} # skip",
                "fullTitle": "NestWhileList[(#1 + 3/#1)/2 & , 1., Unequal, 2]    ➡️     {1., 2., 1.75, 1.73214, 1.73205, 1.73205, 1.73205} # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "032e284a-3e58-484d-ae2f-673fa787a2b3",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NestWhileList,paclet:ref/NestWhileList] applies the same stopping criteria, but returns all values generated:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, #1 > 0 & ]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, #1 > 0 & ]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f93d4bcb-71e8-4867-b1e8-bb4f07c929ce",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NestWhile,paclet:ref/NestWhile] can be expressed in terms of a RefLink[While,paclet:ref/While] loop:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "x = 10; While[x > 0, x = Floor[x/2]]; x    ➡️     0",
                "fullTitle": "x = 10; While[x > 0, x = Floor[x/2]]; x    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d231847b-febb-4b8d-ae50-6053f777d9d8",
                "parentUUID": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "63dca924-04f6-4f43-98a4-00f0d9af14c5",
            "18b5dacb-506f-4979-82e2-2eb614a231c4",
            "39bdf098-f5a5-412e-b666-c0de350be852",
            "c4e19ac0-910c-427c-a51f-fee9c2ba8902",
            "44bc1c2a-0e92-4631-a871-eba7bed39e62",
            "de0d9f7e-bc7c-430e-bce4-249adf5ebeb4",
            "6de5e874-9088-4f9b-a92b-c0cd8330cb9d",
            "3e94d953-84a7-4678-816d-c4b058a4e210",
            "cfde7e1b-3686-4d04-9ebd-e52e0c959076",
            "a8baa215-472c-4341-ab89-aa4fb6ad549e",
            "6857ce15-b01a-42bb-8d8e-825f8d156e54",
            "4f11f058-f541-4c5b-b551-bae435e8ee6c",
            "51416b81-1886-4c6f-aa5b-07b2df6a4543",
            "1f93c2ed-2791-4a19-a20b-1053f07cead3",
            "85ab407f-69b1-4ef9-8495-d00b3fcd8c9a",
            "10d5e822-2c62-4566-b386-a6b3274d9210",
            "1ffa5900-639e-41b8-babc-c790ac7c5aab",
            "ee549e31-18dd-4f79-bbb5-bb988fa04d1a",
            "50953424-7069-4543-948b-3b9f5c07fa3e",
            "4520866c-3987-46db-a0b5-8177151ac5b4",
            "9716c19c-e1d4-4d30-9528-833ba61bd3da",
            "da5247f4-bb3b-41a4-8627-091e5472ecbe",
            "032e284a-3e58-484d-ae2f-673fa787a2b3",
            "f93d4bcb-71e8-4867-b1e8-bb4f07c929ce",
            "d231847b-febb-4b8d-ae50-6053f777d9d8"
        ],
        "failures": [],
        "skipped": [
            "1f93c2ed-2791-4a19-a20b-1053f07cead3",
            "9716c19c-e1d4-4d30-9528-833ba61bd3da",
            "da5247f4-bb3b-41a4-8627-091e5472ecbe"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "0595d139-9746-4bbd-8078-4eb6a5bc1bf8",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
