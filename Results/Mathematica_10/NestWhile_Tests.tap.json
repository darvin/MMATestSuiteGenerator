{
    "stats": {
        "suites": 0,
        "tests": 25,
        "passes": 25,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-02T19:35:22.167Z",
        "end": "2018-06-02T19:35:22.167Z",
        "duration": 0,
        "testsRegistered": 25,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "NestWhile[#1/2 & , 123456, EvenQ]    ➡️     1929",
                "fullTitle": "NestWhile[#1/2 & , 123456, EvenQ]    ➡️     1929",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d0fc9b77-804a-4f1d-95e4-f682198df281",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# SYSTEM: Mathematica_10\\n# TEST: NestWhile_Tests\\n# OUTPUT: output/Results/Mathematica_10/NestWhile_Tests.json\\n# Keep dividing by 2 until the result is no longer an even number:\\n\\n\\ndata: \\n  got:              1929\\n  expect:           1929\\n  expect_evaluated: 1929\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1929,
                    "expected": 1929
                }
            },
            {
                "title": "NestWhile[Log, 100, #1 > 0 & ]    ➡️     Log[Log[Log[Log[100]]]]",
                "fullTitle": "NestWhile[Log, 100, #1 > 0 & ]    ➡️     Log[Log[Log[Log[100]]]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "75aee58c-24fe-4c8f-a3e3-b7aded24d3cd",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# Iterate taking logarithms until the result is no longer positive:\\n\\n\\ndata: \\n  got:              Log[Log[Log[Log[100]]]]\\n  expect:           Log[Log[Log[Log[100]]]]\\n  expect_evaluated: Log[Log[Log[Log[100]]]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Log[Log[Log[Log[100]]]]",
                    "expected": "Log[Log[Log[Log[100]]]]"
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 2]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 2]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a4f079e5-9e43-4739-99c5-27313b2ffdf8",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare the last two values generated:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , All]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , All]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e0cef681-2a27-43e0-9f5d-cbc338a92234",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# Always compare all values generated:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , 4]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , 4]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f5c87cbc-9793-43e4-bf7e-a6027f61e5c1",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# Start comparisons after 4 iterations, and compare using the 4 last values:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , {4, 6}]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , {4, 6}]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2280cf27-383a-4a45-89c1-6baee1c27bdf",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# Start comparisons after 4 iterations, and compare using the 6 last values:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[#1/2 & , 123456, EvenQ, 1, 4]    ➡️     7716",
                "fullTitle": "NestWhile[#1/2 & , 123456, EvenQ, 1, 4]    ➡️     7716",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7e0f7b10-fbf8-489b-9abb-f91e3f82a64d",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# Stop after at most 4 iterations, even if the test is still RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              7716\\n  expect:           7716\\n  expect_evaluated: 7716\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 7716,
                    "expected": 7716
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity]    ➡️     1",
                "fullTitle": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity]    ➡️     1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3a0f5417-b4e4-4e8d-93e8-e01b044a50fc",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# Continue until the result is no longer greater than 1:\\n\\n\\ndata: \\n  got:              1\\n  expect:           1\\n  expect_evaluated: 1\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1,
                    "expected": 1
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, 1]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, 1]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b48e08c9-6668-4036-9e2f-f5a699a22062",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# Perform one more step after the condition is no longer RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, -1]    ➡️     2",
                "fullTitle": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, -1]    ➡️     2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fe92e82b-8601-4946-bbee-17cdf66096ee",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# Return the last value for which the condition was still RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              2\\n  expect:           2\\n  expect_evaluated: 2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 2,
                    "expected": 2
                }
            },
            {
                "title": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] & ]    ➡️     907",
                "fullTitle": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] & ]    ➡️     907",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e8ada76a-0d99-4186-b2c2-426c9fd76014",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the next prime after 888:\\n\\n\\ndata: \\n  got:              907\\n  expect:           907\\n  expect_evaluated: 907\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 907,
                    "expected": 907
                }
            },
            {
                "title": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] ||  !PrimeQ[#3] & , 3]    ➡️     1021",
                "fullTitle": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] ||  !PrimeQ[#3] & , 3]    ➡️     1021",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8ae66eeb-3a92-43db-99b0-7fed810313b9",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the next twin prime after 888:\\n\\n\\ndata: \\n  got:              1021\\n  expect:           1021\\n  expect_evaluated: 1021\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1021,
                    "expected": 1021
                }
            },
            {
                "title": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & ]    ➡️     31",
                "fullTitle": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & ]    ➡️     31",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8fbdcef8-579e-4a41-9646-c7768524aa9a",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the index of the first Fibonacci number above a million:\\n\\n\\ndata: \\n  got:              31\\n  expect:           31\\n  expect_evaluated: 31\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 31,
                    "expected": 31
                }
            },
            {
                "title": "Fibonacci[%]    ➡️     1346269",
                "fullTitle": "Fibonacci[%]    ➡️     1346269",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "648ac11d-e268-4e06-9b0b-effecec0e592",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[ListLinePlot[Table[NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= n & ], {n, 200}]]]    ➡️     $Failed # skip",
                "fullTitle": "HoldComplete[ListLinePlot[Table[NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= n & ], {n, 200}]]]    ➡️     $Failed # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b2aa2acd-8471-4ac6-9a5f-ebef86bae202",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & , 1, Infinity, -1]    ➡️     30",
                "fullTitle": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & , 1, Infinity, -1]    ➡️     30",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6fcbc1c9-d1a2-4c5b-af5d-e1db1cee31e5",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the index of the last Fibonacci number below a million:\\n\\n\\ndata: \\n  got:              30\\n  expect:           30\\n  expect_evaluated: 30\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 30,
                    "expected": 30
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, UnsameQ, {4, 4}]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, UnsameQ, {4, 4}]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b74588bf-7dd0-405e-bab6-87eba270ca2c",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# These two forms are equivalent:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 4]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 4]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a07c13db-ec17-4014-802b-f8d00b88ce12",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , a, Positive]    ➡️     a",
                "fullTitle": "NestWhile[Floor[#1/2] & , a, Positive]    ➡️     a",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5003c00c-9aba-4d79-b0c4-f395095c3212",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NestWhile,paclet:ref/NestWhile] returns if the condition returns anything other then RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              a\\n  expect:           a\\n  expect_evaluated: a\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a",
                    "expected": "a"
                }
            },
            {
                "title": "Positive[a]    ➡️     Positive[a]",
                "fullTitle": "Positive[a]    ➡️     Positive[a]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5f76a692-8849-46ee-aca9-6ddcc75aee1f",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# The outcome of a condition need not be RefLink[True,paclet:ref/True] or RefLink[False,paclet:ref/False]:\\n\\n\\ndata: \\n  got:              Positive[a]\\n  expect:           Positive[a]\\n  expect_evaluated: Positive[a]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Positive[a]",
                    "expected": "Positive[a]"
                }
            },
            {
                "title": "NestWhile[Cos, 1., UnsameQ, 2]    ➡️     0.739085",
                "fullTitle": "NestWhile[Cos, 1., UnsameQ, 2]    ➡️     0.739085",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "daad2b09-b07e-4ff5-b216-773de7030ab5",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[FixedPoint,paclet:ref/FixedPoint] always compares the last two values; these two forms are equivalent:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "FixedPoint[Cos, 1.]    ➡️     0.739085",
                "fullTitle": "FixedPoint[Cos, 1.]    ➡️     0.739085",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f3786093-5ffe-4f1a-a0a3-dae0dd915a0a",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NestWhileList[(#1 + 3/#1)/2 & , 1., Unequal, 2]    ➡️     {1., 2., 1.75, 1.73214, 1.73205, 1.73205, 1.73205} # skip",
                "fullTitle": "NestWhileList[(#1 + 3/#1)/2 & , 1., Unequal, 2]    ➡️     {1., 2., 1.75, 1.73214, 1.73205, 1.73205, 1.73205} # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cdded9c3-8102-40d3-85d7-51063eed4df5",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NestWhileList,paclet:ref/NestWhileList] applies the same stopping criteria, but returns all values generated:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, #1 > 0 & ]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, #1 > 0 & ]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3255770d-1e76-4dd1-b333-70e48f660b4a",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NestWhile,paclet:ref/NestWhile] can be expressed in terms of a RefLink[While,paclet:ref/While] loop:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "x = 10; While[x > 0, x = Floor[x/2]]; x    ➡️     0",
                "fullTitle": "x = 10; While[x > 0, x = Floor[x/2]]; x    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9a5218e5-c11b-4066-8a5f-60369a80b43b",
                "parentUUID": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "d0fc9b77-804a-4f1d-95e4-f682198df281",
            "75aee58c-24fe-4c8f-a3e3-b7aded24d3cd",
            "a4f079e5-9e43-4739-99c5-27313b2ffdf8",
            "e0cef681-2a27-43e0-9f5d-cbc338a92234",
            "f5c87cbc-9793-43e4-bf7e-a6027f61e5c1",
            "2280cf27-383a-4a45-89c1-6baee1c27bdf",
            "7e0f7b10-fbf8-489b-9abb-f91e3f82a64d",
            "3a0f5417-b4e4-4e8d-93e8-e01b044a50fc",
            "b48e08c9-6668-4036-9e2f-f5a699a22062",
            "fe92e82b-8601-4946-bbee-17cdf66096ee",
            "e8ada76a-0d99-4186-b2c2-426c9fd76014",
            "8ae66eeb-3a92-43db-99b0-7fed810313b9",
            "8fbdcef8-579e-4a41-9646-c7768524aa9a",
            "648ac11d-e268-4e06-9b0b-effecec0e592",
            "b2aa2acd-8471-4ac6-9a5f-ebef86bae202",
            "6fcbc1c9-d1a2-4c5b-af5d-e1db1cee31e5",
            "b74588bf-7dd0-405e-bab6-87eba270ca2c",
            "a07c13db-ec17-4014-802b-f8d00b88ce12",
            "5003c00c-9aba-4d79-b0c4-f395095c3212",
            "5f76a692-8849-46ee-aca9-6ddcc75aee1f",
            "daad2b09-b07e-4ff5-b216-773de7030ab5",
            "f3786093-5ffe-4f1a-a0a3-dae0dd915a0a",
            "cdded9c3-8102-40d3-85d7-51063eed4df5",
            "3255770d-1e76-4dd1-b333-70e48f660b4a",
            "9a5218e5-c11b-4066-8a5f-60369a80b43b"
        ],
        "failures": [],
        "skipped": [
            "648ac11d-e268-4e06-9b0b-effecec0e592",
            "daad2b09-b07e-4ff5-b216-773de7030ab5",
            "f3786093-5ffe-4f1a-a0a3-dae0dd915a0a"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "6e69ef14-36f4-4f77-af91-25dcc6b37fc9",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
