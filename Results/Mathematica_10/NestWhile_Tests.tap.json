{
    "stats": {
        "suites": 0,
        "tests": 25,
        "passes": 25,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-02T18:10:50.223Z",
        "end": "2018-06-02T18:10:50.223Z",
        "duration": 0,
        "testsRegistered": 25,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "NestWhile[#1/2 & , 123456, EvenQ]    ➡️     1929",
                "fullTitle": "NestWhile[#1/2 & , 123456, EvenQ]    ➡️     1929",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "40e2e4e0-420b-433e-a156-eab621e6b7cf",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# SYSTEM: Mathematica_10\\n# TEST: NestWhile_Tests\\n# OUTPUT: output/Results/Mathematica_10/NestWhile_Tests.json\\n# Keep dividing by 2 until the result is no longer an even number:\\n\\n\\ndata: \\n  got:              1929\\n  expect:           1929\\n  expect_evaluated: 1929\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1929,
                    "expected": 1929
                }
            },
            {
                "title": "NestWhile[Log, 100, #1 > 0 & ]    ➡️     Log[Log[Log[Log[100]]]]",
                "fullTitle": "NestWhile[Log, 100, #1 > 0 & ]    ➡️     Log[Log[Log[Log[100]]]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2c36b8b3-e24c-43ed-9db7-0ee1b4ddab91",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# Iterate taking logarithms until the result is no longer positive:\\n\\n\\ndata: \\n  got:              Log[Log[Log[Log[100]]]]\\n  expect:           Log[Log[Log[Log[100]]]]\\n  expect_evaluated: Log[Log[Log[Log[100]]]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Log[Log[Log[Log[100]]]]",
                    "expected": "Log[Log[Log[Log[100]]]]"
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 2]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 2]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b3c55ca0-646e-459b-bd7e-3ce5a6daf02e",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare the last two values generated:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , All]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , All]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d5051c99-8d27-4bf4-97bc-3a708c1968ec",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# Always compare all values generated:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , 4]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , 4]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e92b7701-a1d6-4779-8233-23cb10fb1440",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# Start comparisons after 4 iterations, and compare using the 4 last values:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , {4, 6}]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , {4, 6}]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2390ecce-5a36-4a52-a5ab-42857df84735",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# Start comparisons after 4 iterations, and compare using the 6 last values:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[#1/2 & , 123456, EvenQ, 1, 4]    ➡️     7716",
                "fullTitle": "NestWhile[#1/2 & , 123456, EvenQ, 1, 4]    ➡️     7716",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5d3c4e46-267a-420e-b33c-1165d7900f82",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# Stop after at most 4 iterations, even if the test is still RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              7716\\n  expect:           7716\\n  expect_evaluated: 7716\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 7716,
                    "expected": 7716
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity]    ➡️     1",
                "fullTitle": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity]    ➡️     1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f4e7da62-2035-459e-9c01-10fc4c283e9a",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# Continue until the result is no longer greater than 1:\\n\\n\\ndata: \\n  got:              1\\n  expect:           1\\n  expect_evaluated: 1\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1,
                    "expected": 1
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, 1]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, 1]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7bcf20fa-9ccc-41ab-a914-267e9fb5cf94",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# Perform one more step after the condition is no longer RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, -1]    ➡️     2",
                "fullTitle": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, -1]    ➡️     2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "599251f4-395e-42e4-a259-4ed8ad0ba2d1",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# Return the last value for which the condition was still RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              2\\n  expect:           2\\n  expect_evaluated: 2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 2,
                    "expected": 2
                }
            },
            {
                "title": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] & ]    ➡️     907",
                "fullTitle": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] & ]    ➡️     907",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "be0aa3ad-4f8b-4c8b-860b-3728622d28df",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the next prime after 888:\\n\\n\\ndata: \\n  got:              907\\n  expect:           907\\n  expect_evaluated: 907\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 907,
                    "expected": 907
                }
            },
            {
                "title": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] ||  !PrimeQ[#3] & , 3]    ➡️     1021",
                "fullTitle": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] ||  !PrimeQ[#3] & , 3]    ➡️     1021",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cd3b8bee-f28d-46f3-981c-cc4068621331",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the next twin prime after 888:\\n\\n\\ndata: \\n  got:              1021\\n  expect:           1021\\n  expect_evaluated: 1021\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1021,
                    "expected": 1021
                }
            },
            {
                "title": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & ]    ➡️     31",
                "fullTitle": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & ]    ➡️     31",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "89bf87ef-eeb9-4482-875f-2bcb21ae9a46",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the index of the first Fibonacci number above a million:\\n\\n\\ndata: \\n  got:              31\\n  expect:           31\\n  expect_evaluated: 31\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 31,
                    "expected": 31
                }
            },
            {
                "title": "Fibonacci[%]    ➡️     1346269",
                "fullTitle": "Fibonacci[%]    ➡️     1346269",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "56167cff-30e9-4124-987e-f5fd97156ad9",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[ListLinePlot[Table[NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= n & ], {n, 200}]]]    ➡️     $Failed # skip",
                "fullTitle": "HoldComplete[ListLinePlot[Table[NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= n & ], {n, 200}]]]    ➡️     $Failed # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0dd4fbd5-b779-4d14-bb47-3b8be43cbe6d",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & , 1, Infinity, -1]    ➡️     30",
                "fullTitle": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & , 1, Infinity, -1]    ➡️     30",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "989474eb-3378-41a7-9ea0-808024549067",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the index of the last Fibonacci number below a million:\\n\\n\\ndata: \\n  got:              30\\n  expect:           30\\n  expect_evaluated: 30\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 30,
                    "expected": 30
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, UnsameQ, {4, 4}]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, UnsameQ, {4, 4}]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7a329391-ad6b-4f0c-a89d-420221041f1b",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# These two forms are equivalent:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 4]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 4]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3e89b7de-df66-4282-9a78-ca365eb3c7b3",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , a, Positive]    ➡️     a",
                "fullTitle": "NestWhile[Floor[#1/2] & , a, Positive]    ➡️     a",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8176d2d1-18b7-428a-b3fc-b28ad7d3f1c4",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NestWhile,paclet:ref/NestWhile] returns if the condition returns anything other then RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              a\\n  expect:           a\\n  expect_evaluated: a\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a",
                    "expected": "a"
                }
            },
            {
                "title": "Positive[a]    ➡️     Positive[a]",
                "fullTitle": "Positive[a]    ➡️     Positive[a]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8120cd9c-1b1d-48d9-b5f4-a68e64ca6532",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# The outcome of a condition need not be RefLink[True,paclet:ref/True] or RefLink[False,paclet:ref/False]:\\n\\n\\ndata: \\n  got:              Positive[a]\\n  expect:           Positive[a]\\n  expect_evaluated: Positive[a]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Positive[a]",
                    "expected": "Positive[a]"
                }
            },
            {
                "title": "NestWhile[Cos, 1., UnsameQ, 2]    ➡️     0.739085",
                "fullTitle": "NestWhile[Cos, 1., UnsameQ, 2]    ➡️     0.739085",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "580204e6-b8de-4e0a-81eb-f9806c89a8b2",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[FixedPoint,paclet:ref/FixedPoint] always compares the last two values; these two forms are equivalent:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "FixedPoint[Cos, 1.]    ➡️     0.739085",
                "fullTitle": "FixedPoint[Cos, 1.]    ➡️     0.739085",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "300b3d56-3df7-4b80-83f1-a85e14ce4ad5",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NestWhileList[(#1 + 3/#1)/2 & , 1., Unequal, 2]    ➡️     {1., 2., 1.75, 1.73214, 1.73205, 1.73205, 1.73205} # skip",
                "fullTitle": "NestWhileList[(#1 + 3/#1)/2 & , 1., Unequal, 2]    ➡️     {1., 2., 1.75, 1.73214, 1.73205, 1.73205, 1.73205} # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1184a7f3-5ae5-448e-a59a-b97b9b642fec",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NestWhileList,paclet:ref/NestWhileList] applies the same stopping criteria, but returns all values generated:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, #1 > 0 & ]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, #1 > 0 & ]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "981d52ef-619d-4e5d-9051-375b469bc23f",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NestWhile,paclet:ref/NestWhile] can be expressed in terms of a RefLink[While,paclet:ref/While] loop:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "x = 10; While[x > 0, x = Floor[x/2]]; x    ➡️     0",
                "fullTitle": "x = 10; While[x > 0, x = Floor[x/2]]; x    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5c213bcc-f346-4c2d-a80b-adcb3f621d0d",
                "parentUUID": "9d14faf8-529f-4b27-b925-cf124b2bad46",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "40e2e4e0-420b-433e-a156-eab621e6b7cf",
            "2c36b8b3-e24c-43ed-9db7-0ee1b4ddab91",
            "b3c55ca0-646e-459b-bd7e-3ce5a6daf02e",
            "d5051c99-8d27-4bf4-97bc-3a708c1968ec",
            "e92b7701-a1d6-4779-8233-23cb10fb1440",
            "2390ecce-5a36-4a52-a5ab-42857df84735",
            "5d3c4e46-267a-420e-b33c-1165d7900f82",
            "f4e7da62-2035-459e-9c01-10fc4c283e9a",
            "7bcf20fa-9ccc-41ab-a914-267e9fb5cf94",
            "599251f4-395e-42e4-a259-4ed8ad0ba2d1",
            "be0aa3ad-4f8b-4c8b-860b-3728622d28df",
            "cd3b8bee-f28d-46f3-981c-cc4068621331",
            "89bf87ef-eeb9-4482-875f-2bcb21ae9a46",
            "56167cff-30e9-4124-987e-f5fd97156ad9",
            "0dd4fbd5-b779-4d14-bb47-3b8be43cbe6d",
            "989474eb-3378-41a7-9ea0-808024549067",
            "7a329391-ad6b-4f0c-a89d-420221041f1b",
            "3e89b7de-df66-4282-9a78-ca365eb3c7b3",
            "8176d2d1-18b7-428a-b3fc-b28ad7d3f1c4",
            "8120cd9c-1b1d-48d9-b5f4-a68e64ca6532",
            "580204e6-b8de-4e0a-81eb-f9806c89a8b2",
            "300b3d56-3df7-4b80-83f1-a85e14ce4ad5",
            "1184a7f3-5ae5-448e-a59a-b97b9b642fec",
            "981d52ef-619d-4e5d-9051-375b469bc23f",
            "5c213bcc-f346-4c2d-a80b-adcb3f621d0d"
        ],
        "failures": [],
        "skipped": [
            "56167cff-30e9-4124-987e-f5fd97156ad9",
            "580204e6-b8de-4e0a-81eb-f9806c89a8b2",
            "300b3d56-3df7-4b80-83f1-a85e14ce4ad5"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "9d14faf8-529f-4b27-b925-cf124b2bad46",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
