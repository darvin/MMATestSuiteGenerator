{
    "stats": {
        "suites": 0,
        "tests": 25,
        "passes": 24,
        "pending": 0,
        "failures": 1,
        "start": "2018-06-11T04:14:11.546Z",
        "end": "2018-06-11T04:14:11.546Z",
        "duration": 0,
        "testsRegistered": 25,
        "passPercent": 96,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "NestWhile[#1/2 & , 123456, EvenQ]    ➡️     1929",
                "fullTitle": "NestWhile[#1/2 & , 123456, EvenQ]    ➡️     1929",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9dcf349f-82a1-4e4d-88c8-f49587d62070",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/NestWhile_Tests.m\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n#! {10}\\n#! {10, 5}\\n#! {10, 5, 2}\\n#! {10, 5, 2, 1}\\n#! {10, 5, 2, 1, 0}\\n#! {10, 5, 2, 1, 0, 0}\\n#! {10, 5, 2, 1}\\n#! {5, 2, 1, 0}\\n#! {2, 1, 0, 0}\\n#! {10, 5, 2, 1}\\n#! {10, 5, 2, 1, 0}\\n#! {10, 5, 2, 1, 0, 0}\\n# SYSTEM: Mathematica_10\\n# TEST: NestWhile_Tests\\n# Keep dividing by 2 until the result is no longer an even number:\\n\\n\\ndata: \\n  got:              1929\\n  expect:           1929\\n  expect_evaluated: 1929\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1929,
                    "expected": 1929
                }
            },
            {
                "title": "NestWhile[Log, 100, #1 > 0 & ]    ➡️     Log[Log[Log[Log[100]]]]",
                "fullTitle": "NestWhile[Log, 100, #1 > 0 & ]    ➡️     Log[Log[Log[Log[100]]]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "38cfa1e0-4fe4-4428-990b-fa3411d2aab6",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# Iterate taking logarithms until the result is no longer positive:\\n\\n\\ndata: \\n  got:              Log[Log[Log[Log[100]]]]\\n  expect:           Log[Log[Log[Log[100]]]]\\n  expect_evaluated: Log[Log[Log[Log[100]]]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Log[Log[Log[Log[100]]]]",
                    "expected": "Log[Log[Log[Log[100]]]]"
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 2]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 2]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6bb25689-2c45-4045-859c-4b400d3e363a",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare the last two values generated:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , All]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , All]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a46049a2-6745-44e7-a20d-e43bea23f5d7",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# Always compare all values generated:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , 4]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , 4]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "75bd02d4-3c04-4c6e-82a2-7f8f9afde7ea",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# Start comparisons after 4 iterations, and compare using the 4 last values:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , {4, 6}]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, (Print[{##1}]; UnsameQ[##1]) & , {4, 6}]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bb6346d1-72b8-48e6-ae4e-9620d7ce1301",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# Start comparisons after 4 iterations, and compare using the 6 last values:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[#1/2 & , 123456, EvenQ, 1, 4]    ➡️     7716",
                "fullTitle": "NestWhile[#1/2 & , 123456, EvenQ, 1, 4]    ➡️     7716",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "edd4dd16-27c9-4f6c-85c0-45b6b9b1daf7",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# Stop after at most 4 iterations, even if the test is still RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              7716\\n  expect:           7716\\n  expect_evaluated: 7716\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 7716,
                    "expected": 7716
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity]    ➡️     1",
                "fullTitle": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity]    ➡️     1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2fb047b2-ceb6-45d2-bf31-76079ff82a2e",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# Continue until the result is no longer greater than 1:\\n\\n\\ndata: \\n  got:              1\\n  expect:           1\\n  expect_evaluated: 1\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1,
                    "expected": 1
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, 1]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, 1]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6b28cc70-80a9-473a-ae9b-63d66f55a6e5",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# Perform one more step after the condition is no longer RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, -1]    ➡️     2",
                "fullTitle": "NestWhile[Floor[#1/2] & , 20, #1 > 1 & , 1, Infinity, -1]    ➡️     2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8a223a1c-0f0b-46f4-8129-0091b1e149b4",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# Return the last value for which the condition was still RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              2\\n  expect:           2\\n  expect_evaluated: 2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 2,
                    "expected": 2
                }
            },
            {
                "title": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] & ]    ➡️     907",
                "fullTitle": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] & ]    ➡️     907",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5bfb8d6b-3008-4004-8449-0b8dbd392eed",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the next prime after 888:\\n\\n\\ndata: \\n  got:              907\\n  expect:           907\\n  expect_evaluated: 907\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 907,
                    "expected": 907
                }
            },
            {
                "title": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] ||  !PrimeQ[#3] & , 3]    ➡️     1021",
                "fullTitle": "NestWhile[#1 + 1 & , 888,  !PrimeQ[#1] ||  !PrimeQ[#3] & , 3]    ➡️     1021",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2dc58197-9ea0-4c55-81de-2a96245cae89",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the next twin prime after 888:\\n\\n\\ndata: \\n  got:              1021\\n  expect:           1021\\n  expect_evaluated: 1021\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1021,
                    "expected": 1021
                }
            },
            {
                "title": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & ]    ➡️     31",
                "fullTitle": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & ]    ➡️     31",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f507b68f-1fd8-4abc-8ff6-af4a67075224",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the index of the first Fibonacci number above a million:\\n\\n\\ndata: \\n  got:              31\\n  expect:           31\\n  expect_evaluated: 31\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 31,
                    "expected": 31
                }
            },
            {
                "title": "Fibonacci[%]    ➡️     1346269",
                "fullTitle": "Fibonacci[%]    ➡️     1346269",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5c8514f1-43da-4fcf-878b-28a15ff90a26",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              1346269\\n  expect:           1346269\\n  expect_evaluated: 1346269\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1346269,
                    "expected": 1346269
                }
            },
            {
                "title": "HoldComplete[ListLinePlot[Table[NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= n & ], {n, 200}]]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[ListLinePlot[Table[NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= n & ], {n, 200}]]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "237b6944-2fb3-422b-823e-3fb098872bb4",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              -Graphics-\\n  expect:           $Failed\\n  expect_evaluated: $Failed\"",
                "state": "failed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "-Graphics-",
                    "expected": "$Failed"
                }
            },
            {
                "title": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & , 1, Infinity, -1]    ➡️     30",
                "fullTitle": "NestWhile[#1 + 1 & , 1, Fibonacci[#1] <= 10^6 & , 1, Infinity, -1]    ➡️     30",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "89222046-7b40-44a4-bb7b-153838374755",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the index of the last Fibonacci number below a million:\\n\\n\\ndata: \\n  got:              30\\n  expect:           30\\n  expect_evaluated: 30\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 30,
                    "expected": 30
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, UnsameQ, {4, 4}]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, UnsameQ, {4, 4}]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d014d146-420a-47e7-b1a6-9c30b07e2b94",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# These two forms are equivalent:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 4]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, UnsameQ, 4]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0c8eb925-290d-4381-ade5-87a959a7e9f3",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "NestWhile[Floor[#1/2] & , a, Positive]    ➡️     a",
                "fullTitle": "NestWhile[Floor[#1/2] & , a, Positive]    ➡️     a",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2c7ea937-9124-4791-a90a-015109180661",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NestWhile,paclet:ref/NestWhile] returns if the condition returns anything other then RefLink[True,paclet:ref/True]:\\n\\n\\ndata: \\n  got:              a\\n  expect:           a\\n  expect_evaluated: a\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a",
                    "expected": "a"
                }
            },
            {
                "title": "Positive[a]    ➡️     Positive[a]",
                "fullTitle": "Positive[a]    ➡️     Positive[a]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "282f3363-12fc-4397-9714-68a62daa77ad",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# The outcome of a condition need not be RefLink[True,paclet:ref/True] or RefLink[False,paclet:ref/False]:\\n\\n\\ndata: \\n  got:              Positive[a]\\n  expect:           Positive[a]\\n  expect_evaluated: Positive[a]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Positive[a]",
                    "expected": "Positive[a]"
                }
            },
            {
                "title": "NestWhile[Cos, 1., UnsameQ, 2]    ➡️     0.739085",
                "fullTitle": "NestWhile[Cos, 1., UnsameQ, 2]    ➡️     0.739085",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f0b46732-1926-447d-8920-6ea787a46580",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[FixedPoint,paclet:ref/FixedPoint] always compares the last two values; these two forms are equivalent:\\n\\n\\ndata: \\n  got:              0.739085\\n  expect:           0.739085\\n  expect_evaluated: 0.739085\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 0.739085,
                    "expected": 0.739085
                }
            },
            {
                "title": "FixedPoint[Cos, 1.]    ➡️     0.739085",
                "fullTitle": "FixedPoint[Cos, 1.]    ➡️     0.739085",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c684a5ab-b8da-4fd5-91e7-6cc003a9c80c",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              0.739085\\n  expect:           0.739085\\n  expect_evaluated: 0.739085\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 0.739085,
                    "expected": 0.739085
                }
            },
            {
                "title": "NestWhileList[(#1 + 3/#1)/2 & , 1., Unequal, 2]    ➡️     {1., 2., 1.75, 1.73214, 1.73205, 1.73205, 1.73205}",
                "fullTitle": "NestWhileList[(#1 + 3/#1)/2 & , 1., Unequal, 2]    ➡️     {1., 2., 1.75, 1.73214, 1.73205, 1.73205, 1.73205}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f4693fe1-dfa4-4d09-83dc-590963613f76",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NestWhileList,paclet:ref/NestWhileList] applies the same stopping criteria, but returns all values generated:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NestWhile[Floor[#1/2] & , 10, #1 > 0 & ]    ➡️     0",
                "fullTitle": "NestWhile[Floor[#1/2] & , 10, #1 > 0 & ]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f1473082-dee9-432e-a24e-066027b0b57a",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NestWhile,paclet:ref/NestWhile] can be expressed in terms of a RefLink[While,paclet:ref/While] loop:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "x = 10; While[x > 0, x = Floor[x/2]]; x    ➡️     0",
                "fullTitle": "x = 10; While[x > 0, x = Floor[x/2]]; x    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "59a044f9-ca8b-4101-adca-eb228bf1f3cd",
                "parentUUID": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "9dcf349f-82a1-4e4d-88c8-f49587d62070",
            "38cfa1e0-4fe4-4428-990b-fa3411d2aab6",
            "6bb25689-2c45-4045-859c-4b400d3e363a",
            "a46049a2-6745-44e7-a20d-e43bea23f5d7",
            "75bd02d4-3c04-4c6e-82a2-7f8f9afde7ea",
            "bb6346d1-72b8-48e6-ae4e-9620d7ce1301",
            "edd4dd16-27c9-4f6c-85c0-45b6b9b1daf7",
            "2fb047b2-ceb6-45d2-bf31-76079ff82a2e",
            "6b28cc70-80a9-473a-ae9b-63d66f55a6e5",
            "8a223a1c-0f0b-46f4-8129-0091b1e149b4",
            "5bfb8d6b-3008-4004-8449-0b8dbd392eed",
            "2dc58197-9ea0-4c55-81de-2a96245cae89",
            "f507b68f-1fd8-4abc-8ff6-af4a67075224",
            "5c8514f1-43da-4fcf-878b-28a15ff90a26",
            "89222046-7b40-44a4-bb7b-153838374755",
            "d014d146-420a-47e7-b1a6-9c30b07e2b94",
            "0c8eb925-290d-4381-ade5-87a959a7e9f3",
            "2c7ea937-9124-4791-a90a-015109180661",
            "282f3363-12fc-4397-9714-68a62daa77ad",
            "f0b46732-1926-447d-8920-6ea787a46580",
            "c684a5ab-b8da-4fd5-91e7-6cc003a9c80c",
            "f4693fe1-dfa4-4d09-83dc-590963613f76",
            "f1473082-dee9-432e-a24e-066027b0b57a",
            "59a044f9-ca8b-4101-adca-eb228bf1f3cd"
        ],
        "failures": [
            "237b6944-2fb3-422b-823e-3fb098872bb4"
        ],
        "skipped": [],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "a16ba80e-c679-4a48-abb7-ba5345c47e70",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
