# SYSTEM: Mathematica_10
# TEST: Attributes_Tests
# OUTPUT: output/Results/Mathematica_10/Attributes_Tests.json
# Attributes for an existing symbol: 
ok  Attributes[Plus]    ==>     {Flat, Listable, NumericFunction, OneIdentity, Orderless, Protected}
    ---
    data:
        got: {Flat, Listable, NumericFunction, OneIdentity, Orderless, Protected}
        expect: {Flat, Listable, NumericFunction, OneIdentity, Orderless, Protected}
        expect_evaluated: {Flat, Listable, NumericFunction, OneIdentity, Orderless, Protected}
    ...
# Set attributes for a new symbol: 
ok  Attributes[f] = {Listable, Protected}    ==>     {Listable, Protected}
    ---
    data:
        got: {Listable, Protected}
        expect: {Listable, Protected}
        expect_evaluated: {Listable, Protected}
    ...
ok  Attributes[f]    ==>     {Listable, Protected}
    ---
    data:
        got: {Listable, Protected}
        expect: {Listable, Protected}
        expect_evaluated: {Listable, Protected}
    ...
# Attributes of a symbol:
ok  Attributes[Plus]    ==>     {Flat, Listable, NumericFunction, OneIdentity, Orderless, Protected}
    ---
    data:
        got: {Flat, Listable, NumericFunction, OneIdentity, Orderless, Protected}
        expect: {Flat, Listable, NumericFunction, OneIdentity, Orderless, Protected}
        expect_evaluated: {Flat, Listable, NumericFunction, OneIdentity, Orderless, Protected}
    ...
# Attributes of several symbols in a list:
ok  Attributes[{Plus, Minus}]    ==>     {{Flat, Listable, NumericFunction, OneIdentity, Orderless, Protected}, {Listable, NumericFunction, Protected}}
    ---
    data:
        got: {{Flat, Listable, NumericFunction, OneIdentity, Orderless, Protected}, {Listable, NumericFunction, Protected}}
        expect: {{Flat, Listable, NumericFunction, OneIdentity, Orderless, Protected}, {Listable, NumericFunction, Protected}}
        expect_evaluated: {{Flat, Listable, NumericFunction, OneIdentity, Orderless, Protected}, {Listable, NumericFunction, Protected}}
    ...
# The symbol can be given as a string:
ok  Attributes["Set"]    ==>     {HoldFirst, Protected, SequenceHold}
    ---
    data:
        got: {HoldFirst, Protected, SequenceHold}
        expect: {HoldFirst, Protected, SequenceHold}
        expect_evaluated: {HoldFirst, Protected, SequenceHold}
    ...
ok  Attributes[{f, g}]    ==>     {{HoldAll, Listable}, {HoldAll}} # skip
ok  Attributes[f] = {Listable}    ==>     Attributes[f] = {Listable} # skip
ok  Attributes[f]    ==>     {Protected} # skip
ok  Attributes[f]    ==>     {} # skip
# RefLink[Attributes,paclet:ref/Attributes] has the attribute RefLink[HoldAll,paclet:ref/HoldAll]:
ok  Attributes[Attributes]    ==>     {HoldAll, Listable, Protected}
    ---
    data:
        got: {HoldAll, Listable, Protected}
        expect: {HoldAll, Listable, Protected}
        expect_evaluated: {HoldAll, Listable, Protected}
    ...
# This gives the attributes of the symbol syms itself:
ok  Attributes[syms]    ==>     {}
    ---
    data:
        got: {}
        expect: {}
        expect_evaluated: {}
    ...
# This gives the attributes of all symbols in the list syms:
ok  Attributes[Evaluate[syms]]    ==>     {{Flat, Listable, NumericFunction, OneIdentity, Orderless, Protected}, {Flat, Listable, NumericFunction, OneIdentity, Orderless, Protected}, {Listable, NumericFunction, OneIdentity, Protected}} # skip
