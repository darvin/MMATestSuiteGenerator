{
    "stats": {
        "suites": 0,
        "tests": 26,
        "passes": 26,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-11T04:13:39.094Z",
        "end": "2018-06-11T04:13:39.094Z",
        "duration": 0,
        "testsRegistered": 26,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "1 + 2*I    ➡️     1 + 2*I",
                "fullTitle": "1 + 2*I    ➡️     1 + 2*I",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e5032ec5-adf3-4ee2-b0f5-8de91694ff4b",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/Complex_Tests.m\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n#! TextForm[ColonForm[MessageName[$RecursionLimit, reclim], StringForm[Recursion depth of `1` exceeded., Short[HoldForm[1024], 3]]]]\\n#! TextForm[ColonForm[MessageName[$RecursionLimit, reclim], StringForm[Recursion depth of `1` exceeded., Short[HoldForm[1024], 3]]]]\\n#! TextForm[ColonForm[MessageName[Part, partd], StringForm[Part specification `1` is longer than depth of object., Short[HoldForm[(1 + 2*I)[[1]]], 3]]]]\\n#! TextForm[ColonForm[MessageName[ReplaceAll, reps], StringForm[`1` is neither a list of replacement rules nor a valid dispatch table, and so cannot be used for replacing., Short[HoldForm[{rule}], 3]]]]\\n#! TextForm[ColonForm[MessageName[$RecursionLimit, reclim], StringForm[Recursion depth of `1` exceeded., Short[HoldForm[1024], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$RecursionLimit, reclim]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: Complex_Tests\\n# Enter a complex number:\\n\\n\\ndata: \\n  got:              1 + 2 I\\n  expect:           1 + 2*I\\n  expect_evaluated: 1 + 2 I\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "1 + 2 I",
                    "expected": "1 + 2*I"
                }
            },
            {
                "title": "Head[%]    ➡️     Complex",
                "fullTitle": "Head[%]    ➡️     Complex",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d81c4ed6-0e08-48a3-9482-b2aec7582e10",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Complex,paclet:ref/Complex] is the RefLink[Head,paclet:ref/Head] for complex numbers:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "4*I    ➡️     4*I",
                "fullTitle": "4*I    ➡️     4*I",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5f55c319-6179-4b35-9cef-6bf948faa5ae",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter a purely imaginary number:\\n\\n\\ndata: \\n  got:              4 I\\n  expect:           4*I\\n  expect_evaluated: 4 I\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "4 I",
                    "expected": "4*I"
                }
            },
            {
                "title": "Head[%]    ➡️     Complex",
                "fullTitle": "Head[%]    ➡️     Complex",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6220fabf-fc7f-42a9-9bff-991623f8b387",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": true,
                "isHook": false,
                "context": "\"# Even though there is no real part it has RefLink[Head,paclet:ref/Head] RefLink[Complex,paclet:ref/Complex]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "FullForm[1 + 2*I]    ➡️     Complex[1, 2]",
                "fullTitle": "FullForm[1 + 2*I]    ➡️     Complex[1, 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a528c496-ecd5-4e1c-bb03-3cf3376287b2",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": true,
                "isHook": false,
                "context": "\"# The RefLink[FullForm,paclet:ref/FullForm] of a complex number x+RefLink[I,paclet:ref/I]y is RefLink[Complex,paclet:ref/Complex][x,y]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Complex[2, 1]    ➡️     2 + I",
                "fullTitle": "Complex[2, 1]    ➡️     2 + I",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e8710348-ea4a-4849-9a60-59dcb6c7414e",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter a complex number using the RefLink[FullForm,paclet:ref/FullForm]:\\n\\n\\ndata: \\n  got:              2 + I\\n  expect:           2 + I\\n  expect_evaluated: 2 + I\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2 + I",
                    "expected": "2 + I"
                }
            },
            {
                "title": "Complex[2, 0]    ➡️     2",
                "fullTitle": "Complex[2, 0]    ➡️     2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "156efca8-4c06-4ae3-baeb-c112eb8ede86",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": false,
                "isHook": false,
                "context": "\"# If the imaginary part is exactly zero, then the result is not RefLink[Complex,paclet:ref/Complex]:\\n\\n\\ndata: \\n  got:              2\\n  expect:           2\\n  expect_evaluated: 2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 2,
                    "expected": 2
                }
            },
            {
                "title": "Head[%]    ➡️     Integer",
                "fullTitle": "Head[%]    ➡️     Integer",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4d0aeec0-bb55-454a-9896-5125ce98874b",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x = 1 + 2*I ;; {Re[x], Im[x]}    ➡️     {1, 2}",
                "fullTitle": "x = 1 + 2*I ;; {Re[x], Im[x]}    ➡️     {1, 2}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a689d938-86a1-42df-b3a2-326ed7dd03b0",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": true,
                "isHook": false,
                "context": "\"# You have to use RefLink[Re,paclet:ref/Re] and RefLink[Im,paclet:ref/Im] to extract parts of RefLink[Complex,paclet:ref/Complex] numbers:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x[[1]]    ➡️     (1 + 2*I)[[1]]",
                "fullTitle": "x[[1]]    ➡️     (1 + 2*I)[[1]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ea55dbae-13ea-47a3-9036-0fb999178e60",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Part,paclet:ref/Part] does not work:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "1. + 2.*I    ➡️     1. + 2.*I",
                "fullTitle": "1. + 2.*I    ➡️     1. + 2.*I",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "038d8f85-d36e-4c82-8ef7-4726539a7786",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter a complex number with machine-number real and imaginary parts:\\n\\n\\ndata: \\n  got:              1. + 2. I\\n  expect:           1. + 2.*I\\n  expect_evaluated: 1. + 2. I\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "1. + 2. I",
                    "expected": "1. + 2.*I"
                }
            },
            {
                "title": "MachineNumberQ[%]    ➡️     True",
                "fullTitle": "MachineNumberQ[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d70eab90-6cc3-46a5-8f67-5543dccc4f32",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": true,
                "isHook": false,
                "context": "\"# It is considered to be a machine number when both its real and imaginary parts are machine numbers:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "1.`20. + 2.`30.*I    ➡️     1.`19. + 2.`29.301029995663985*I",
                "fullTitle": "1.`20. + 2.`30.*I    ➡️     1.`19. + 2.`29.301029995663985*I",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "24d63c8e-a822-418e-ab9e-4d922ebe2764",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": true,
                "isHook": false,
                "context": "\"# Enter a complex number with arbitrary-precision real and imaginary parts:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Precision[%]    ➡️     20.3495",
                "fullTitle": "Precision[%]    ➡️     20.3495",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f962ac4f-e7e6-46c9-bcc1-7f775d9ddf93",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": true,
                "isHook": false,
                "context": "\"# The precision is based on the error in the complex plane:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x = 1 + 2.*I    ➡️     1. + 2.*I",
                "fullTitle": "x = 1 + 2.*I    ➡️     1. + 2.*I",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a2559090-0d13-4a4c-9f4b-60236204c17d",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter a complex number with an exact real part and an approximate imaginary part:\\n\\n\\ndata: \\n  got:              1. + 2. I\\n  expect:           1. + 2.*I\\n  expect_evaluated: 1. + 2. I\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "1. + 2. I",
                    "expected": "1. + 2.*I"
                }
            },
            {
                "title": "MatchQ[1 + 2*I, _Complex]    ➡️     True",
                "fullTitle": "MatchQ[1 + 2*I, _Complex]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b8efdcf1-16ed-4488-98bf-14965fd1bceb",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": false,
                "isHook": false,
                "context": "\"# _Complex can be used to stand for a complex number in a pattern:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "rule = x_Complex -> Im[x] + I*Re[x] ;; f[1 + 2*I, 3 + 4*I, 5] /. rule    ➡️     f[2 + I, 4 + 3*I, 5]",
                "fullTitle": "rule = x_Complex -> Im[x] + I*Re[x] ;; f[1 + 2*I, 3 + 4*I, 5] /. rule    ➡️     f[2 + I, 4 + 3*I, 5]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "97e4bbdf-3670-4063-8d0c-7ddf855b566e",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": true,
                "isHook": false,
                "context": "\"# A rule that switches real and imaginary parts:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "f[1 + 2*I, 3 + 4*I, 5] /. Complex[r_, i_] :> Complex[i, r]    ➡️     f[2 + I, 4 + 3*I, 5]",
                "fullTitle": "f[1 + 2*I, 3 + 4*I, 5] /. Complex[r_, i_] :> Complex[i, r]    ➡️     f[2 + I, 4 + 3*I, 5]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c585ae9f-10c0-4e5c-aed9-636ed4f181bf",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": false,
                "isHook": false,
                "context": "\"# An alternate definition:\\n\\n\\ndata: \\n  got:              f[2 + I, 4 + 3 I, 5]\\n  expect:           f[2 + I, 4 + 3*I, 5]\\n  expect_evaluated: f[2 + I, 4 + 3 I, 5]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[2 + I, 4 + 3 I, 5]",
                    "expected": "f[2 + I, 4 + 3*I, 5]"
                }
            },
            {
                "title": "HoldComplete[cosine[x_Complex] := Cos[Re[x]]*Cosh[Im[x]] - I*Sin[Re[x]]*Sinh[Im[x]]; cosine[x_Real] := Cos[x]; Plot3D[Abs[cosine[x + I*y]], {x, -3, 3}, {y, -1, 1}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[cosine[x_Complex] := Cos[Re[x]]*Cosh[Im[x]] - I*Sin[Re[x]]*Sinh[Im[x]]; cosine[x_Real] := Cos[x]; Plot3D[Abs[cosine[x + I*y]], {x, -3, 3}, {y, -1, 1}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "836b92e3-5e22-4d89-84b6-e303d570fa10",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": true,
                "isHook": false,
                "context": "\"# Define a function over the complexes by using functions defined over the reals: \\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "1 + 2*I    ➡️     1 + 2*I",
                "fullTitle": "1 + 2*I    ➡️     1 + 2*I",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ade8a434-1629-4383-ad0f-5fb8b07e05ca",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Complexes are numbers:\\n\\n\\ndata: \\n  got:              1 + 2 I\\n  expect:           1 + 2*I\\n  expect_evaluated: 1 + 2 I\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "1 + 2 I",
                    "expected": "1 + 2*I"
                }
            },
            {
                "title": "NumberQ[%]    ➡️     True",
                "fullTitle": "NumberQ[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "843356fe-c0eb-49d8-a63a-560978658597",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "AtomQ[1 + 2*I]    ➡️     True",
                "fullTitle": "AtomQ[1 + 2*I]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d9d2d26b-5f22-44f0-b08c-74ab579c2ae9",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Complexes are atomic objects with no subexpressions:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Reduce[z*Conjugate[z] < 1, z, Complexes]    ➡️     -1 < Re[z] < 1 && -Sqrt[1 - Re[z]^2] < Im[z] < Sqrt[1 - Re[z]^2]",
                "fullTitle": "Reduce[z*Conjugate[z] < 1, z, Complexes]    ➡️     -1 < Re[z] < 1 && -Sqrt[1 - Re[z]^2] < Im[z] < Sqrt[1 - Re[z]^2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f0c1df35-2264-4e20-9eda-69d6f687fbfe",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Complexes,paclet:ref/Complexes] to indicate assumptions on domain conditions: \\n\\n\\ndata: \\n  got:              2                          2\\n  expect:           -1 < Re[z] < 1 && -Sqrt[1 - Re[z]^2] < Im[z] < Sqrt[1 - Re[z]^2]\\n  expect_evaluated: 2                          2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2                          2",
                    "expected": "-1 < Re[z] < 1 && -Sqrt[1 - Re[z]^2] < Im[z] < Sqrt[1 - Re[z]^2]"
                }
            },
            {
                "title": "SetAttributes[f, HoldAll]; f[x_Complex] := Re[x] - Im[x]; f[1 + 2*I]    ➡️     f[1 + 2*I]",
                "fullTitle": "SetAttributes[f, HoldAll]; f[x_Complex] := Re[x] - Im[x]; f[1 + 2*I]    ➡️     f[1 + 2*I]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "55661805-6b7f-4c96-a1a7-aac5a68eeb06",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": false,
                "isHook": false,
                "context": "\"#! -1 < Re[z] < 1 && -Sqrt[1 - Re[z] ] < Im[z] < Sqrt[1 - Re[z] ]\\n#! -1 < Re[z] < 1 && -Sqrt[1 - Re[z] ] < Im[z] < Sqrt[1 - Re[z] ]\\n# Numbers entered in the form x+RefLink[I,paclet:ref/I]y only become RefLink[Complex,paclet:ref/Complex] numbers on evaluation:\\n\\n\\ndata: \\n  got:              f[1 + 2 I]\\n  expect:           f[1 + 2*I]\\n  expect_evaluated: f[1 + 2 I]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[1 + 2 I]",
                    "expected": "f[1 + 2*I]"
                }
            },
            {
                "title": "f[Evaluate[1 + 2*I]]    ➡️     -1",
                "fullTitle": "f[Evaluate[1 + 2*I]]    ➡️     -1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a72e6701-bc7b-423e-9847-7be67386cb7b",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              -1\\n  expect:           -1\\n  expect_evaluated: -1\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": -1,
                    "expected": -1
                }
            },
            {
                "title": "FullForm[HoldForm[1 + 2*I]]    ➡️     HoldForm[1 + 2*I]",
                "fullTitle": "FullForm[HoldForm[1 + 2*I]]    ➡️     HoldForm[1 + 2*I]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "85efb53b-0477-4bb9-8907-1ef12e1845ad",
                "parentUUID": "2f8668bb-ac92-4893-9372-31c56759023a",
                "skipped": true,
                "isHook": false,
                "context": "\"# The unevaluated form is expressed in terms of RefLink[Plus,paclet:ref/Plus] and RefLink[Times,paclet:ref/Times]:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "e5032ec5-adf3-4ee2-b0f5-8de91694ff4b",
            "d81c4ed6-0e08-48a3-9482-b2aec7582e10",
            "5f55c319-6179-4b35-9cef-6bf948faa5ae",
            "6220fabf-fc7f-42a9-9bff-991623f8b387",
            "a528c496-ecd5-4e1c-bb03-3cf3376287b2",
            "e8710348-ea4a-4849-9a60-59dcb6c7414e",
            "156efca8-4c06-4ae3-baeb-c112eb8ede86",
            "4d0aeec0-bb55-454a-9896-5125ce98874b",
            "a689d938-86a1-42df-b3a2-326ed7dd03b0",
            "ea55dbae-13ea-47a3-9036-0fb999178e60",
            "038d8f85-d36e-4c82-8ef7-4726539a7786",
            "d70eab90-6cc3-46a5-8f67-5543dccc4f32",
            "24d63c8e-a822-418e-ab9e-4d922ebe2764",
            "f962ac4f-e7e6-46c9-bcc1-7f775d9ddf93",
            "a2559090-0d13-4a4c-9f4b-60236204c17d",
            "b8efdcf1-16ed-4488-98bf-14965fd1bceb",
            "97e4bbdf-3670-4063-8d0c-7ddf855b566e",
            "c585ae9f-10c0-4e5c-aed9-636ed4f181bf",
            "836b92e3-5e22-4d89-84b6-e303d570fa10",
            "ade8a434-1629-4383-ad0f-5fb8b07e05ca",
            "843356fe-c0eb-49d8-a63a-560978658597",
            "d9d2d26b-5f22-44f0-b08c-74ab579c2ae9",
            "f0c1df35-2264-4e20-9eda-69d6f687fbfe",
            "55661805-6b7f-4c96-a1a7-aac5a68eeb06",
            "a72e6701-bc7b-423e-9847-7be67386cb7b",
            "85efb53b-0477-4bb9-8907-1ef12e1845ad"
        ],
        "failures": [],
        "skipped": [
            "d81c4ed6-0e08-48a3-9482-b2aec7582e10",
            "6220fabf-fc7f-42a9-9bff-991623f8b387",
            "a528c496-ecd5-4e1c-bb03-3cf3376287b2",
            "4d0aeec0-bb55-454a-9896-5125ce98874b",
            "a689d938-86a1-42df-b3a2-326ed7dd03b0",
            "ea55dbae-13ea-47a3-9036-0fb999178e60",
            "d70eab90-6cc3-46a5-8f67-5543dccc4f32",
            "24d63c8e-a822-418e-ab9e-4d922ebe2764",
            "f962ac4f-e7e6-46c9-bcc1-7f775d9ddf93",
            "97e4bbdf-3670-4063-8d0c-7ddf855b566e",
            "836b92e3-5e22-4d89-84b6-e303d570fa10",
            "843356fe-c0eb-49d8-a63a-560978658597",
            "85efb53b-0477-4bb9-8907-1ef12e1845ad"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "2f8668bb-ac92-4893-9372-31c56759023a",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
