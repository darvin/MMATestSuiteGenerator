{
    "stats": {
        "suites": 0,
        "tests": 28,
        "passes": 28,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T23:01:40.487Z",
        "end": "2018-06-03T23:01:40.488Z",
        "duration": 0,
        "testsRegistered": 28,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "Element[Pi, Reals]    ➡️     True",
                "fullTitle": "Element[Pi, Reals]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c460f6e1-7276-4cb5-9fc1-51101fb02675",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/Element_Tests.m\\n# SYSTEM: Mathematica_10\\n# TEST: Element_Tests\\n# Test whether \\\\[Pi] is an element of the reals:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Element[{1/2, 1/3}, Disk[]]    ➡️     True",
                "fullTitle": "Element[{1/2, 1/3}, Disk[]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f3dff53c-3bda-4b65-a899-f235aa40570a",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test whether the point {1/2,1/3} belongs to the unit disk:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Element[x + y, Reals]    ➡️     Element[x + y, Reals]",
                "fullTitle": "Element[x + y, Reals]    ➡️     Element[x + y, Reals]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a981b2c4-4ede-4800-afec-ecc593be8df0",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Express domain membership for an expression:\\n\\n\\ndata: \\n  got:              Element[x + y, Reals]\\n  expect:           Element[x + y, Reals]\\n  expect_evaluated: Element[x + y, Reals]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Element[x + y, Reals]",
                    "expected": "Element[x + y, Reals]"
                }
            },
            {
                "title": "Element[{x, y, z}, Ball[]]    ➡️     Element[{x, y, z}, Ball[{0, 0, 0}]]",
                "fullTitle": "Element[{x, y, z}, Ball[]]    ➡️     Element[{x, y, z}, Ball[{0, 0, 0}]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bf97412e-3a0a-48a9-877d-52b9459822b8",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": true,
                "isHook": false,
                "context": "\"# Assert that the point {x,y,z} belongs to the unit ball:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Integrate[1, Element[{x, y, z}, Ball[]]]    ➡️     (4*Pi)/3",
                "fullTitle": "Integrate[1, Element[{x, y, z}, Ball[]]]    ➡️     (4*Pi)/3",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "39f889da-27ae-43da-a691-6c1b8aca5347",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use element assertions to integrate over a region:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "MinValue[x + y, Element[{x, y, z}, Ball[]]]    ➡️     -Sqrt[2]",
                "fullTitle": "MinValue[x + y, Element[{x, y, z}, Ball[]]]    ➡️     -Sqrt[2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0d278588-e640-429a-8763-3290269b3c16",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": true,
                "isHook": false,
                "context": "\"# Or to optimize over a region:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Element[x, Reals]    ➡️     Element[x, Reals]",
                "fullTitle": "Element[x, Reals]    ➡️     Element[x, Reals]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8b61e0ef-c0a6-4f0e-bb03-d12bfe591ddc",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter using Esc\\\\[ThinSpace]elem\\\\[ThinSpace]Esc:\\n\\n\\ndata: \\n  got:              Element[x, Reals]\\n  expect:           Element[x, Reals]\\n  expect_evaluated: Element[x, Reals]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Element[x, Reals]",
                    "expected": "Element[x, Reals]"
                }
            },
            {
                "title": "(Element[Sqrt[2], #1] & ) /@ {Complexes, Algebraics, Reals, Rationals, Integers, Primes}    ➡️     {True, True, True, False, False, False}",
                "fullTitle": "(Element[Sqrt[2], #1] & ) /@ {Complexes, Algebraics, Reals, Rationals, Integers, Primes}    ➡️     {True, True, True, False, False, False}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cdfc4ab1-ac30-4575-aad1-300a423dab0c",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test domain membership:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "(Element[{3/2, 3/2}, #1] & ) /@ {Subscript[\\[ScriptCapitalR], 1], Subscript[\\[ScriptCapitalR], 2], Subscript[\\[ScriptCapitalR], 3], Subscript[\\[ScriptCapitalR], 4]}    ➡️     {True, False, True, True} # skip",
                "fullTitle": "(Element[{3/2, 3/2}, #1] & ) /@ {Subscript[\\[ScriptCapitalR], 1], Subscript[\\[ScriptCapitalR], 2], Subscript[\\[ScriptCapitalR], 3], Subscript[\\[ScriptCapitalR], 4]}    ➡️     {True, False, True, True} # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1279755c-1ee6-4504-9522-723ec54fe482",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[Show[{DiscretizeRegion[Subscript[\\[ScriptCapitalR], 3]], Graphics[{{Opacity[0.5], {Orange, Subscript[\\[ScriptCapitalR], 1]}, {Yellow, Subscript[\\[ScriptCapitalR], 2]}, {Green, Disk[{-1, 0}], Line[{{0, 0}, {2, 2}}]}}, {Red, PointSize[Large], Point[{3/2, 3/2}]}}]}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[Show[{DiscretizeRegion[Subscript[\\[ScriptCapitalR], 3]], Graphics[{{Opacity[0.5], {Orange, Subscript[\\[ScriptCapitalR], 1]}, {Yellow, Subscript[\\[ScriptCapitalR], 2]}, {Green, Disk[{-1, 0}], Line[{{0, 0}, {2, 2}}]}}, {Red, PointSize[Large], Point[{3/2, 3/2}]}}]}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "63ca62b3-ccbc-4f2a-8353-d0a701311b44",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": true,
                "isHook": false,
                "context": "\"# Plot it:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Refine[Sin[Pi*x], Element[x, Integers]]    ➡️     0",
                "fullTitle": "Refine[Sin[Pi*x], Element[x, Integers]]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7904588a-60f9-4731-be6a-71b685e56c60",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Make domain membership assumptions:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "Integrate[Abs[1 - Abs[x + 2]], x, Assumptions -> Element[x, Reals]]    ➡️     Inequality[Piecewise[-3]*x - (x^2/2)*x, LessEqual, -3*9 + 3*x + x^2/2 - 3, Less, x, LessEqual, -2*5 - x - x^2/2 - 2, Less, x, LessEqual, -1*6 + x + (x^2/2)*True]",
                "fullTitle": "Integrate[Abs[1 - Abs[x + 2]], x, Assumptions -> Element[x, Reals]]    ➡️     Inequality[Piecewise[-3]*x - (x^2/2)*x, LessEqual, -3*9 + 3*x + x^2/2 - 3, Less, x, LessEqual, -2*5 - x - x^2/2 - 2, Less, x, LessEqual, -1*6 + x + (x^2/2)*True]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b92b3cdb-3b24-48b2-8953-b9d1b9702be0",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Refine[Sqrt[(x + y - 2)^2], Element[{x, y}, Disk[]]]    ➡️     2 - x - y",
                "fullTitle": "Refine[Sqrt[(x + y - 2)^2], Element[{x, y}, Disk[]]]    ➡️     2 - x - y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d884dfd0-fa71-49eb-b4c9-8d7d05fe9fc8",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Express region membership:\\n\\n\\ndata: \\n  got:              2 - x - y\\n  expect:           2 - x - y\\n  expect_evaluated: 2 - x - y\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2 - x - y",
                    "expected": "2 - x - y"
                }
            },
            {
                "title": "Solve[x + y == 1/2 && Element[{x, y}, Circle[]], {x, y}]    ➡️     {{x -> (1/2)*(1 + (1/2)*(-1 - Sqrt[7])), y -> (1/4)*(1 + Sqrt[7])}, {x -> (1/2)*(1 + (1/2)*(-1 + Sqrt[7])), y -> (1/4)*(1 - Sqrt[7])}}",
                "fullTitle": "Solve[x + y == 1/2 && Element[{x, y}, Circle[]], {x, y}]    ➡️     {{x -> (1/2)*(1 + (1/2)*(-1 - Sqrt[7])), y -> (1/4)*(1 + Sqrt[7])}, {x -> (1/2)*(1 + (1/2)*(-1 + Sqrt[7])), y -> (1/4)*(1 - Sqrt[7])}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "40a8edb5-b5d8-4aff-9f17-014d17ea72b7",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Integrate[1, Element[{x, y}, Circle[]]]    ➡️     2*Pi",
                "fullTitle": "Integrate[1, Element[{x, y}, Circle[]]]    ➡️     2*Pi",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3ed11875-b83c-4ec1-a307-1f48184030cf",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              2*Pi\\n  expect:           2*Pi\\n  expect_evaluated: 2*Pi\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2*Pi",
                    "expected": "2*Pi"
                }
            },
            {
                "title": "Refine[Element[x^y + Log[x + y], Reals], x > 0 && y > 0]    ➡️     True",
                "fullTitle": "Refine[Element[x^y + Log[x + y], Reals], x > 0 && y > 0]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a873e3bb-350a-41d8-a98f-8f430702d914",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test domain membership using assumptions:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Refine[Element[{x, y}, Rectangle[{-1, -1}, {1, 1}]], x^2 + y^2 <= 1]    ➡️     True",
                "fullTitle": "Refine[Element[{x, y}, Rectangle[{-1, -1}, {1, 1}]], x^2 + y^2 <= 1]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "270900c2-3063-4016-b97e-9ce37b394836",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test region membership using assumptions:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Reduce[E^x - 2*x == 3 && Element[x, Reals], x]    ➡️     x == (1/2)*(-3 - 2*ProductLog[-(1/(2*E^(3/2)))]) || x == (1/2)*(-3 - 2*ProductLog[-1, -(1/(2*E^(3/2)))])",
                "fullTitle": "Reduce[E^x - 2*x == 3 && Element[x, Reals], x]    ➡️     x == (1/2)*(-3 - 2*ProductLog[-(1/(2*E^(3/2)))]) || x == (1/2)*(-3 - 2*ProductLog[-1, -(1/(2*E^(3/2)))])",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3c2de7da-3353-47b4-bd8b-522460d2df6a",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Specify variable domains:\\n\\n\\ndata: \\n  got:              x == (-3 - 2*ProductLog[-1/(2*E^(3/2))])/2 || x == (-3 - 2*ProductLog[-1, -1/(2*E^(3/2))])/2\\n  expect:           x == (1/2)*(-3 - 2*ProductLog[-(1/(2*E^(3/2)))]) || x == (1/2)*(-3 - 2*ProductLog[-1, -(1/(2*E^(3/2)))])\\n  expect_evaluated: x == (-3 - 2*ProductLog[-1/(2*E^(3/2))])/2 || x == (-3 - 2*ProductLog[-1, -1/(2*E^(3/2))])/2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x == (-3 - 2*ProductLog[-1/(2*E^(3/2))])/2 || x == (-3 - 2*ProductLog[-1, -1/(2*E^(3/2))])/2",
                    "expected": "x == (1/2)*(-3 - 2*ProductLog[-(1/(2*E^(3/2)))]) || x == (1/2)*(-3 - 2*ProductLog[-1, -(1/(2*E^(3/2)))])"
                }
            },
            {
                "title": "FindInstance[x^2 - 2*y^2 == 1 && x > 10^10 && Element[x | y, Integers], {x, y}]    ➡️     {{x -> 26102926097, y -> 18457556052}}",
                "fullTitle": "FindInstance[x^2 - 2*y^2 == 1 && x > 10^10 && Element[x | y, Integers], {x, y}]    ➡️     {{x -> 26102926097, y -> 18457556052}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a0362a05-7184-46ff-b01f-ba46c1c7d8d8",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got: \\n    [object Object]: null\\n  expect: \\n    [object Object]: null\\n  expect_evaluated: \\n    [object Object]: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "[object Object]": null
                    },
                    "expected": {
                        "[object Object]": null
                    }
                }
            },
            {
                "title": "Minimize[{x - y, x^2 + y^2 <= 100 && Element[x | y, Integers]}, {x, y}]    ➡️     {-14, {x -> -8, y -> 6}}",
                "fullTitle": "Minimize[{x - y, x^2 + y^2 <= 100 && Element[x | y, Integers]}, {x, y}]    ➡️     {-14, {x -> -8, y -> 6}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5690c58e-8a4f-47d8-8257-33014e3add02",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got: \\n    -14:             null\\n    [object Object]: null\\n  expect: \\n    -14:             null\\n    [object Object]: null\\n  expect_evaluated: \\n    -14:             null\\n    [object Object]: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "-14": null,
                        "[object Object]": null
                    },
                    "expected": {
                        "-14": null,
                        "[object Object]": null
                    }
                }
            },
            {
                "title": "Simplify[Sin[2*Pi*x[1] + 4*x[2]*x[3]^2*Pi + a*Pi], Element[x[_], Integers]]    ➡️     Sin[a*Pi]",
                "fullTitle": "Simplify[Sin[2*Pi*x[1] + 4*x[2]*x[3]^2*Pi + a*Pi], Element[x[_], Integers]]    ➡️     Sin[a*Pi]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b6dca85e-c16b-45ee-a97f-d126e518db7b",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Specify assumptions on objects matching a pattern:\\n\\n\\ndata: \\n  got:              Sin[a*Pi]\\n  expect:           Sin[a*Pi]\\n  expect_evaluated: Sin[a*Pi]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sin[a*Pi]",
                    "expected": "Sin[a*Pi]"
                }
            },
            {
                "title": "Element[x, \\[DoubleStruckCapitalR]]    ➡️     Element[x, \\[DoubleStruckCapitalR]]",
                "fullTitle": "Element[x, \\[DoubleStruckCapitalR]]    ➡️     Element[x, \\[DoubleStruckCapitalR]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "05ecd23e-de47-4f36-aa85-99efd2435415",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[TraditionalForm,paclet:ref/TraditionalForm] formatting:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "!Element[a, Reals]    ➡️     NotElement[a, Reals]",
                "fullTitle": "!Element[a, Reals]    ➡️     NotElement[a, Reals]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6aa1f6bc-c134-46fc-9ac6-e8a109bb9d2e",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"# For a single variable, the negation of RefLink[Element,paclet:ref/Element] is automatically converted to RefLink[NotElement,paclet:ref/NotElement]:\\n\\n\\ndata: \\n  got:              NotElement[a, Reals]\\n  expect:           NotElement[a, Reals]\\n  expect_evaluated: NotElement[a, Reals]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "NotElement[a, Reals]",
                    "expected": "NotElement[a, Reals]"
                }
            },
            {
                "title": "!Element[a | b | c, Reals]    ➡️      !Element[a | b | c, Reals]",
                "fullTitle": "!Element[a | b | c, Reals]    ➡️      !Element[a | b | c, Reals]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "916b98dc-f4fc-4107-82e8-69f77ccb9224",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"# For multiple variables, the negation of RefLink[Element,paclet:ref/Element] is not automatically simplified:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[%]    ➡️     NotElement[a, Reals] || NotElement[b, Reals] || NotElement[c, Reals]",
                "fullTitle": "LogicalExpand[%]    ➡️     NotElement[a, Reals] || NotElement[b, Reals] || NotElement[c, Reals]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d33720ac-463f-474e-b9dd-6ca8b1b4e9cc",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[LogicalExpand,paclet:ref/LogicalExpand] to find the representation in terms of RefLink[NotElement,paclet:ref/NotElement]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Element[{x, y}, Disk[]]    ➡️     Element[{x, y}, Disk[{0, 0}]]",
                "fullTitle": "Element[{x, y}, Disk[]]    ➡️     Element[{x, y}, Disk[{0, 0}]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "36a4376f-954e-4092-9733-b834971a9994",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Element,paclet:ref/Element] asserts region membership:\\n\\n\\ndata: \\n  got:              Element[{x, y}, Disk[{0, 0}]]\\n  expect:           Element[{x, y}, Disk[{0, 0}]]\\n  expect_evaluated: Element[{x, y}, Disk[{0, 0}]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Element[{x, y}, Disk[{0, 0}]]",
                    "expected": "Element[{x, y}, Disk[{0, 0}]]"
                }
            },
            {
                "title": "RegionMember[Disk[], {x, y}]    ➡️     x^2 + y^2 <= 1",
                "fullTitle": "RegionMember[Disk[], {x, y}]    ➡️     x^2 + y^2 <= 1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6040beae-6e07-4490-9f90-a21be8c6a6f8",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[RegionMember,paclet:ref/RegionMember] gives explicit region membership conditions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Element[I^Pi, Algebraics]    ➡️     Element[I^Pi, Algebraics]",
                "fullTitle": "Element[I^Pi, Algebraics]    ➡️     Element[I^Pi, Algebraics]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fb003bd0-023f-451e-a9d7-bfdea88af3a8",
                "parentUUID": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
                "skipped": false,
                "isHook": false,
                "context": "\"# When domain membership cannot be decided the RefLink[Element,paclet:ref/Element] statement remains unevaluated:\\n\\n\\ndata: \\n  got:              Element[I^Pi, Algebraics]\\n  expect:           Element[I^Pi, Algebraics]\\n  expect_evaluated: Element[I^Pi, Algebraics]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Element[I^Pi, Algebraics]",
                    "expected": "Element[I^Pi, Algebraics]"
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "c460f6e1-7276-4cb5-9fc1-51101fb02675",
            "f3dff53c-3bda-4b65-a899-f235aa40570a",
            "a981b2c4-4ede-4800-afec-ecc593be8df0",
            "bf97412e-3a0a-48a9-877d-52b9459822b8",
            "39f889da-27ae-43da-a691-6c1b8aca5347",
            "0d278588-e640-429a-8763-3290269b3c16",
            "8b61e0ef-c0a6-4f0e-bb03-d12bfe591ddc",
            "cdfc4ab1-ac30-4575-aad1-300a423dab0c",
            "1279755c-1ee6-4504-9522-723ec54fe482",
            "63ca62b3-ccbc-4f2a-8353-d0a701311b44",
            "7904588a-60f9-4731-be6a-71b685e56c60",
            "b92b3cdb-3b24-48b2-8953-b9d1b9702be0",
            "d884dfd0-fa71-49eb-b4c9-8d7d05fe9fc8",
            "40a8edb5-b5d8-4aff-9f17-014d17ea72b7",
            "3ed11875-b83c-4ec1-a307-1f48184030cf",
            "a873e3bb-350a-41d8-a98f-8f430702d914",
            "270900c2-3063-4016-b97e-9ce37b394836",
            "3c2de7da-3353-47b4-bd8b-522460d2df6a",
            "a0362a05-7184-46ff-b01f-ba46c1c7d8d8",
            "5690c58e-8a4f-47d8-8257-33014e3add02",
            "b6dca85e-c16b-45ee-a97f-d126e518db7b",
            "05ecd23e-de47-4f36-aa85-99efd2435415",
            "6aa1f6bc-c134-46fc-9ac6-e8a109bb9d2e",
            "916b98dc-f4fc-4107-82e8-69f77ccb9224",
            "d33720ac-463f-474e-b9dd-6ca8b1b4e9cc",
            "36a4376f-954e-4092-9733-b834971a9994",
            "6040beae-6e07-4490-9f90-a21be8c6a6f8",
            "fb003bd0-023f-451e-a9d7-bfdea88af3a8"
        ],
        "failures": [],
        "skipped": [
            "bf97412e-3a0a-48a9-877d-52b9459822b8",
            "39f889da-27ae-43da-a691-6c1b8aca5347",
            "0d278588-e640-429a-8763-3290269b3c16",
            "63ca62b3-ccbc-4f2a-8353-d0a701311b44",
            "b92b3cdb-3b24-48b2-8953-b9d1b9702be0",
            "40a8edb5-b5d8-4aff-9f17-014d17ea72b7",
            "05ecd23e-de47-4f36-aa85-99efd2435415",
            "d33720ac-463f-474e-b9dd-6ca8b1b4e9cc",
            "6040beae-6e07-4490-9f90-a21be8c6a6f8"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "eb6660b3-4646-40b9-bbb0-16b83e16db7c",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
