{
    "stats": {
        "suites": 0,
        "tests": 28,
        "passes": 28,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-02T19:34:57.528Z",
        "end": "2018-06-02T19:34:57.528Z",
        "duration": 0,
        "testsRegistered": 28,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "Element[Pi, Reals]    ➡️     True",
                "fullTitle": "Element[Pi, Reals]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5e69d4dc-e42e-4f0a-8023-812c831e040f",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"# SYSTEM: Mathematica_10\\n# TEST: Element_Tests\\n# OUTPUT: output/Results/Mathematica_10/Element_Tests.json\\n# Test whether \\\\[Pi] is an element of the reals:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Element[{1/2, 1/3}, Disk[]]    ➡️     True",
                "fullTitle": "Element[{1/2, 1/3}, Disk[]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6893bbd1-0f86-4543-9307-e23332194a08",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test whether the point {1/2,1/3} belongs to the unit disk:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Element[x + y, Reals]    ➡️     Element[x + y, Reals]",
                "fullTitle": "Element[x + y, Reals]    ➡️     Element[x + y, Reals]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0a02c58a-c6f2-4cbc-a10d-c20822986130",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"# Express domain membership for an expression:\\n\\n\\ndata: \\n  got:              Element[x + y, Reals]\\n  expect:           Element[x + y, Reals]\\n  expect_evaluated: Element[x + y, Reals]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Element[x + y, Reals]",
                    "expected": "Element[x + y, Reals]"
                }
            },
            {
                "title": "Element[{x, y, z}, Ball[]]    ➡️     Element[{x, y, z}, Ball[{0, 0, 0}]]",
                "fullTitle": "Element[{x, y, z}, Ball[]]    ➡️     Element[{x, y, z}, Ball[{0, 0, 0}]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ce6640be-59a3-4f1a-982d-b280f5495bfd",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": true,
                "isHook": false,
                "context": "\"# Assert that the point {x,y,z} belongs to the unit ball:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Integrate[1, Element[{x, y, z}, Ball[]]]    ➡️     (4*Pi)/3",
                "fullTitle": "Integrate[1, Element[{x, y, z}, Ball[]]]    ➡️     (4*Pi)/3",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bdf544e3-1323-499f-a6dd-121fdfee4a38",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use element assertions to integrate over a region:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "MinValue[x + y, Element[{x, y, z}, Ball[]]]    ➡️     -Sqrt[2]",
                "fullTitle": "MinValue[x + y, Element[{x, y, z}, Ball[]]]    ➡️     -Sqrt[2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9c1624a5-c7d0-430b-a02b-161dc8626a74",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": true,
                "isHook": false,
                "context": "\"# Or to optimize over a region:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Element[x, Reals]    ➡️     Element[x, Reals]",
                "fullTitle": "Element[x, Reals]    ➡️     Element[x, Reals]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "74c9a627-ae81-4e8c-a8d3-bbf6f9649886",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter using Esc\\\\[ThinSpace]elem\\\\[ThinSpace]Esc:\\n\\n\\ndata: \\n  got:              Element[x, Reals]\\n  expect:           Element[x, Reals]\\n  expect_evaluated: Element[x, Reals]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Element[x, Reals]",
                    "expected": "Element[x, Reals]"
                }
            },
            {
                "title": "(Element[Sqrt[2], #1] & ) /@ {Complexes, Algebraics, Reals, Rationals, Integers, Primes}    ➡️     {True, True, True, False, False, False}",
                "fullTitle": "(Element[Sqrt[2], #1] & ) /@ {Complexes, Algebraics, Reals, Rationals, Integers, Primes}    ➡️     {True, True, True, False, False, False}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d11ad122-e1c9-4eff-abf6-4d061e2e4fdf",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test domain membership:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "(Element[{3/2, 3/2}, #1] & ) /@ {Subscript[\\[ScriptCapitalR], 1], Subscript[\\[ScriptCapitalR], 2], Subscript[\\[ScriptCapitalR], 3], Subscript[\\[ScriptCapitalR], 4]}    ➡️     {True, False, True, True} # skip",
                "fullTitle": "(Element[{3/2, 3/2}, #1] & ) /@ {Subscript[\\[ScriptCapitalR], 1], Subscript[\\[ScriptCapitalR], 2], Subscript[\\[ScriptCapitalR], 3], Subscript[\\[ScriptCapitalR], 4]}    ➡️     {True, False, True, True} # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "02b62625-85cb-4deb-8d1c-f14620420571",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[Show[{DiscretizeRegion[Subscript[\\[ScriptCapitalR], 3]], Graphics[{{Opacity[0.5], {Orange, Subscript[\\[ScriptCapitalR], 1]}, {Yellow, Subscript[\\[ScriptCapitalR], 2]}, {Green, Disk[{-1, 0}], Line[{{0, 0}, {2, 2}}]}}, {Red, PointSize[Large], Point[{3/2, 3/2}]}}]}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[Show[{DiscretizeRegion[Subscript[\\[ScriptCapitalR], 3]], Graphics[{{Opacity[0.5], {Orange, Subscript[\\[ScriptCapitalR], 1]}, {Yellow, Subscript[\\[ScriptCapitalR], 2]}, {Green, Disk[{-1, 0}], Line[{{0, 0}, {2, 2}}]}}, {Red, PointSize[Large], Point[{3/2, 3/2}]}}]}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "61ac299c-bd22-4924-9f6e-d0dd84a8e798",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": true,
                "isHook": false,
                "context": "\"# Plot it:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Refine[Sin[Pi*x], Element[x, Integers]]    ➡️     0",
                "fullTitle": "Refine[Sin[Pi*x], Element[x, Integers]]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "239bee98-5c0a-4fee-b2bd-16579fec5ead",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"# Make domain membership assumptions:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "Integrate[Abs[1 - Abs[x + 2]], x, Assumptions -> Element[x, Reals]]    ➡️     Inequality[Piecewise[-3]*x - (x^2/2)*x, LessEqual, -3*9 + 3*x + x^2/2 - 3, Less, x, LessEqual, -2*5 - x - x^2/2 - 2, Less, x, LessEqual, -1*6 + x + (x^2/2)*True]",
                "fullTitle": "Integrate[Abs[1 - Abs[x + 2]], x, Assumptions -> Element[x, Reals]]    ➡️     Inequality[Piecewise[-3]*x - (x^2/2)*x, LessEqual, -3*9 + 3*x + x^2/2 - 3, Less, x, LessEqual, -2*5 - x - x^2/2 - 2, Less, x, LessEqual, -1*6 + x + (x^2/2)*True]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8f6bb07c-dd12-455a-abd6-c5df65ea7889",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Refine[Sqrt[(x + y - 2)^2], Element[{x, y}, Disk[]]]    ➡️     2 - x - y",
                "fullTitle": "Refine[Sqrt[(x + y - 2)^2], Element[{x, y}, Disk[]]]    ➡️     2 - x - y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "63f54e1d-ef97-441d-a2a9-01b295e1bfba",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"# Express region membership:\\n\\n\\ndata: \\n  got:              2 - x - y\\n  expect:           2 - x - y\\n  expect_evaluated: 2 - x - y\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2 - x - y",
                    "expected": "2 - x - y"
                }
            },
            {
                "title": "Solve[x + y == 1/2 && Element[{x, y}, Circle[]], {x, y}]    ➡️     {{x -> (1/2)*(1 + (1/2)*(-1 - Sqrt[7])), y -> (1/4)*(1 + Sqrt[7])}, {x -> (1/2)*(1 + (1/2)*(-1 + Sqrt[7])), y -> (1/4)*(1 - Sqrt[7])}}",
                "fullTitle": "Solve[x + y == 1/2 && Element[{x, y}, Circle[]], {x, y}]    ➡️     {{x -> (1/2)*(1 + (1/2)*(-1 - Sqrt[7])), y -> (1/4)*(1 + Sqrt[7])}, {x -> (1/2)*(1 + (1/2)*(-1 + Sqrt[7])), y -> (1/4)*(1 - Sqrt[7])}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "62540d84-147a-40cd-b19f-28e56fd94222",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Integrate[1, Element[{x, y}, Circle[]]]    ➡️     2*Pi",
                "fullTitle": "Integrate[1, Element[{x, y}, Circle[]]]    ➡️     2*Pi",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1c104acb-5165-4c0d-bb80-040db6f9e3cc",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              2*Pi\\n  expect:           2*Pi\\n  expect_evaluated: 2*Pi\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2*Pi",
                    "expected": "2*Pi"
                }
            },
            {
                "title": "Refine[Element[x^y + Log[x + y], Reals], x > 0 && y > 0]    ➡️     True",
                "fullTitle": "Refine[Element[x^y + Log[x + y], Reals], x > 0 && y > 0]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "28cda5a6-ac8a-47eb-babe-be7aea39e7a8",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test domain membership using assumptions:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Refine[Element[{x, y}, Rectangle[{-1, -1}, {1, 1}]], x^2 + y^2 <= 1]    ➡️     True",
                "fullTitle": "Refine[Element[{x, y}, Rectangle[{-1, -1}, {1, 1}]], x^2 + y^2 <= 1]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d2eaa0a3-2c2e-45f1-b0fa-491e22fe1729",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test region membership using assumptions:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Reduce[E^x - 2*x == 3 && Element[x, Reals], x]    ➡️     x == (1/2)*(-3 - 2*ProductLog[-(1/(2*E^(3/2)))]) || x == (1/2)*(-3 - 2*ProductLog[-1, -(1/(2*E^(3/2)))])",
                "fullTitle": "Reduce[E^x - 2*x == 3 && Element[x, Reals], x]    ➡️     x == (1/2)*(-3 - 2*ProductLog[-(1/(2*E^(3/2)))]) || x == (1/2)*(-3 - 2*ProductLog[-1, -(1/(2*E^(3/2)))])",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "57b33aba-9ba9-43e4-9645-a134496e9206",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"# Specify variable domains:\\n\\n\\ndata: \\n  got:              x == (-3 - 2*ProductLog[-1/(2*E^(3/2))])/2 || x == (-3 - 2*ProductLog[-1, -1/(2*E^(3/2))])/2\\n  expect:           x == (1/2)*(-3 - 2*ProductLog[-(1/(2*E^(3/2)))]) || x == (1/2)*(-3 - 2*ProductLog[-1, -(1/(2*E^(3/2)))])\\n  expect_evaluated: x == (-3 - 2*ProductLog[-1/(2*E^(3/2))])/2 || x == (-3 - 2*ProductLog[-1, -1/(2*E^(3/2))])/2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x == (-3 - 2*ProductLog[-1/(2*E^(3/2))])/2 || x == (-3 - 2*ProductLog[-1, -1/(2*E^(3/2))])/2",
                    "expected": "x == (1/2)*(-3 - 2*ProductLog[-(1/(2*E^(3/2)))]) || x == (1/2)*(-3 - 2*ProductLog[-1, -(1/(2*E^(3/2)))])"
                }
            },
            {
                "title": "FindInstance[x^2 - 2*y^2 == 1 && x > 10^10 && Element[x | y, Integers], {x, y}]    ➡️     {{x -> 26102926097, y -> 18457556052}}",
                "fullTitle": "FindInstance[x^2 - 2*y^2 == 1 && x > 10^10 && Element[x | y, Integers], {x, y}]    ➡️     {{x -> 26102926097, y -> 18457556052}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b4d3e5d7-ea3d-48a7-a5ef-34ef38b6ab70",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got: \\n    [object Object]: null\\n  expect: \\n    [object Object]: null\\n  expect_evaluated: \\n    [object Object]: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "[object Object]": null
                    },
                    "expected": {
                        "[object Object]": null
                    }
                }
            },
            {
                "title": "Minimize[{x - y, x^2 + y^2 <= 100 && Element[x | y, Integers]}, {x, y}]    ➡️     {-14, {x -> -8, y -> 6}}",
                "fullTitle": "Minimize[{x - y, x^2 + y^2 <= 100 && Element[x | y, Integers]}, {x, y}]    ➡️     {-14, {x -> -8, y -> 6}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2093ae93-1502-414b-a168-f47fb9af6b6d",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got: \\n    -14:             null\\n    [object Object]: null\\n  expect: \\n    -14:             null\\n    [object Object]: null\\n  expect_evaluated: \\n    -14:             null\\n    [object Object]: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "-14": null,
                        "[object Object]": null
                    },
                    "expected": {
                        "-14": null,
                        "[object Object]": null
                    }
                }
            },
            {
                "title": "Simplify[Sin[2*Pi*x[1] + 4*x[2]*x[3]^2*Pi + a*Pi], Element[x[_], Integers]]    ➡️     Sin[a*Pi]",
                "fullTitle": "Simplify[Sin[2*Pi*x[1] + 4*x[2]*x[3]^2*Pi + a*Pi], Element[x[_], Integers]]    ➡️     Sin[a*Pi]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "297a07fc-8d07-42e8-9990-6f69b6fa2f71",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"# Specify assumptions on objects matching a pattern:\\n\\n\\ndata: \\n  got:              Sin[a*Pi]\\n  expect:           Sin[a*Pi]\\n  expect_evaluated: Sin[a*Pi]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sin[a*Pi]",
                    "expected": "Sin[a*Pi]"
                }
            },
            {
                "title": "Element[x, \\[DoubleStruckCapitalR]]    ➡️     Element[x, \\[DoubleStruckCapitalR]]",
                "fullTitle": "Element[x, \\[DoubleStruckCapitalR]]    ➡️     Element[x, \\[DoubleStruckCapitalR]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "68f9a179-9d99-4b8b-a114-81bc13a8f3b7",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[TraditionalForm,paclet:ref/TraditionalForm] formatting:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "!Element[a, Reals]    ➡️     NotElement[a, Reals]",
                "fullTitle": "!Element[a, Reals]    ➡️     NotElement[a, Reals]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d78ae565-5d9f-4ff1-b584-116eb4326986",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"# For a single variable, the negation of RefLink[Element,paclet:ref/Element] is automatically converted to RefLink[NotElement,paclet:ref/NotElement]:\\n\\n\\ndata: \\n  got:              NotElement[a, Reals]\\n  expect:           NotElement[a, Reals]\\n  expect_evaluated: NotElement[a, Reals]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "NotElement[a, Reals]",
                    "expected": "NotElement[a, Reals]"
                }
            },
            {
                "title": "!Element[a | b | c, Reals]    ➡️      !Element[a | b | c, Reals]",
                "fullTitle": "!Element[a | b | c, Reals]    ➡️      !Element[a | b | c, Reals]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "22e53c51-5856-4b47-a004-1e5e3b93f0b5",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"# For multiple variables, the negation of RefLink[Element,paclet:ref/Element] is not automatically simplified:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[%]    ➡️     NotElement[a, Reals] || NotElement[b, Reals] || NotElement[c, Reals]",
                "fullTitle": "LogicalExpand[%]    ➡️     NotElement[a, Reals] || NotElement[b, Reals] || NotElement[c, Reals]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6333ab88-615b-4070-bbf0-4e1d578ab81b",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[LogicalExpand,paclet:ref/LogicalExpand] to find the representation in terms of RefLink[NotElement,paclet:ref/NotElement]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Element[{x, y}, Disk[]]    ➡️     Element[{x, y}, Disk[{0, 0}]]",
                "fullTitle": "Element[{x, y}, Disk[]]    ➡️     Element[{x, y}, Disk[{0, 0}]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e850e228-beae-423f-ab8c-5549aac25b39",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Element,paclet:ref/Element] asserts region membership:\\n\\n\\ndata: \\n  got:              Element[{x, y}, Disk[{0, 0}]]\\n  expect:           Element[{x, y}, Disk[{0, 0}]]\\n  expect_evaluated: Element[{x, y}, Disk[{0, 0}]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Element[{x, y}, Disk[{0, 0}]]",
                    "expected": "Element[{x, y}, Disk[{0, 0}]]"
                }
            },
            {
                "title": "RegionMember[Disk[], {x, y}]    ➡️     x^2 + y^2 <= 1",
                "fullTitle": "RegionMember[Disk[], {x, y}]    ➡️     x^2 + y^2 <= 1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "be732819-07b4-483c-84c6-410f32d650d1",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[RegionMember,paclet:ref/RegionMember] gives explicit region membership conditions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Element[I^Pi, Algebraics]    ➡️     Element[I^Pi, Algebraics]",
                "fullTitle": "Element[I^Pi, Algebraics]    ➡️     Element[I^Pi, Algebraics]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f02a5116-3ca0-49e1-98af-1538ac2e5690",
                "parentUUID": "d5bd9721-06e0-477a-9113-19ccce16f576",
                "skipped": false,
                "isHook": false,
                "context": "\"# When domain membership cannot be decided the RefLink[Element,paclet:ref/Element] statement remains unevaluated:\\n\\n\\ndata: \\n  got:              Element[I^Pi, Algebraics]\\n  expect:           Element[I^Pi, Algebraics]\\n  expect_evaluated: Element[I^Pi, Algebraics]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Element[I^Pi, Algebraics]",
                    "expected": "Element[I^Pi, Algebraics]"
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "5e69d4dc-e42e-4f0a-8023-812c831e040f",
            "6893bbd1-0f86-4543-9307-e23332194a08",
            "0a02c58a-c6f2-4cbc-a10d-c20822986130",
            "ce6640be-59a3-4f1a-982d-b280f5495bfd",
            "bdf544e3-1323-499f-a6dd-121fdfee4a38",
            "9c1624a5-c7d0-430b-a02b-161dc8626a74",
            "74c9a627-ae81-4e8c-a8d3-bbf6f9649886",
            "d11ad122-e1c9-4eff-abf6-4d061e2e4fdf",
            "02b62625-85cb-4deb-8d1c-f14620420571",
            "61ac299c-bd22-4924-9f6e-d0dd84a8e798",
            "239bee98-5c0a-4fee-b2bd-16579fec5ead",
            "8f6bb07c-dd12-455a-abd6-c5df65ea7889",
            "63f54e1d-ef97-441d-a2a9-01b295e1bfba",
            "62540d84-147a-40cd-b19f-28e56fd94222",
            "1c104acb-5165-4c0d-bb80-040db6f9e3cc",
            "28cda5a6-ac8a-47eb-babe-be7aea39e7a8",
            "d2eaa0a3-2c2e-45f1-b0fa-491e22fe1729",
            "57b33aba-9ba9-43e4-9645-a134496e9206",
            "b4d3e5d7-ea3d-48a7-a5ef-34ef38b6ab70",
            "2093ae93-1502-414b-a168-f47fb9af6b6d",
            "297a07fc-8d07-42e8-9990-6f69b6fa2f71",
            "68f9a179-9d99-4b8b-a114-81bc13a8f3b7",
            "d78ae565-5d9f-4ff1-b584-116eb4326986",
            "22e53c51-5856-4b47-a004-1e5e3b93f0b5",
            "6333ab88-615b-4070-bbf0-4e1d578ab81b",
            "e850e228-beae-423f-ab8c-5549aac25b39",
            "be732819-07b4-483c-84c6-410f32d650d1",
            "f02a5116-3ca0-49e1-98af-1538ac2e5690"
        ],
        "failures": [],
        "skipped": [
            "ce6640be-59a3-4f1a-982d-b280f5495bfd",
            "bdf544e3-1323-499f-a6dd-121fdfee4a38",
            "9c1624a5-c7d0-430b-a02b-161dc8626a74",
            "61ac299c-bd22-4924-9f6e-d0dd84a8e798",
            "8f6bb07c-dd12-455a-abd6-c5df65ea7889",
            "62540d84-147a-40cd-b19f-28e56fd94222",
            "68f9a179-9d99-4b8b-a114-81bc13a8f3b7",
            "6333ab88-615b-4070-bbf0-4e1d578ab81b",
            "be732819-07b4-483c-84c6-410f32d650d1"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "d5bd9721-06e0-477a-9113-19ccce16f576",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
