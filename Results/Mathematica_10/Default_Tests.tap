#! DOCKER > wolfram -script output/Tests/Default_Tests.m
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
# SYSTEM: Mathematica_10
# TEST: Default_Tests
# Define 0 to be the default argument for a function f:
ok  Default[f] = 0    ==>     0
    ---
    data:
        got: 0
        expect: 0
        expect_evaluated: 0
    ...
# _. represents an argument that can be omitted:
ok  f[x_., y_.] = {x, y}    ==>     {x, y}
    ---
    data:
        got: {x, y}
        expect: {x, y}
        expect_evaluated: {x, y}
    ...
# If the second argument is omitted, the default value of 0 is used instead:
ok  f[a]    ==>     {a, 0}
    ---
    data:
        got: {a, 0}
        expect: {a, 0}
        expect_evaluated: {a, 0}
    ...
# If both arguments are omitted, both are taken to have the default value 0:
ok  f[]    ==>     {0, 0}
    ---
    data:
        got: {0, 0}
        expect: {0, 0}
        expect_evaluated: {0, 0}
    ...
