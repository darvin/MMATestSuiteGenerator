{
    "stats": {
        "suites": 0,
        "tests": 3,
        "passes": 3,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T23:01:43.002Z",
        "end": "2018-06-03T23:01:43.002Z",
        "duration": 0,
        "testsRegistered": 3,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "ExpandAll[1/(1 + x)^3 + Sin[(1 + x)^3]]    ➡️     1/(1 + 3*x + 3*x^2 + x^3) + Sin[1 + 3*x + 3*x^2 + x^3]",
                "fullTitle": "ExpandAll[1/(1 + x)^3 + Sin[(1 + x)^3]]    ➡️     1/(1 + 3*x + 3*x^2 + x^3) + Sin[1 + 3*x + 3*x^2 + x^3]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4cdff6d5-8ac6-4aa9-8869-824936c5ca35",
                "parentUUID": "ebce04ee-3f01-4327-bf31-8278cbed1e08",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/ExpandAll_Tests.m\\n# SYSTEM: Mathematica_10\\n# TEST: ExpandAll_Tests\\n# Expand polynomials anywhere inside an expression: \\n\\n\\ndata: \\n  got:              (1 + 3*x + 3*x^2 + x^3)^(-1) + Sin[1 + 3*x + 3*x^2 + x^3]\\n  expect:           1/(1 + 3*x + 3*x^2 + x^3) + Sin[1 + 3*x + 3*x^2 + x^3]\\n  expect_evaluated: (1 + 3*x + 3*x^2 + x^3)^(-1) + Sin[1 + 3*x + 3*x^2 + x^3]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(1 + 3*x + 3*x^2 + x^3)^(-1) + Sin[1 + 3*x + 3*x^2 + x^3]",
                    "expected": "1/(1 + 3*x + 3*x^2 + x^3) + Sin[1 + 3*x + 3*x^2 + x^3]"
                }
            },
            {
                "title": "Expand[1/(1 + x)^3 + Sin[(1 + x)^3]]    ➡️     1/(1 + x)^3 + Sin[(1 + x)^3]",
                "fullTitle": "Expand[1/(1 + x)^3 + Sin[(1 + x)^3]]    ➡️     1/(1 + x)^3 + Sin[(1 + x)^3]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1457da5a-675a-47e7-9603-e376fafc3103",
                "parentUUID": "ebce04ee-3f01-4327-bf31-8278cbed1e08",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              (1 + x)^(-3) + Sin[(1 + x)^3]\\n  expect:           1/(1 + x)^3 + Sin[(1 + x)^3]\\n  expect_evaluated: (1 + x)^(-3) + Sin[(1 + x)^3]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(1 + x)^(-3) + Sin[(1 + x)^3]",
                    "expected": "1/(1 + x)^3 + Sin[(1 + x)^3]"
                }
            },
            {
                "title": "ExpandAll[((1 + a)*(1 + b))[x]]    ➡️     (1 + a + b + a*b)[x]",
                "fullTitle": "ExpandAll[((1 + a)*(1 + b))[x]]    ➡️     (1 + a + b + a*b)[x]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ad457a81-6f0b-426b-8701-29e550d890ff",
                "parentUUID": "ebce04ee-3f01-4327-bf31-8278cbed1e08",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[ExpandAll,paclet:ref/ExpandAll] goes into heads:\\n\\n\\ndata: \\n  got:              (1 + a + b + a*b)[x]\\n  expect:           (1 + a + b + a*b)[x]\\n  expect_evaluated: (1 + a + b + a*b)[x]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(1 + a + b + a*b)[x]",
                    "expected": "(1 + a + b + a*b)[x]"
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "4cdff6d5-8ac6-4aa9-8869-824936c5ca35",
            "1457da5a-675a-47e7-9603-e376fafc3103",
            "ad457a81-6f0b-426b-8701-29e550d890ff"
        ],
        "failures": [],
        "skipped": [],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "ebce04ee-3f01-4327-bf31-8278cbed1e08",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
