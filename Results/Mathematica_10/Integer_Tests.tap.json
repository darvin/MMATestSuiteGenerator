{
    "stats": {
        "suites": 0,
        "tests": 14,
        "passes": 14,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-11T04:14:01.259Z",
        "end": "2018-06-11T04:14:01.259Z",
        "duration": 0,
        "testsRegistered": 14,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "-12    ➡️     -12",
                "fullTitle": "-12    ➡️     -12",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1c746284-f6b0-428c-9066-d7a35f72dddd",
                "parentUUID": "07e3d105-9bdd-45ea-90f2-b3e0c775d079",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/Integer_Tests.m\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: Integer_Tests\\n# Enter an integer:\\n\\n\\ndata: \\n  got:              -12\\n  expect:           -12\\n  expect_evaluated: -12\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": -12,
                    "expected": -12
                }
            },
            {
                "title": "Head[%]    ➡️     Integer",
                "fullTitle": "Head[%]    ➡️     Integer",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "776b6cd6-0c89-447b-ba0a-4b0e9fd78d65",
                "parentUUID": "07e3d105-9bdd-45ea-90f2-b3e0c775d079",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Integer,paclet:ref/Integer] is the RefLink[Head,paclet:ref/Head] used for integers:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "308301830183093810389108725092184914914891917449832749872947298472    ➡️     308301830183093810389108725092184914914891917449832749872947298472",
                "fullTitle": "308301830183093810389108725092184914914891917449832749872947298472    ➡️     308301830183093810389108725092184914914891917449832749872947298472",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "610ccf23-28eb-4575-ab47-a6534bf26944",
                "parentUUID": "07e3d105-9bdd-45ea-90f2-b3e0c775d079",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter a very large integer:\\n\\n\\ndata: \\n  got:              3.083018301830938e+65\\n  expect:           3.083018301830938e+65\\n  expect_evaluated: 3.083018301830938e+65\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 3.083018301830938e+65,
                    "expected": 3.083018301830938e+65
                }
            },
            {
                "title": "6455773865180671    ➡️     6455773865180671",
                "fullTitle": "6455773865180671    ➡️     6455773865180671",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "666d2e7f-56d6-4247-9612-410f44f60042",
                "parentUUID": "07e3d105-9bdd-45ea-90f2-b3e0c775d079",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter an integer in base 2:\\n\\n\\ndata: \\n  got:              6455773865180671\\n  expect:           6455773865180671\\n  expect_evaluated: 6455773865180671\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 6455773865180671,
                    "expected": 6455773865180671
                }
            },
            {
                "title": "4000    ➡️     4000",
                "fullTitle": "4000    ➡️     4000",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f28d3dc3-4c67-4547-8971-4f65eac8f7d0",
                "parentUUID": "07e3d105-9bdd-45ea-90f2-b3e0c775d079",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter an integer in hexadecimal:\\n\\n\\ndata: \\n  got:              4000\\n  expect:           4000\\n  expect_evaluated: 4000\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 4000,
                    "expected": 4000
                }
            },
            {
                "title": "BaseForm[6455773865180671, 2]    ➡️     Subscript[10110111011110111110111111011111110111111110111111111, 2]",
                "fullTitle": "BaseForm[6455773865180671, 2]    ➡️     Subscript[10110111011110111110111111011111110111111110111111111, 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2ddbe07c-5fc4-48ae-adce-9bb2aff6003a",
                "parentUUID": "07e3d105-9bdd-45ea-90f2-b3e0c775d079",
                "skipped": false,
                "isHook": false,
                "context": "\"# Format an integer using base 2: \\n\\n\\ndata: \\n  got:              1.0110111011110111e+52\\n  expect:           Subscript[10110111011110111110111111011111110111111110111111111, 2]\\n  expect_evaluated: 1.0110111011110111e+52\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1.0110111011110111e+52,
                    "expected": "Subscript[10110111011110111110111111011111110111111110111111111, 2]"
                }
            },
            {
                "title": "MatchQ[1234, _Integer]    ➡️     True",
                "fullTitle": "MatchQ[1234, _Integer]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "deb9ec75-9393-4bba-b874-be2d3b81cfe2",
                "parentUUID": "07e3d105-9bdd-45ea-90f2-b3e0c775d079",
                "skipped": false,
                "isHook": false,
                "context": "\"#!                                                      2\\n#!                                                      2\\n# _Integer can be used to stand for an integer in a pattern:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "f[3, g[-4]] /. x_Integer -> 1/x    ➡️     f[1/3, g[-(1/4)]]",
                "fullTitle": "f[3, g[-4]] /. x_Integer -> 1/x    ➡️     f[1/3, g[-(1/4)]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a01b1d4f-7a73-49df-8484-456ab1dc1c0f",
                "parentUUID": "07e3d105-9bdd-45ea-90f2-b3e0c775d079",
                "skipped": false,
                "isHook": false,
                "context": "\"# A rule that replaces integers with their reciprocals:\\n\\n\\ndata: \\n  got:              1      1\\n  expect:           f[1/3, g[-(1/4)]]\\n  expect_evaluated: 1      1\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "1      1",
                    "expected": "f[1/3, g[-(1/4)]]"
                }
            },
            {
                "title": "divisibleby3[x_Integer] := Mod[x, 3] == 0; divisibleby3 /@ {123, -40, 3.14}    ➡️     {True, False, divisibleby3[3.14]}",
                "fullTitle": "divisibleby3[x_Integer] := Mod[x, 3] == 0; divisibleby3 /@ {123, -40, 3.14}    ➡️     {True, False, divisibleby3[3.14]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4cb719e3-0d37-42bb-9ae2-d8d5f17ccf86",
                "parentUUID": "07e3d105-9bdd-45ea-90f2-b3e0c775d079",
                "skipped": false,
                "isHook": false,
                "context": "\"#! f[-, g[-(-)]]\\n#!   3      4\\n#! f[-, g[-(-)]]\\n#!   3      4\\n# Define a function that only works for integers:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "fd[x_, k_, d_Integer] = D[x^k, x]    ➡️     k*x^(-1 + k)",
                "fullTitle": "fd[x_, k_, d_Integer] = D[x^k, x]    ➡️     k*x^(-1 + k)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d3eb7159-ea26-4ffc-bca1-752b0b6ffb3c",
                "parentUUID": "07e3d105-9bdd-45ea-90f2-b3e0c775d079",
                "skipped": false,
                "isHook": false,
                "context": "\"# Define a function that has a special case for integers:\\n\\n\\ndata: \\n  got:              -1 + k\\n  expect:           k*x^(-1 + k)\\n  expect_evaluated: -1 + k\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "-1 + k",
                    "expected": "k*x^(-1 + k)"
                }
            },
            {
                "title": "HoldComplete[Plot3D[fd[1, k, d], {k, 0, 2}, {d, 0, 5}, PlotRange -> All]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[Plot3D[fd[1, k, d], {k, 0, 2}, {d, 0, 5}, PlotRange -> All]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "53d45ecb-2569-40d5-9639-fc9f9c50268e",
                "parentUUID": "07e3d105-9bdd-45ea-90f2-b3e0c775d079",
                "skipped": true,
                "isHook": false,
                "context": "\"#! k x\\n#! k x\\n# Make a surface plot of the fractional derivative of x^k at x=1 as a function of k and order:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NumberQ[1234]    ➡️     True",
                "fullTitle": "NumberQ[1234]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bd1a1f0e-3387-4982-8e61-619c775dde44",
                "parentUUID": "07e3d105-9bdd-45ea-90f2-b3e0c775d079",
                "skipped": false,
                "isHook": false,
                "context": "\"# Integers are numbers:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "AtomQ[1234]    ➡️     True",
                "fullTitle": "AtomQ[1234]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6c257838-b507-46f5-b17a-5c07b1718d36",
                "parentUUID": "07e3d105-9bdd-45ea-90f2-b3e0c775d079",
                "skipped": false,
                "isHook": false,
                "context": "\"# Integers are atomic objects with no subexpressions:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Reduce[x^1000 - 2*x^777 + 1 == 0, x, Integers]    ➡️     x == 1",
                "fullTitle": "Reduce[x^1000 - 2*x^777 + 1 == 0, x, Integers]    ➡️     x == 1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ed382bfe-89eb-4f94-bedb-57ab53e5e0dc",
                "parentUUID": "07e3d105-9bdd-45ea-90f2-b3e0c775d079",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Integers,paclet:ref/Integers] to represent assumptions and indicate domain conditions: \\n\\n\\ndata: \\n  got:              x == 1\\n  expect:           x == 1\\n  expect_evaluated: x == 1\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x == 1",
                    "expected": "x == 1"
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "1c746284-f6b0-428c-9066-d7a35f72dddd",
            "776b6cd6-0c89-447b-ba0a-4b0e9fd78d65",
            "610ccf23-28eb-4575-ab47-a6534bf26944",
            "666d2e7f-56d6-4247-9612-410f44f60042",
            "f28d3dc3-4c67-4547-8971-4f65eac8f7d0",
            "2ddbe07c-5fc4-48ae-adce-9bb2aff6003a",
            "deb9ec75-9393-4bba-b874-be2d3b81cfe2",
            "a01b1d4f-7a73-49df-8484-456ab1dc1c0f",
            "4cb719e3-0d37-42bb-9ae2-d8d5f17ccf86",
            "d3eb7159-ea26-4ffc-bca1-752b0b6ffb3c",
            "53d45ecb-2569-40d5-9639-fc9f9c50268e",
            "bd1a1f0e-3387-4982-8e61-619c775dde44",
            "6c257838-b507-46f5-b17a-5c07b1718d36",
            "ed382bfe-89eb-4f94-bedb-57ab53e5e0dc"
        ],
        "failures": [],
        "skipped": [
            "776b6cd6-0c89-447b-ba0a-4b0e9fd78d65",
            "53d45ecb-2569-40d5-9639-fc9f9c50268e"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "07e3d105-9bdd-45ea-90f2-b3e0c775d079",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
