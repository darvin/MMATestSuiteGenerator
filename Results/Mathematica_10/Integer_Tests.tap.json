{
    "stats": {
        "suites": 0,
        "tests": 14,
        "passes": 14,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T12:20:35.163Z",
        "end": "2018-06-03T12:20:35.163Z",
        "duration": 0,
        "testsRegistered": 14,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "-12    ➡️     -12",
                "fullTitle": "-12    ➡️     -12",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4e5d27e2-259a-4f61-bc88-6391e6b71f06",
                "parentUUID": "e8943499-9e04-4037-b81e-941cd88378c6",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/Integer_Tests.m\\n# SYSTEM: Mathematica_10\\n# TEST: Integer_Tests\\n# Enter an integer:\\n\\n\\ndata: \\n  got:              -12\\n  expect:           -12\\n  expect_evaluated: -12\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": -12,
                    "expected": -12
                }
            },
            {
                "title": "Head[%]    ➡️     Integer",
                "fullTitle": "Head[%]    ➡️     Integer",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "adc1fcae-1a3f-478c-be2f-fced448b7c8c",
                "parentUUID": "e8943499-9e04-4037-b81e-941cd88378c6",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Integer,paclet:ref/Integer] is the RefLink[Head,paclet:ref/Head] used for integers:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "308301830183093810389108725092184914914891917449832749872947298472    ➡️     308301830183093810389108725092184914914891917449832749872947298472",
                "fullTitle": "308301830183093810389108725092184914914891917449832749872947298472    ➡️     308301830183093810389108725092184914914891917449832749872947298472",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3cd7990d-cd50-4993-b884-1e81d585278e",
                "parentUUID": "e8943499-9e04-4037-b81e-941cd88378c6",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter a very large integer:\\n\\n\\ndata: \\n  got:              3.083018301830938e+65\\n  expect:           3.083018301830938e+65\\n  expect_evaluated: 3.083018301830938e+65\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 3.083018301830938e+65,
                    "expected": 3.083018301830938e+65
                }
            },
            {
                "title": "6455773865180671    ➡️     6455773865180671",
                "fullTitle": "6455773865180671    ➡️     6455773865180671",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "910d0558-9cfe-4b0d-96d1-22a98bd7a8ec",
                "parentUUID": "e8943499-9e04-4037-b81e-941cd88378c6",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter an integer in base 2:\\n\\n\\ndata: \\n  got:              6455773865180671\\n  expect:           6455773865180671\\n  expect_evaluated: 6455773865180671\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 6455773865180671,
                    "expected": 6455773865180671
                }
            },
            {
                "title": "4000    ➡️     4000",
                "fullTitle": "4000    ➡️     4000",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e51843d0-fa11-4e59-8445-f883410477b3",
                "parentUUID": "e8943499-9e04-4037-b81e-941cd88378c6",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter an integer in hexadecimal:\\n\\n\\ndata: \\n  got:              4000\\n  expect:           4000\\n  expect_evaluated: 4000\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 4000,
                    "expected": 4000
                }
            },
            {
                "title": "BaseForm[6455773865180671, 2]    ➡️     Subscript[10110111011110111110111111011111110111111110111111111, 2]",
                "fullTitle": "BaseForm[6455773865180671, 2]    ➡️     Subscript[10110111011110111110111111011111110111111110111111111, 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fdb2b127-e9b6-4e30-b36d-12928d67a1ae",
                "parentUUID": "e8943499-9e04-4037-b81e-941cd88378c6",
                "skipped": true,
                "isHook": false,
                "context": "\"# Format an integer using base 2: \\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "MatchQ[1234, _Integer]    ➡️     True",
                "fullTitle": "MatchQ[1234, _Integer]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bd217325-07eb-46a5-8ff9-d7d8b4a4e48e",
                "parentUUID": "e8943499-9e04-4037-b81e-941cd88378c6",
                "skipped": false,
                "isHook": false,
                "context": "\"# _Integer can be used to stand for an integer in a pattern:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "f[3, g[-4]] /. x_Integer -> 1/x    ➡️     f[1/3, g[-(1/4)]]",
                "fullTitle": "f[3, g[-4]] /. x_Integer -> 1/x    ➡️     f[1/3, g[-(1/4)]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "84dd011a-66d5-4577-aa8b-e76f8e69ac61",
                "parentUUID": "e8943499-9e04-4037-b81e-941cd88378c6",
                "skipped": false,
                "isHook": false,
                "context": "\"# A rule that replaces integers with their reciprocals:\\n\\n\\ndata: \\n  got:              f[1/3, g[-1/4]]\\n  expect:           f[1/3, g[-(1/4)]]\\n  expect_evaluated: f[1/3, g[-1/4]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[1/3, g[-1/4]]",
                    "expected": "f[1/3, g[-(1/4)]]"
                }
            },
            {
                "title": "divisibleby3 /@ {123, -40, 3.14}    ➡️     {True, False, divisibleby3[3.14]}",
                "fullTitle": "divisibleby3 /@ {123, -40, 3.14}    ➡️     {True, False, divisibleby3[3.14]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d1ff464b-3d82-4ce1-bf90-0a7e4ca8ff91",
                "parentUUID": "e8943499-9e04-4037-b81e-941cd88378c6",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "fd[x_, k_, d_Integer] = D[x^k, x]    ➡️     k*x^(-1 + k)",
                "fullTitle": "fd[x_, k_, d_Integer] = D[x^k, x]    ➡️     k*x^(-1 + k)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "122d983e-e9e3-4254-9202-1e7808102269",
                "parentUUID": "e8943499-9e04-4037-b81e-941cd88378c6",
                "skipped": false,
                "isHook": false,
                "context": "\"# Define a function that has a special case for integers:\\n\\n\\ndata: \\n  got:              k*x^(-1 + k)\\n  expect:           k*x^(-1 + k)\\n  expect_evaluated: k*x^(-1 + k)\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "k*x^(-1 + k)",
                    "expected": "k*x^(-1 + k)"
                }
            },
            {
                "title": "HoldComplete[Plot3D[fd[1, k, d], {k, 0, 2}, {d, 0, 5}, PlotRange -> All]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[Plot3D[fd[1, k, d], {k, 0, 2}, {d, 0, 5}, PlotRange -> All]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6913753a-59e3-45eb-86c4-426d6c84d956",
                "parentUUID": "e8943499-9e04-4037-b81e-941cd88378c6",
                "skipped": true,
                "isHook": false,
                "context": "\"# Make a surface plot of the fractional derivative of x^k at x=1 as a function of k and order:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NumberQ[1234]    ➡️     True",
                "fullTitle": "NumberQ[1234]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "34584f80-04f7-42d6-b0e2-a094345002fe",
                "parentUUID": "e8943499-9e04-4037-b81e-941cd88378c6",
                "skipped": false,
                "isHook": false,
                "context": "\"# Integers are numbers:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "AtomQ[1234]    ➡️     True",
                "fullTitle": "AtomQ[1234]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "20333509-e548-48d3-a5b1-f480a18320a0",
                "parentUUID": "e8943499-9e04-4037-b81e-941cd88378c6",
                "skipped": false,
                "isHook": false,
                "context": "\"# Integers are atomic objects with no subexpressions:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Reduce[x^1000 - 2*x^777 + 1 == 0, x, Integers]    ➡️     x == 1",
                "fullTitle": "Reduce[x^1000 - 2*x^777 + 1 == 0, x, Integers]    ➡️     x == 1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "44292062-be39-41aa-99dc-7208038d3dff",
                "parentUUID": "e8943499-9e04-4037-b81e-941cd88378c6",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Integers,paclet:ref/Integers] to represent assumptions and indicate domain conditions: \\n\\n\\ndata: \\n  got:              x == 1\\n  expect:           x == 1\\n  expect_evaluated: x == 1\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x == 1",
                    "expected": "x == 1"
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "4e5d27e2-259a-4f61-bc88-6391e6b71f06",
            "adc1fcae-1a3f-478c-be2f-fced448b7c8c",
            "3cd7990d-cd50-4993-b884-1e81d585278e",
            "910d0558-9cfe-4b0d-96d1-22a98bd7a8ec",
            "e51843d0-fa11-4e59-8445-f883410477b3",
            "fdb2b127-e9b6-4e30-b36d-12928d67a1ae",
            "bd217325-07eb-46a5-8ff9-d7d8b4a4e48e",
            "84dd011a-66d5-4577-aa8b-e76f8e69ac61",
            "d1ff464b-3d82-4ce1-bf90-0a7e4ca8ff91",
            "122d983e-e9e3-4254-9202-1e7808102269",
            "6913753a-59e3-45eb-86c4-426d6c84d956",
            "34584f80-04f7-42d6-b0e2-a094345002fe",
            "20333509-e548-48d3-a5b1-f480a18320a0",
            "44292062-be39-41aa-99dc-7208038d3dff"
        ],
        "failures": [],
        "skipped": [
            "adc1fcae-1a3f-478c-be2f-fced448b7c8c",
            "fdb2b127-e9b6-4e30-b36d-12928d67a1ae",
            "d1ff464b-3d82-4ce1-bf90-0a7e4ca8ff91",
            "6913753a-59e3-45eb-86c4-426d6c84d956"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "e8943499-9e04-4037-b81e-941cd88378c6",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
