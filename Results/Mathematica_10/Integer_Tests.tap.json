{
    "stats": {
        "suites": 0,
        "tests": 14,
        "passes": 14,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T23:01:54.507Z",
        "end": "2018-06-03T23:01:54.507Z",
        "duration": 0,
        "testsRegistered": 14,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "-12    ➡️     -12",
                "fullTitle": "-12    ➡️     -12",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "255ee61a-b4a8-4b96-8c2c-8dbd9b46092d",
                "parentUUID": "95a02f60-ccfc-479e-893b-2d01c15a0c2c",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/Integer_Tests.m\\n# SYSTEM: Mathematica_10\\n# TEST: Integer_Tests\\n# Enter an integer:\\n\\n\\ndata: \\n  got:              -12\\n  expect:           -12\\n  expect_evaluated: -12\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": -12,
                    "expected": -12
                }
            },
            {
                "title": "Head[%]    ➡️     Integer",
                "fullTitle": "Head[%]    ➡️     Integer",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a788aa13-660d-4127-b784-4638e35c15be",
                "parentUUID": "95a02f60-ccfc-479e-893b-2d01c15a0c2c",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Integer,paclet:ref/Integer] is the RefLink[Head,paclet:ref/Head] used for integers:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "308301830183093810389108725092184914914891917449832749872947298472    ➡️     308301830183093810389108725092184914914891917449832749872947298472",
                "fullTitle": "308301830183093810389108725092184914914891917449832749872947298472    ➡️     308301830183093810389108725092184914914891917449832749872947298472",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f122337f-f439-4cb5-932a-969c162b16ce",
                "parentUUID": "95a02f60-ccfc-479e-893b-2d01c15a0c2c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter a very large integer:\\n\\n\\ndata: \\n  got:              3.083018301830938e+65\\n  expect:           3.083018301830938e+65\\n  expect_evaluated: 3.083018301830938e+65\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 3.083018301830938e+65,
                    "expected": 3.083018301830938e+65
                }
            },
            {
                "title": "6455773865180671    ➡️     6455773865180671",
                "fullTitle": "6455773865180671    ➡️     6455773865180671",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "088b4851-f8ef-4133-8173-48d96eac57da",
                "parentUUID": "95a02f60-ccfc-479e-893b-2d01c15a0c2c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter an integer in base 2:\\n\\n\\ndata: \\n  got:              6455773865180671\\n  expect:           6455773865180671\\n  expect_evaluated: 6455773865180671\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 6455773865180671,
                    "expected": 6455773865180671
                }
            },
            {
                "title": "4000    ➡️     4000",
                "fullTitle": "4000    ➡️     4000",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5b83c466-d4dd-4c08-b124-d84aafbd2b55",
                "parentUUID": "95a02f60-ccfc-479e-893b-2d01c15a0c2c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter an integer in hexadecimal:\\n\\n\\ndata: \\n  got:              4000\\n  expect:           4000\\n  expect_evaluated: 4000\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 4000,
                    "expected": 4000
                }
            },
            {
                "title": "BaseForm[6455773865180671, 2]    ➡️     Subscript[10110111011110111110111111011111110111111110111111111, 2]",
                "fullTitle": "BaseForm[6455773865180671, 2]    ➡️     Subscript[10110111011110111110111111011111110111111110111111111, 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bd831bf3-5f03-4eb5-bf01-40d43424b483",
                "parentUUID": "95a02f60-ccfc-479e-893b-2d01c15a0c2c",
                "skipped": true,
                "isHook": false,
                "context": "\"# Format an integer using base 2: \\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "MatchQ[1234, _Integer]    ➡️     True",
                "fullTitle": "MatchQ[1234, _Integer]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "471c5b87-7ae1-4d78-9664-3ab3451463fd",
                "parentUUID": "95a02f60-ccfc-479e-893b-2d01c15a0c2c",
                "skipped": false,
                "isHook": false,
                "context": "\"# _Integer can be used to stand for an integer in a pattern:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "f[3, g[-4]] /. x_Integer -> 1/x    ➡️     f[1/3, g[-(1/4)]]",
                "fullTitle": "f[3, g[-4]] /. x_Integer -> 1/x    ➡️     f[1/3, g[-(1/4)]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1e636901-6b33-4774-86f4-41f9b5d7ef80",
                "parentUUID": "95a02f60-ccfc-479e-893b-2d01c15a0c2c",
                "skipped": false,
                "isHook": false,
                "context": "\"# A rule that replaces integers with their reciprocals:\\n\\n\\ndata: \\n  got:              f[1/3, g[-1/4]]\\n  expect:           f[1/3, g[-(1/4)]]\\n  expect_evaluated: f[1/3, g[-1/4]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[1/3, g[-1/4]]",
                    "expected": "f[1/3, g[-(1/4)]]"
                }
            },
            {
                "title": "divisibleby3 /@ {123, -40, 3.14}    ➡️     {True, False, divisibleby3[3.14]}",
                "fullTitle": "divisibleby3 /@ {123, -40, 3.14}    ➡️     {True, False, divisibleby3[3.14]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6b3d8cb8-d1e3-47dd-874c-4e966cd0de5a",
                "parentUUID": "95a02f60-ccfc-479e-893b-2d01c15a0c2c",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "fd[x_, k_, d_Integer] = D[x^k, x]    ➡️     k*x^(-1 + k)",
                "fullTitle": "fd[x_, k_, d_Integer] = D[x^k, x]    ➡️     k*x^(-1 + k)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ab0cc551-d8b0-44f8-a9e2-e974de310f4a",
                "parentUUID": "95a02f60-ccfc-479e-893b-2d01c15a0c2c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Define a function that has a special case for integers:\\n\\n\\ndata: \\n  got:              k*x^(-1 + k)\\n  expect:           k*x^(-1 + k)\\n  expect_evaluated: k*x^(-1 + k)\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "k*x^(-1 + k)",
                    "expected": "k*x^(-1 + k)"
                }
            },
            {
                "title": "HoldComplete[Plot3D[fd[1, k, d], {k, 0, 2}, {d, 0, 5}, PlotRange -> All]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[Plot3D[fd[1, k, d], {k, 0, 2}, {d, 0, 5}, PlotRange -> All]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f2ce3afb-b34f-4aa2-9cdb-c383ae8e6830",
                "parentUUID": "95a02f60-ccfc-479e-893b-2d01c15a0c2c",
                "skipped": true,
                "isHook": false,
                "context": "\"# Make a surface plot of the fractional derivative of x^k at x=1 as a function of k and order:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NumberQ[1234]    ➡️     True",
                "fullTitle": "NumberQ[1234]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9d956ddd-8757-454b-a1d9-c036ddd14d35",
                "parentUUID": "95a02f60-ccfc-479e-893b-2d01c15a0c2c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Integers are numbers:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "AtomQ[1234]    ➡️     True",
                "fullTitle": "AtomQ[1234]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "999262d0-a59f-4a1b-8bc2-0fded75a7e56",
                "parentUUID": "95a02f60-ccfc-479e-893b-2d01c15a0c2c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Integers are atomic objects with no subexpressions:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Reduce[x^1000 - 2*x^777 + 1 == 0, x, Integers]    ➡️     x == 1",
                "fullTitle": "Reduce[x^1000 - 2*x^777 + 1 == 0, x, Integers]    ➡️     x == 1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bd56ccb3-6c6a-4aa3-bb22-1a02f634bdda",
                "parentUUID": "95a02f60-ccfc-479e-893b-2d01c15a0c2c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Integers,paclet:ref/Integers] to represent assumptions and indicate domain conditions: \\n\\n\\ndata: \\n  got:              x == 1\\n  expect:           x == 1\\n  expect_evaluated: x == 1\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x == 1",
                    "expected": "x == 1"
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "255ee61a-b4a8-4b96-8c2c-8dbd9b46092d",
            "a788aa13-660d-4127-b784-4638e35c15be",
            "f122337f-f439-4cb5-932a-969c162b16ce",
            "088b4851-f8ef-4133-8173-48d96eac57da",
            "5b83c466-d4dd-4c08-b124-d84aafbd2b55",
            "bd831bf3-5f03-4eb5-bf01-40d43424b483",
            "471c5b87-7ae1-4d78-9664-3ab3451463fd",
            "1e636901-6b33-4774-86f4-41f9b5d7ef80",
            "6b3d8cb8-d1e3-47dd-874c-4e966cd0de5a",
            "ab0cc551-d8b0-44f8-a9e2-e974de310f4a",
            "f2ce3afb-b34f-4aa2-9cdb-c383ae8e6830",
            "9d956ddd-8757-454b-a1d9-c036ddd14d35",
            "999262d0-a59f-4a1b-8bc2-0fded75a7e56",
            "bd56ccb3-6c6a-4aa3-bb22-1a02f634bdda"
        ],
        "failures": [],
        "skipped": [
            "a788aa13-660d-4127-b784-4638e35c15be",
            "bd831bf3-5f03-4eb5-bf01-40d43424b483",
            "6b3d8cb8-d1e3-47dd-874c-4e966cd0de5a",
            "f2ce3afb-b34f-4aa2-9cdb-c383ae8e6830"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "95a02f60-ccfc-479e-893b-2d01c15a0c2c",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
