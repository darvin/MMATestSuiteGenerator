#! DOCKER > wolfram -script output/Tests/Unevaluated_Tests.m
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[$RecursionLimit, reclim], StringForm[Recursion depth of `1` exceeded., Short[HoldForm[1024], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
# SYSTEM: Mathematica_10
# TEST: Unevaluated_Tests
# Feed an unevaluated expression to RefLink[Length,paclet:ref/Length]: 
ok  Length[Unevaluated[5 + 6 + 7 + 8]]    ==>     4
    ---
    data:
        got: 4
        expect: 4
        expect_evaluated: 4
    ...
# Find the length of a symbol's name even if it has a value:
ok  xyzzy = 5 ;; symbolLength[xyzzy]    ==>     5 # skip
# RefLink[Unevaluated,paclet:ref/Unevaluated] works only where it appears; it is not propagated:
ok  f[x_] := g[x]; f[Unevaluated[1 + 1]]    ==>     g[2]
    ---
    data:
        got: g[2]
        expect: g[2]
        expect_evaluated: g[2]
    ...
# RefLink[Unevaluated,paclet:ref/Unevaluated] stops RefLink[Evaluate,paclet:ref/Evaluate]:
ok  Hold[Evaluate[Unevaluated[1 + 2]]]    ==>     Hold[Unevaluated[1 + 2]]
    ---
    data:
        got: Unevaluated[1 + 2]
        expect: Hold[Unevaluated[1 + 2]]
        expect_evaluated: Unevaluated[1 + 2]
    ...
# RefLink[Unevaluated,paclet:ref/Unevaluated] inside a held function remains:
ok  SetAttributes[f, HoldAll]; f[Unevaluated[1 + 2]]    ==>     f[Unevaluated[1 + 2]]
    ---
    data:
        got: g[3]
        expect: f[Unevaluated[1 + 2]]
        expect_evaluated: g[3]
    ...
