{
    "stats": {
        "suites": 0,
        "tests": 6,
        "passes": 6,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-11T04:13:54.165Z",
        "end": "2018-06-11T04:13:54.165Z",
        "duration": 0,
        "testsRegistered": 6,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "FreeQ[{1, 2, 4, 1, 0}, 0]    ➡️     False",
                "fullTitle": "FreeQ[{1, 2, 4, 1, 0}, 0]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "484e4414-0464-4438-b765-1988ac0c4bb8",
                "parentUUID": "558ffa5f-a24c-4834-aa3c-1faccf517adb",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/FreeQ_Tests.m\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: FreeQ_Tests\\n# Test whether a list is free of 0:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "FreeQ[{{1, 1, 3, 0}, {2, 1, 2, 2}}, 0]    ➡️     False",
                "fullTitle": "FreeQ[{{1, 1, 3, 0}, {2, 1, 2, 2}}, 0]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "406ff691-c2f0-4fc6-b33f-4d6c9c663ada",
                "parentUUID": "558ffa5f-a24c-4834-aa3c-1faccf517adb",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[FreeQ,paclet:ref/FreeQ] normally tests all levels in an expression:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "FreeQ[{a, b, b, a, a, a}, _Integer]    ➡️     True",
                "fullTitle": "FreeQ[{a, b, b, a, a, a}, _Integer]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2ec9290a-db28-409e-8642-fcd5fd33e1aa",
                "parentUUID": "558ffa5f-a24c-4834-aa3c-1faccf517adb",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[FreeQ,paclet:ref/FreeQ] works with patterns:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "FreeQ[{x^2, y^3, x^5, x^6}, y^_]    ➡️     False",
                "fullTitle": "FreeQ[{x^2, y^3, x^5, x^6}, y^_]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "82d7364c-572d-4956-9aed-7b75e378624e",
                "parentUUID": "558ffa5f-a24c-4834-aa3c-1faccf517adb",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "f[(c_)*(x_), x_] := c*f[x, x] /; FreeQ[c, x]; {f[3*x, x], f[a*x, x], f[(1 + x)*x, x]}    ➡️     {3*f[x, x], a*f[x, x], f[x*(1 + x), x]}",
                "fullTitle": "f[(c_)*(x_), x_] := c*f[x, x] /; FreeQ[c, x]; {f[3*x, x], f[a*x, x], f[(1 + x)*x, x]}    ➡️     {3*f[x, x], a*f[x, x], f[x*(1 + x), x]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "005dc274-723a-49ba-a9a4-db6a7d6cb313",
                "parentUUID": "558ffa5f-a24c-4834-aa3c-1faccf517adb",
                "skipped": false,
                "isHook": false,
                "context": "\"# Define a function that factors out \\\"constants\\\":\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Table[FreeQ[Integrate[x^n, x], Log], {n, -5, 5}]    ➡️     {True, True, True, True, False, True, True, True, True, True, True}",
                "fullTitle": "Table[FreeQ[Integrate[x^n, x], Log], {n, -5, 5}]    ➡️     {True, True, True, True, False, True, True, True, True, True, True}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "23d4b85f-e874-4afc-893a-9ed4fa210e29",
                "parentUUID": "558ffa5f-a24c-4834-aa3c-1faccf517adb",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test which integrals are free of logarithms:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "484e4414-0464-4438-b765-1988ac0c4bb8",
            "406ff691-c2f0-4fc6-b33f-4d6c9c663ada",
            "2ec9290a-db28-409e-8642-fcd5fd33e1aa",
            "82d7364c-572d-4956-9aed-7b75e378624e",
            "005dc274-723a-49ba-a9a4-db6a7d6cb313",
            "23d4b85f-e874-4afc-893a-9ed4fa210e29"
        ],
        "failures": [],
        "skipped": [],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "558ffa5f-a24c-4834-aa3c-1faccf517adb",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
