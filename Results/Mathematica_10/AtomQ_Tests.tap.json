{
    "stats": {
        "suites": 0,
        "tests": 30,
        "passes": 30,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-11T04:13:33.230Z",
        "end": "2018-06-11T04:13:33.230Z",
        "duration": 0,
        "testsRegistered": 30,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "e = x + 22/7    ➡️     22/7 + x",
                "fullTitle": "e = x + 22/7    ➡️     22/7 + x",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b1c0cd87-33b6-4ce6-9e6f-db13bf9009b1",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/AtomQ_Tests.m\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: AtomQ_Tests\\n# Test if an expression cannot be subdivided:\\n\\n\\ndata: \\n  got:              22\\n  expect:           22/7 + x\\n  expect_evaluated: 22\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 22,
                    "expected": "22/7 + x"
                }
            },
            {
                "title": "AtomQ[e]    ➡️     False",
                "fullTitle": "AtomQ[e]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1457f2bb-62ec-4d05-a67a-0100e3f65900",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"#! -- + x\\n#! 7\\n#! -- + x\\n#! 7\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "e[[1]]    ➡️     22/7",
                "fullTitle": "e[[1]]    ➡️     22/7",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "01617206-0d2d-49dd-ab4d-fac7d9e4fc1b",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"# Since it is not an atom, its parts can be extracted:\\n\\n\\ndata: \\n  got:              22\\n  expect:           22/7\\n  expect_evaluated: 22\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 22,
                    "expected": "22/7"
                }
            },
            {
                "title": "AtomQ[%]    ➡️     True",
                "fullTitle": "AtomQ[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9f98016a-9bd9-4561-ae73-7873299154ca",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": true,
                "isHook": false,
                "context": "\"#! --\\n#! 7\\n#! --\\n#! 7\\n# This is a number that is an atom:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "AtomQ[\"This is an atom\"]    ➡️     True",
                "fullTitle": "AtomQ[\"This is an atom\"]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5c77a2b9-04d0-4a1c-be45-3eaf31aaa0b6",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"# Strings are not subdividable:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "AtomQ[ThisIsAnAtom]    ➡️     True",
                "fullTitle": "AtomQ[ThisIsAnAtom]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1907b877-5555-4562-9498-05716d305397",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"# Symbols are not subdividable:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "AtomQ[1.23]    ➡️     True",
                "fullTitle": "AtomQ[1.23]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "82bd9064-7dc0-4772-848a-ba3401fd647d",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numbers are not subdividable:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "FullForm[22/7]    ➡️     Rational[22, 7]",
                "fullTitle": "FullForm[22/7]    ➡️     Rational[22, 7]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7c70c4bb-e5f7-4fce-b782-169557953db1",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Rational,paclet:ref/Rational] numbers appear to have a compound structure:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "AtomQ[22/7]    ➡️     True",
                "fullTitle": "AtomQ[22/7]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fc175c31-fc3e-4102-8e13-bf4fec88cd32",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"# As numbers, they are not subdividable:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "{Numerator[22/7], Denominator[22/7]}    ➡️     {22, 7}",
                "fullTitle": "{Numerator[22/7], Denominator[22/7]}    ➡️     {22, 7}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "74943a0e-fb27-447e-ad7a-a26a9b593964",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"# The parts can be accessed through RefLink[Numerator,paclet:ref/Numerator] and RefLink[Denominator,paclet:ref/Denominator]:\\n\\n\\ndata: \\n  got: \\n    7:  null\\n    22: null\\n  expect: \\n    7:  null\\n    22: null\\n  expect_evaluated: \\n    7:  null\\n    22: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "7": null,
                        "22": null
                    },
                    "expected": {
                        "7": null,
                        "22": null
                    }
                }
            },
            {
                "title": "FullForm[1 + 2*I]    ➡️     Complex[1, 2]",
                "fullTitle": "FullForm[1 + 2*I]    ➡️     Complex[1, 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0b3c6c84-cb41-4cf3-a58e-af3d7a524231",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Complex,paclet:ref/Complex] numbers appear to have a compound structure:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "AtomQ[1 + 2*I]    ➡️     True",
                "fullTitle": "AtomQ[1 + 2*I]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7ccd2e56-1b26-475f-b000-14566913b9b8",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"# As numbers, they are not subdividable:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "{Re[1 + 2*I], Im[1 + 2*I]}    ➡️     {1, 2}",
                "fullTitle": "{Re[1 + 2*I], Im[1 + 2*I]}    ➡️     {1, 2}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ceff538d-fa55-47e2-acc2-389ad3e70e84",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"# The parts can be accessed through RefLink[Re,paclet:ref/Re] and RefLink[Im,paclet:ref/Im]:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    2: null\\n  expect: \\n    1: null\\n    2: null\\n  expect_evaluated: \\n    1: null\\n    2: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null
                    },
                    "expected": {
                        "1": null,
                        "2": null
                    }
                }
            },
            {
                "title": "HoldComplete[s = SparseArray[{i_, i_} -> i, 3]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[s = SparseArray[{i_, i_} -> i, 3]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "118f9c59-e31f-4b27-aeda-9d0983c27f0a",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[SparseArray,paclet:ref/SparseArray] objects are atomic raw objects:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "AtomQ[s]    ➡️     True",
                "fullTitle": "AtomQ[s]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ab9bd0df-f2e8-4497-a4bc-4c3757b6d648",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "a = Normal[s]    ➡️     {{1, 0, 0}, {0, 2, 0}, {0, 0, 3}}",
                "fullTitle": "a = Normal[s]    ➡️     {{1, 0, 0}, {0, 2, 0}, {0, 0, 3}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7f1fd9ab-5187-4ebb-a22c-99f4cf053f17",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"# Commands that work with RefLink[SparseArray,paclet:ref/SparseArray] objects typically do so on the represented array:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "s[[2,2]]    ➡️     2",
                "fullTitle": "s[[2,2]]    ➡️     2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "679da552-693e-48bb-9bc8-1e89f7c35921",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              2\\n  expect:           2\\n  expect_evaluated: 2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 2,
                    "expected": 2
                }
            },
            {
                "title": "a[[2,2]]    ➡️     2",
                "fullTitle": "a[[2,2]]    ➡️     2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "eee1c74c-416e-4a4c-bc18-2d4a22d0b108",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              2\\n  expect:           2\\n  expect_evaluated: 2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 2,
                    "expected": 2
                }
            },
            {
                "title": "FullForm[s]    ➡️     SparseArray[Automatic, {3, 3}, 0, {1, {{0, 1, 2, 3}, {{1}, {2}, {3}}}, {1, 2, 3}}]",
                "fullTitle": "FullForm[s]    ➡️     SparseArray[Automatic, {3, 3}, 0, {1, {{0, 1, 2, 3}, {{1}, {2}, {3}}}, {1, 2, 3}}]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c8c98358-be70-4aee-9e53-15b9b5547a46",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": true,
                "isHook": false,
                "context": "\"# The RefLink[FullForm,paclet:ref/FullForm] of a RefLink[SparseArray,paclet:ref/SparseArray] object is designed to be sufficient to reconstruct the raw object:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[s1 = SparseArray[Automatic, {3, 3}, 0, {1, {{0, 1, 2, 3}, {{1}, {2}, {3}}}, {1, 2, 3}}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[s1 = SparseArray[Automatic, {3, 3}, 0, {1, {{0, 1, 2, 3}, {{1}, {2}, {3}}}, {1, 2, 3}}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2a4bf920-41d9-4e03-8bad-2d5890151378",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "e = Fold[f, x, Range[5]]    ➡️     f[f[f[f[f[x, 1], 2], 3], 4], 5]",
                "fullTitle": "e = Fold[f, x, Range[5]]    ➡️     f[f[f[f[f[x, 1], 2], 3], 4], 5]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "84ad277d-8169-40c3-8428-3a52b0f21f74",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"# A deeply nested expression:\\n\\n\\ndata: \\n  got:              f[f[f[f[f[x, 1], 2], 3], 4], 5]\\n  expect:           f[f[f[f[f[x, 1], 2], 3], 4], 5]\\n  expect_evaluated: f[f[f[f[f[x, 1], 2], 3], 4], 5]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[f[f[f[f[x, 1], 2], 3], 4], 5]",
                    "expected": "f[f[f[f[f[x, 1], 2], 3], 4], 5]"
                }
            },
            {
                "title": "leaves[e]    ➡️     11",
                "fullTitle": "leaves[e]    ➡️     11",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a57ef544-5aa5-4005-8cbb-7328865af0ee",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LeafCount[e]    ➡️     11",
                "fullTitle": "LeafCount[e]    ➡️     11",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "292f10e0-e4cc-4f69-b72e-fd85bef5c4ff",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"# This is equivalent to RefLink[LeafCount,paclet:ref/LeafCount]:\\n\\n\\ndata: \\n  got:              11\\n  expect:           11\\n  expect_evaluated: 11\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 11,
                    "expected": 11
                }
            },
            {
                "title": "leaves[e, Heads -> False]    ➡️     6",
                "fullTitle": "leaves[e, Heads -> False]    ➡️     6",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b0698f58-84df-4164-a0d1-1045a24d4a01",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": true,
                "isHook": false,
                "context": "\"# With the option RefLink[Heads,paclet:ref/Heads]->RefLink[False,paclet:ref/False], only atoms with no branches are counted:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[TreeForm[e]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[TreeForm[e]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6bb1e6aa-689f-4a1d-b81b-4725c403623e",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": true,
                "isHook": false,
                "context": "\"# This corresponds to the dangling leaves you see with RefLink[TreeForm,paclet:ref/TreeForm]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "depth[expr_] := Block[{mind = Infinity, maxd = 0, burrow, d}, burrow[(e_)?AtomQ, d_] := (mind = Min[d, mind]; maxd = Max[d, maxd]); burrow[e_, d_] := Scan[burrow[#1, d + 1] & , e]; burrow[expr, 0]; {mind, maxd}]; depth[1 + x + 2*x^2]    ➡️     {1, 3}",
                "fullTitle": "depth[expr_] := Block[{mind = Infinity, maxd = 0, burrow, d}, burrow[(e_)?AtomQ, d_] := (mind = Min[d, mind]; maxd = Max[d, maxd]); burrow[e_, d_] := Scan[burrow[#1, d + 1] & , e]; burrow[expr, 0]; {mind, maxd}]; depth[1 + x + 2*x^2]    ➡️     {1, 3}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "21c56e50-f8f3-43ac-972d-ed4af40247d1",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the minimum and maximum \\\"depth\\\" of an expression:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    3: null\\n  expect: \\n    1: null\\n    3: null\\n  expect_evaluated: \\n    1: null\\n    3: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "3": null
                    },
                    "expected": {
                        "1": null,
                        "3": null
                    }
                }
            },
            {
                "title": "depth[{{1, 2}, {3, 4}}]    ➡️     {2, 2}",
                "fullTitle": "depth[{{1, 2}, {3, 4}}]    ➡️     {2, 2}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "196bd384-b099-494a-a9f4-9364db152fa9",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Depth[1 + x + 2*x^2]    ➡️     4",
                "fullTitle": "Depth[1 + x + 2*x^2]    ➡️     4",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5424744e-97c6-4f2e-82da-09cdce580730",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Depth,paclet:ref/Depth] gives the maximum depth plus 1:\\n\\n\\ndata: \\n  got:              4\\n  expect:           4\\n  expect_evaluated: 4\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 4,
                    "expected": 4
                }
            },
            {
                "title": "Map[f, 1 + x + 2*x^2, {-1}]    ➡️     f[1] + f[x] + f[2]*f[x]^f[2]",
                "fullTitle": "Map[f, 1 + x + 2*x^2, {-1}]    ➡️     f[1] + f[x] + f[2]*f[x]^f[2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e7ef45f5-68af-4bc4-a09a-6a6d9a160218",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Map,paclet:ref/Map][f,expr,{-1}] generally maps f on atoms in expr:\\n\\n\\ndata: \\n  got:              f[2]\\n  expect:           f[1] + f[x] + f[2]*f[x]^f[2]\\n  expect_evaluated: f[2]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[2]",
                    "expected": "f[1] + f[x] + f[2]*f[x]^f[2]"
                }
            },
            {
                "title": "mapf[(e_)?AtomQ] := f[e]; mapf[(head_)[args___]] := head @@ Table[mapf[arg], {arg, {args}}]; Map[f, 1 + x + 2*x^2, {-1}]    ➡️     f[1] + f[x] + f[2]*f[x]^f[2]",
                "fullTitle": "mapf[(e_)?AtomQ] := f[e]; mapf[(head_)[args___]] := head @@ Table[mapf[arg], {arg, {args}}]; Map[f, 1 + x + 2*x^2, {-1}]    ➡️     f[1] + f[x] + f[2]*f[x]^f[2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bb999c25-4289-46a4-a455-c53e4836e276",
                "parentUUID": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
                "skipped": false,
                "isHook": false,
                "context": "\"#! f[1] + f[x] + f[2] f[x]\\n#! f[1] + f[x] + f[2] f[x]\\n# This is equivalent to the following recursive function:\\n\\n\\ndata: \\n  got:              f[2]\\n  expect:           f[1] + f[x] + f[2]*f[x]^f[2]\\n  expect_evaluated: f[2]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[2]",
                    "expected": "f[1] + f[x] + f[2]*f[x]^f[2]"
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "b1c0cd87-33b6-4ce6-9e6f-db13bf9009b1",
            "1457f2bb-62ec-4d05-a67a-0100e3f65900",
            "01617206-0d2d-49dd-ab4d-fac7d9e4fc1b",
            "9f98016a-9bd9-4561-ae73-7873299154ca",
            "5c77a2b9-04d0-4a1c-be45-3eaf31aaa0b6",
            "1907b877-5555-4562-9498-05716d305397",
            "82bd9064-7dc0-4772-848a-ba3401fd647d",
            "7c70c4bb-e5f7-4fce-b782-169557953db1",
            "fc175c31-fc3e-4102-8e13-bf4fec88cd32",
            "74943a0e-fb27-447e-ad7a-a26a9b593964",
            "0b3c6c84-cb41-4cf3-a58e-af3d7a524231",
            "7ccd2e56-1b26-475f-b000-14566913b9b8",
            "ceff538d-fa55-47e2-acc2-389ad3e70e84",
            "118f9c59-e31f-4b27-aeda-9d0983c27f0a",
            "ab9bd0df-f2e8-4497-a4bc-4c3757b6d648",
            "7f1fd9ab-5187-4ebb-a22c-99f4cf053f17",
            "679da552-693e-48bb-9bc8-1e89f7c35921",
            "eee1c74c-416e-4a4c-bc18-2d4a22d0b108",
            "c8c98358-be70-4aee-9e53-15b9b5547a46",
            "2a4bf920-41d9-4e03-8bad-2d5890151378",
            "84ad277d-8169-40c3-8428-3a52b0f21f74",
            "a57ef544-5aa5-4005-8cbb-7328865af0ee",
            "292f10e0-e4cc-4f69-b72e-fd85bef5c4ff",
            "b0698f58-84df-4164-a0d1-1045a24d4a01",
            "6bb1e6aa-689f-4a1d-b81b-4725c403623e",
            "21c56e50-f8f3-43ac-972d-ed4af40247d1",
            "196bd384-b099-494a-a9f4-9364db152fa9",
            "5424744e-97c6-4f2e-82da-09cdce580730",
            "e7ef45f5-68af-4bc4-a09a-6a6d9a160218",
            "bb999c25-4289-46a4-a455-c53e4836e276"
        ],
        "failures": [],
        "skipped": [
            "9f98016a-9bd9-4561-ae73-7873299154ca",
            "7c70c4bb-e5f7-4fce-b782-169557953db1",
            "0b3c6c84-cb41-4cf3-a58e-af3d7a524231",
            "118f9c59-e31f-4b27-aeda-9d0983c27f0a",
            "c8c98358-be70-4aee-9e53-15b9b5547a46",
            "2a4bf920-41d9-4e03-8bad-2d5890151378",
            "a57ef544-5aa5-4005-8cbb-7328865af0ee",
            "b0698f58-84df-4164-a0d1-1045a24d4a01",
            "6bb1e6aa-689f-4a1d-b81b-4725c403623e"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "eb3fa5ee-6298-4fba-a4bb-79f8e90c7a79",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
