#! DOCKER > wolfram -script output/Tests/RandomReal_Tests.m
# SYSTEM: Mathematica_10
# TEST: RandomReal_Tests
# A random real number in the range 0 to 1:
ok  RandomReal[]    ==>     0.097196 # skip
# A random real number in the range -10 to 10:
ok  RandomReal[{-10, 10}]    ==>     0.669505 # skip
# A random real number in the range 0 to 10:
ok  RandomReal[10]    ==>     2.23927 # skip
# 5 random reals in the range 0 to 1:
ok  RandomReal[1, 5]    ==>     {0.971496, 0.659645, 0.345808, 0.5159, 0.928815} # skip
# A 3*2 array of random reals in the range -1 to 1:
ok  RandomReal[{-1, 1}, {3, 2}]    ==>     {{-0.913821, -0.0781397}, {0.367039, -0.49319}, {-0.684801, -0.803185}} # skip
# Random coordinates for 4 points in 3 dimensions:
ok  RandomReal[1, {4, 3}]    ==>     {{0.929469, 0.362773, 0.111376}, {0.529108, 0.648414, 0.700633}, {0.850732, 0.413317, 0.402985}, {0.38005, 0.45334, 0.137688}} # skip
# Generate random reals of any magnitude:
ok  RandomReal[10^1000]    ==>     9.90193466468388*10^999 # skip
# Generate random reals of any precision:
ok  RandomReal[WorkingPrecision -> 30]    ==>     0.0705492899593844370044527140925`29.848492647172254 # skip
ok  RandomReal[10^1000, WorkingPrecision -> 50]    ==>     2.8422489673854466618683632870228088809936807219465`49.45366211737256*10^999 # skip
# Generate low-precision reals:
ok  RandomReal[{-1, 1}, 5, WorkingPrecision -> 5]    ==>     {-0.91953, -0.76353, 0.99562, -0.25249, 0.88878} # skip
# Generate a random real with 50-digit precision:
ok  RandomReal[WorkingPrecision -> 50]    ==>     0.31918832523749509908670507276463385641549235623071`49.504046998036905 # skip
ok  RandomReal[{-1, 1}, WorkingPrecision -> 50]    ==>     -0.47915048778086224644991844244514281568096945072073`49.680471934601414 # skip
# A random walk:
ok  HoldComplete[ListLinePlot[Accumulate[RandomReal[{-1, 1}, 100]]]]    ==>     $Failed # skip
# Circles at random positions:
ok  HoldComplete[Graphics[Circle /@ RandomReal[10, {40, 2}]]]    ==>     $Failed # skip
# Random array of gray levels:
ok  HoldComplete[ArrayPlot[RandomReal[1, {30, 40}]]]    ==>     $Failed # skip
# Spheres at random positions:
ok  HoldComplete[Graphics3D[Sphere /@ RandomReal[10, {50, 3}]]]    ==>     $Failed # skip
# 2D random walk:
ok  HoldComplete[Graphics[Line[Accumulate[RandomReal[{-1, 1}, {500, 2}]]]]]    ==>     $Failed # skip
# 3D random walk:
ok  HoldComplete[Graphics3D[Line[Accumulate[RandomReal[{-1, 1}, {500, 3}]]]]]    ==>     $Failed # skip
# Determinants of random 100*100 matrices:
ok  Table[Det[RandomReal[1, {100, 100}]], {10}]    ==>     {-5.92492*10^25, -1.08144*10^24, 5.3019*10^25, 1.81258*10^25, -2.80605*10^26, -6.23121*10^24, -1.05716*10^25, -4.32509*10^24, -1.99173*10^25, -2.50089*10^25} # skip
# Generate a complex number in the unit square:
ok  Complex @@ RandomReal[1, 2]    ==>     0.0182069 + 0.059136*I # skip
# Generate 5 complex numbers:
ok  Apply[Complex, RandomReal[1, {5, 2}], {1}]    ==>     {0.742297 + 0.66322*I, 0.736816 + 0.457873*I, 0.557258 + 0.194895*I, 0.377257 + 0.364522*I, 0.709416 + 0.668859*I} # skip
# Use RefLink[SeedRandom,paclet:ref/SeedRandom] to get repeatable random values:
ok  {RandomReal[], RandomReal[]}    ==>     {0.199285, 0.662607} # skip
ok  {SeedRandom[1234]; RandomReal[], SeedRandom[1234]; RandomReal[]}    ==>     {0.876608, 0.876608} # skip
# Use RefLink[BlockRandom,paclet:ref/BlockRandom] to block one use of RefLink[RandomReal,paclet:ref/RandomReal] from affecting others:
ok  {BlockRandom[RandomReal[]], RandomReal[]}    ==>     {0.521964, 0.521964} # skip
# With the same seed, RefLink[RandomReal,paclet:ref/RandomReal] generates the "same" number, regardless of precision:
ok  Table[SeedRandom[4567]; RandomReal[WorkingPrecision -> p], {p, 10}]    ==>     {0.5, 0.52, 0.521, 0.522, 0.52199, 0.521992, 0.521992, 0.521992, 0.521992002, 0.5219920025}
    ---
    data:
        got: {0.5`1., 0.515625`2., 0.521484375`3., 0.52197265625`4., 0.5219879150390625`5., 0.521991729736328125`6., 0.5219919681549072266`7., 0.5219919979572296143`8., 0.5219920016825199127`9., 0.52199200249742716550827026367`10.}
        expect: {0.5, 0.52, 0.521, 0.522, 0.52199, 0.521992, 0.521992, 0.521992, 0.521992002, 0.5219920025}
        expect_evaluated: {0.5, 0.52, 0.521, 0.522, 0.52199, 0.521992, 0.521992, 0.521992, 0.521992002, 0.5219920025}
    ...
# RefLink[RandomReal,paclet:ref/RandomReal] generates a uniform distribution, here with mean 0.5:
ok  Mean[RandomReal[1, 10000]]    ==>     0.497923 # skip
# RefLink[RandomReal,paclet:ref/RandomReal] generates white noise:
ok  HoldComplete[ListLinePlot[Abs[Fourier[RandomReal[{-1, 1}, 1000]]]]]    ==>     $Failed # skip
# Construct a surface from random heights:
ok  HoldComplete[ListPlot3D[Log[RandomReal[1, {50, 50}]]]]    ==>     $Failed # skip
