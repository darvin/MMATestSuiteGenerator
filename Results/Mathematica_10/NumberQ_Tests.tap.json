{
    "stats": {
        "suites": 0,
        "tests": 19,
        "passes": 19,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-11T04:14:12.806Z",
        "end": "2018-06-11T04:14:12.806Z",
        "duration": 0,
        "testsRegistered": 19,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "NumberQ[5.6]    ➡️     True",
                "fullTitle": "NumberQ[5.6]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ae2d702c-1b73-426f-a221-4e714492a4fc",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/NumberQ_Tests.m\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Power, infy], StringForm[Infinite expression `1` encountered., Short[HoldForm[0^(-1)], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, ovfl], StringForm[Overflow occurred in computation.]]]\\n#! TextForm[ColonForm[MessageName[General, unfl], StringForm[Underflow occurred in computation.]]]\\n#! TextForm[ColonForm[MessageName[FindRoot, nlnum], StringForm[The function value `3` is not a list of numbers with dimensions `4` at `2` = `1`., Short[HoldForm[{0.5}], 3], Short[HoldForm[{xp0}], 3], Short[HoldForm[{f[0.5]}], 3], Short[HoldForm[{1}], 3]]]]\\n#! TextForm[ColonForm[MessageName[FindRoot, nlnum], StringForm[The function value `3` is not a list of numbers with dimensions `4` at `2` = `1`., Short[HoldForm[{1.}], 3], Short[HoldForm[{xp0}], 3], Short[HoldForm[{f[1.]}], 3], Short[HoldForm[{1}], 3]]]]\\n#! TextForm[ColonForm[MessageName[FindRoot, nlnum], StringForm[The function value `3` is not a list of numbers with dimensions `4` at `2` = `1`., Short[HoldForm[{1.9}], 3], Short[HoldForm[{xp0}], 3], Short[HoldForm[{f[1.9]}], 3], Short[HoldForm[{1}], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[FindRoot, nlnum]], 3]]]]\\n#! TextForm[ColonForm[MessageName[ReplaceAll, reps], StringForm[`1` is neither a list of replacement rules nor a valid dispatch table, and so cannot be used for replacing., Short[HoldForm[{FindRoot[f[xp0], {xp0, 0.5, 1}], FindRoot[f[xp0], {xp0, 1., 1.9}], FindRoot[f[xp0], {xp0, 1.9, 2.}]}], 3]]]]\\n#! TextForm[ColonForm[MessageName[ReplaceAll, reps], StringForm[`1` is neither a list of replacement rules nor a valid dispatch table, and so cannot be used for replacing., Short[HoldForm[{FindRoot[f[xp0], {xp0, 0.5, 1}], FindRoot[f[xp0], {xp0, 1., 1.9}], FindRoot[f[xp0], {xp0, 1.9, 2.}]}], 3]]]]\\n#! TextForm[ColonForm[MessageName[ReplaceAll, reps], StringForm[`1` is neither a list of replacement rules nor a valid dispatch table, and so cannot be used for replacing., Short[HoldForm[{FindRoot[f[xp0], {xp0, 0.5, 1}], FindRoot[f[xp0], {xp0, 1., 1.9}], FindRoot[f[xp0], {xp0, 1.9, 2.}]}], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[ReplaceAll, reps]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Table, iterb], StringForm[Iterator `1` does not have appropriate bounds., Short[HoldForm[{xp0, xp0 /. {FindRoot[f[xp0], {xp0, 0.5, 1}], FindRoot[f[xp0], {xp0, 1., 1.9}], FindRoot[f[xp0], {xp0, 1.9, 2.}]}}], 3]]]]\\n#! TextForm[ColonForm[MessageName[Table, iterb], StringForm[Iterator `1` does not have appropriate bounds., Short[HoldForm[{xp0, xp0 /. {FindRoot[f[xp0], {xp0, 0.5, 1}], FindRoot[f[xp0], {xp0, 1., 1.9}], FindRoot[f[xp0], {xp0, 1.9, 2.}]}}], 3]]]]\\n#! TextForm[ColonForm[MessageName[Table, iterb], StringForm[Iterator `1` does not have appropriate bounds., Short[HoldForm[{xp0, xp0 /. {FindRoot[f[xp0], {xp0, 0.5, 1}], FindRoot[f[xp0], {xp0, 1., 1.9}], FindRoot[f[xp0], {xp0, 1.9, 2.}]}}], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[Table, iterb]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: NumberQ_Tests\\n# RefLink[NumberQ,paclet:ref/NumberQ] tests whether an object is explicitly a number:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "NumberQ[x]    ➡️     False",
                "fullTitle": "NumberQ[x]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "69477383-d7c9-4700-abc1-b32a5190438b",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "NumberQ[Sqrt[2]]    ➡️     False",
                "fullTitle": "NumberQ[Sqrt[2]]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "60213ca7-90a0-4229-8b0a-6d3b93089098",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": false,
                "isHook": false,
                "context": "\"# The expression must be manifestly a number:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "NumericQ[Sqrt[2]]    ➡️     True",
                "fullTitle": "NumericQ[Sqrt[2]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ffa324d9-ca2b-449a-8346-525999e446f3",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": false,
                "isHook": false,
                "context": "\"# You can test if a quantity represents a number with RefLink[NumericQ,paclet:ref/NumericQ]:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "NumberQ[N[Sqrt[2]]]    ➡️     True",
                "fullTitle": "NumberQ[N[Sqrt[2]]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "08cf7f15-dc18-4785-b4d3-69bece956dbf",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": false,
                "isHook": false,
                "context": "\"# On numerical coercion with RefLink[N,paclet:ref/N] such quantities generally become numbers:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "NumberQ[Infinity]    ➡️     False",
                "fullTitle": "NumberQ[Infinity]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0ff7a828-7f06-4ce4-a12d-b48ed032aeaa",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NumberQ,paclet:ref/NumberQ][RefLink[Infinity,paclet:ref/Infinity]] gives RefLink[False,paclet:ref/False]. \\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "{c, d} = {(1 + I)/0, Infinity*(1 + I)}    ➡️     {ComplexInfinity, DirectedInfinity[(1 + I)/Sqrt[2]]}",
                "fullTitle": "{c, d} = {(1 + I)/0, Infinity*(1 + I)}    ➡️     {ComplexInfinity, DirectedInfinity[(1 + I)/Sqrt[2]]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a71f1030-54c6-4d51-a349-db1d6a2d0f2b",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": false,
                "isHook": false,
                "context": "\"# The same is true for complex and directed infinities:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{NumberQ[c], NumberQ[d]}    ➡️     {False, False}",
                "fullTitle": "{NumberQ[c], NumberQ[d]}    ➡️     {False, False}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d1ded359-9fdb-4759-966f-94145000341a",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": false,
                "isHook": false,
                "context": "\"#! {ComplexInfinity, ----------------}\\n#!                       Sqrt[2]\\n#! {ComplexInfinity, ----------------}\\n#!                       Sqrt[2]\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{o, u} = {$MaxNumber*2, $MinNumber/2}    ➡️     {Overflow[], Underflow[]}",
                "fullTitle": "{o, u} = {$MaxNumber*2, $MinNumber/2}    ➡️     {Overflow[], Underflow[]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a6c844a7-6430-4b1b-b66b-3512c4e97f07",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NumberQ,paclet:ref/NumberQ][RefLink[Overflow,paclet:ref/Overflow][]] and RefLink[NumberQ,paclet:ref/NumberQ][RefLink[Underflow,paclet:ref/Underflow][]] give RefLink[True,paclet:ref/True]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{NumberQ[o], NumberQ[u]}    ➡️     {True, True}",
                "fullTitle": "{NumberQ[o], NumberQ[u]}    ➡️     {True, True}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "29719972-850b-45a6-9c24-e8e2a098ffa4",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{Head[o], Head[u]}    ➡️     {Real, Real}",
                "fullTitle": "{Head[o], Head[u]}    ➡️     {Real, Real}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b3a13435-f750-48e1-8a8e-5a1fc995a920",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": false,
                "isHook": false,
                "context": "\"# They are both treated as RefLink[Real,paclet:ref/Real]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "m = {{1, 2/3}, {4., 5 + 6*I}} ;; MatrixQ[m, NumberQ]    ➡️     True",
                "fullTitle": "m = {{1, 2/3}, {4., 5 + 6*I}} ;; MatrixQ[m, NumberQ]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8d472220-a79f-4003-96d1-13632c7d7981",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": true,
                "isHook": false,
                "context": "\"# Test if a matrix consists entirely of numbers:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "f[xp0]    ➡️     f[xp0]",
                "fullTitle": "f[xp0]    ➡️     f[xp0]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b58ad6aa-3532-4574-9789-8d662dd51589",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": false,
                "isHook": false,
                "context": "\"# It does not evaluate with a symbolic argument:\\n\\n\\ndata: \\n  got:              f[xp0]\\n  expect:           f[xp0]\\n  expect_evaluated: f[xp0]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[xp0]",
                    "expected": "f[xp0]"
                }
            },
            {
                "title": "HoldComplete[Plot[f[xp0], {xp0, 0, 2}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[Plot[f[xp0], {xp0, 0, 2}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3549b164-5c08-4e11-a284-c80360c907fd",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": true,
                "isHook": false,
                "context": "\"# It does evaluate when the argument is a number:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "xps = xp0 /. {FindRoot[f[xp0], {xp0, 0.5, 1}], FindRoot[f[xp0], {xp0, 1., 1.9}], FindRoot[f[xp0], {xp0, 1.9, 2.}]}    ➡️     {0.924845, 1.87817, 1.99927}",
                "fullTitle": "xps = xp0 /. {FindRoot[f[xp0], {xp0, 0.5, 1}], FindRoot[f[xp0], {xp0, 1., 1.9}], FindRoot[f[xp0], {xp0, 1.9, 2.}]}    ➡️     {0.924845, 1.87817, 1.99927}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c4956be9-0307-4eb7-ab17-d1a8560d75c1",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[FindRoot,paclet:ref/FindRoot] to find all the solutions of the boundary value problem with x(0)=x(10)=0:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[sols = Table[First[x[t] /. NDSolve[{Derivative[1][Derivative[1][x]][t] + Sin[x[t]] == 0, x[0] == 0, Derivative[1][x][0] == xp0}, x, {t, 0, 10}]], {xp0, xps}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[sols = Table[First[x[t] /. NDSolve[{Derivative[1][Derivative[1][x]][t] + Sin[x[t]] == 0, x[0] == 0, Derivative[1][x][0] == xp0}, x, {t, 0, 10}]], {xp0, xps}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7cd09775-19e1-4c1e-b557-f46752cc2b86",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": true,
                "isHook": false,
                "context": "\"# Plot the solutions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[Plot[sols, {t, 0, 10}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[Plot[sols, {t, 0, 10}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2e82ffd1-8db5-4673-95d4-43e6473cd63d",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "TableForm[Table[{x, NumberQ[x], (MatchQ[#1, _Integer | _Rational | _Real | _Complex] & )[x]}, {x, {1, 3/2, 1.5, 1 + I, E, Sin[1], Underflow[], Overflow[], Infinity}}], TableHeadings -> {{}, {\"x\", \"NumberQ\", \"match\"}}]    ➡️     *x*NumberQ*match**1*True*True**(3/2)*True*True**1.5*True*True**1 + I*True*True**E*False*False**Sin[1]*False*False**Underflow[]*True*True**Overflow[]*True*True**Infinity*False*False # skip",
                "fullTitle": "TableForm[Table[{x, NumberQ[x], (MatchQ[#1, _Integer | _Rational | _Real | _Complex] & )[x]}, {x, {1, 3/2, 1.5, 1 + I, E, Sin[1], Underflow[], Overflow[], Infinity}}], TableHeadings -> {{}, {\"x\", \"NumberQ\", \"match\"}}]    ➡️     *x*NumberQ*match**1*True*True**(3/2)*True*True**1.5*True*True**1 + I*True*True**E*False*False**Sin[1]*False*False**Underflow[]*True*True**Overflow[]*True*True**Infinity*False*False # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d55daa5b-cfe8-4378-8a7e-873322363306",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NumberQ,paclet:ref/NumberQ] is equivalent to RefLink[MatchQ,paclet:ref/MatchQ][#,_Integer|_Rational|_Real|_Complex]&:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "TableForm[Table[{x, NumberQ[x], NumericQ[x]}, {x, {1, 3/2, 1.5, 1 + I, E, Sin[1], Underflow[], Overflow[], Infinity}}], TableHeadings -> {{}, {\"x\", \"NumberQ\", \"NumericQ\"}}]    ➡️     *x*NumberQ*NumericQ**1*True*True**(3/2)*True*True**1.5*True*True**1 + I*True*True**E*False*True**Sin[1]*False*True**Underflow[]*True*True**Overflow[]*True*True**Infinity*False*False",
                "fullTitle": "TableForm[Table[{x, NumberQ[x], NumericQ[x]}, {x, {1, 3/2, 1.5, 1 + I, E, Sin[1], Underflow[], Overflow[], Infinity}}], TableHeadings -> {{}, {\"x\", \"NumberQ\", \"NumericQ\"}}]    ➡️     *x*NumberQ*NumericQ**1*True*True**(3/2)*True*True**1.5*True*True**1 + I*True*True**E*False*True**Sin[1]*False*True**Underflow[]*True*True**Overflow[]*True*True**Infinity*False*False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2d2c27a5-6bd8-4dfe-9472-cfe1ff12def5",
                "parentUUID": "50497452-2ff3-4110-8105-dda59ba13cf7",
                "skipped": true,
                "isHook": false,
                "context": "\"# If RefLink[NumberQ,paclet:ref/NumberQ][x] is RefLink[True,paclet:ref/True], then RefLink[NumericQ,paclet:ref/NumericQ][x] is also RefLink[True,paclet:ref/True]:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "ae2d702c-1b73-426f-a221-4e714492a4fc",
            "69477383-d7c9-4700-abc1-b32a5190438b",
            "60213ca7-90a0-4229-8b0a-6d3b93089098",
            "ffa324d9-ca2b-449a-8346-525999e446f3",
            "08cf7f15-dc18-4785-b4d3-69bece956dbf",
            "0ff7a828-7f06-4ce4-a12d-b48ed032aeaa",
            "a71f1030-54c6-4d51-a349-db1d6a2d0f2b",
            "d1ded359-9fdb-4759-966f-94145000341a",
            "a6c844a7-6430-4b1b-b66b-3512c4e97f07",
            "29719972-850b-45a6-9c24-e8e2a098ffa4",
            "b3a13435-f750-48e1-8a8e-5a1fc995a920",
            "8d472220-a79f-4003-96d1-13632c7d7981",
            "b58ad6aa-3532-4574-9789-8d662dd51589",
            "3549b164-5c08-4e11-a284-c80360c907fd",
            "c4956be9-0307-4eb7-ab17-d1a8560d75c1",
            "7cd09775-19e1-4c1e-b557-f46752cc2b86",
            "2e82ffd1-8db5-4673-95d4-43e6473cd63d",
            "d55daa5b-cfe8-4378-8a7e-873322363306",
            "2d2c27a5-6bd8-4dfe-9472-cfe1ff12def5"
        ],
        "failures": [],
        "skipped": [
            "8d472220-a79f-4003-96d1-13632c7d7981",
            "3549b164-5c08-4e11-a284-c80360c907fd",
            "c4956be9-0307-4eb7-ab17-d1a8560d75c1",
            "7cd09775-19e1-4c1e-b557-f46752cc2b86",
            "2e82ffd1-8db5-4673-95d4-43e6473cd63d",
            "2d2c27a5-6bd8-4dfe-9472-cfe1ff12def5"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "50497452-2ff3-4110-8105-dda59ba13cf7",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
