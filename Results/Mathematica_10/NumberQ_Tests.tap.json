{
    "stats": {
        "suites": 0,
        "tests": 19,
        "passes": 19,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T23:02:05.146Z",
        "end": "2018-06-03T23:02:05.146Z",
        "duration": 0,
        "testsRegistered": 19,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "NumberQ[5.6]    ➡️     True",
                "fullTitle": "NumberQ[5.6]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2516a3ef-6cf5-4fc7-af2c-2d17452dfa60",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/NumberQ_Tests.m\\n#! TextForm[ColonForm[MessageName[Power, infy], StringForm[Infinite expression `1` encountered., Short[HoldForm[0^(-1)], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, ovfl], StringForm[Overflow occurred in computation.]]]\\n#! TextForm[ColonForm[MessageName[General, unfl], StringForm[Underflow occurred in computation.]]]\\n# SYSTEM: Mathematica_10\\n# TEST: NumberQ_Tests\\n# RefLink[NumberQ,paclet:ref/NumberQ] tests whether an object is explicitly a number:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "NumberQ[x]    ➡️     False",
                "fullTitle": "NumberQ[x]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d7da0380-c83e-44c3-b373-8cf995546fd8",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "NumberQ[Sqrt[2]]    ➡️     False",
                "fullTitle": "NumberQ[Sqrt[2]]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f1d60c57-3919-4df4-97b0-43667e322390",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": false,
                "isHook": false,
                "context": "\"# The expression must be manifestly a number:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "NumericQ[Sqrt[2]]    ➡️     True",
                "fullTitle": "NumericQ[Sqrt[2]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "859bd46c-d3bd-481f-bf7c-75527d79cbd2",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": false,
                "isHook": false,
                "context": "\"# You can test if a quantity represents a number with RefLink[NumericQ,paclet:ref/NumericQ]:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "NumberQ[N[Sqrt[2]]]    ➡️     True",
                "fullTitle": "NumberQ[N[Sqrt[2]]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4aece483-295a-47d2-bcf2-db7a5aec5637",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": false,
                "isHook": false,
                "context": "\"# On numerical coercion with RefLink[N,paclet:ref/N] such quantities generally become numbers:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "NumberQ[Infinity]    ➡️     False",
                "fullTitle": "NumberQ[Infinity]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b4d3f836-e96f-4a7a-b607-15719e106737",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NumberQ,paclet:ref/NumberQ][RefLink[Infinity,paclet:ref/Infinity]] gives RefLink[False,paclet:ref/False]. \\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "{c, d} = {(1 + I)/0, Infinity*(1 + I)}    ➡️     {ComplexInfinity, DirectedInfinity[(1 + I)/Sqrt[2]]}",
                "fullTitle": "{c, d} = {(1 + I)/0, Infinity*(1 + I)}    ➡️     {ComplexInfinity, DirectedInfinity[(1 + I)/Sqrt[2]]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "eb623828-4fb4-4083-a8f6-4ea6addd3998",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": false,
                "isHook": false,
                "context": "\"# The same is true for complex and directed infinities:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{NumberQ[c], NumberQ[d]}    ➡️     {False, False}",
                "fullTitle": "{NumberQ[c], NumberQ[d]}    ➡️     {False, False}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "179d1443-3395-41ee-a5f8-f9d7023793d4",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{o, u} = {$MaxNumber*2, $MinNumber/2}    ➡️     {Overflow[], Underflow[]}",
                "fullTitle": "{o, u} = {$MaxNumber*2, $MinNumber/2}    ➡️     {Overflow[], Underflow[]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "505eac43-4f01-4bb1-9c05-6142dd16822d",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NumberQ,paclet:ref/NumberQ][RefLink[Overflow,paclet:ref/Overflow][]] and RefLink[NumberQ,paclet:ref/NumberQ][RefLink[Underflow,paclet:ref/Underflow][]] give RefLink[True,paclet:ref/True]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{NumberQ[o], NumberQ[u]}    ➡️     {True, True}",
                "fullTitle": "{NumberQ[o], NumberQ[u]}    ➡️     {True, True}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b4704c21-f2aa-4c65-903c-32aecabe220f",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{Head[o], Head[u]}    ➡️     {Real, Real}",
                "fullTitle": "{Head[o], Head[u]}    ➡️     {Real, Real}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e543aae9-e533-48d4-8ecd-a823a264b95d",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": false,
                "isHook": false,
                "context": "\"# They are both treated as RefLink[Real,paclet:ref/Real]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "MatrixQ[m, NumberQ]    ➡️     True",
                "fullTitle": "MatrixQ[m, NumberQ]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3658d32d-9721-48ab-8396-0905176c4b90",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "f[xp0]    ➡️     f[xp0]",
                "fullTitle": "f[xp0]    ➡️     f[xp0]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ddedc9f3-6e2e-43b4-8eee-7eb1ddfe0ace",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": false,
                "isHook": false,
                "context": "\"# It does not evaluate with a symbolic argument:\\n\\n\\ndata: \\n  got:              f[xp0]\\n  expect:           f[xp0]\\n  expect_evaluated: f[xp0]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[xp0]",
                    "expected": "f[xp0]"
                }
            },
            {
                "title": "HoldComplete[Plot[f[xp0], {xp0, 0, 2}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[Plot[f[xp0], {xp0, 0, 2}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7e8994a4-6c6e-4b35-9a1e-077626431f7d",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": true,
                "isHook": false,
                "context": "\"# It does evaluate when the argument is a number:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "xps = xp0 /. {FindRoot[f[xp0], {xp0, 0.5, 1}], FindRoot[f[xp0], {xp0, 1., 1.9}], FindRoot[f[xp0], {xp0, 1.9, 2.}]}    ➡️     {0.924845, 1.87817, 1.99927}",
                "fullTitle": "xps = xp0 /. {FindRoot[f[xp0], {xp0, 0.5, 1}], FindRoot[f[xp0], {xp0, 1., 1.9}], FindRoot[f[xp0], {xp0, 1.9, 2.}]}    ➡️     {0.924845, 1.87817, 1.99927}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7e49d2e1-2ee0-4a70-9857-3479a1995150",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[FindRoot,paclet:ref/FindRoot] to find all the solutions of the boundary value problem with x(0)=x(10)=0:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[sols = Table[First[x[t] /. NDSolve[{Derivative[1][Derivative[1][x]][t] + Sin[x[t]] == 0, x[0] == 0, Derivative[1][x][0] == xp0}, x, {t, 0, 10}]], {xp0, xps}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[sols = Table[First[x[t] /. NDSolve[{Derivative[1][Derivative[1][x]][t] + Sin[x[t]] == 0, x[0] == 0, Derivative[1][x][0] == xp0}, x, {t, 0, 10}]], {xp0, xps}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "37505d71-a0cf-4195-a258-e56c9d06e47a",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": true,
                "isHook": false,
                "context": "\"# Plot the solutions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[Plot[sols, {t, 0, 10}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[Plot[sols, {t, 0, 10}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "14ada503-18dc-4fba-9e3d-e5c7035ba088",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "TableForm[Table[{x, NumberQ[x], (MatchQ[#1, _Integer | _Rational | _Real | _Complex] & )[x]}, {x, {1, 3/2, 1.5, 1 + I, E, Sin[1], Underflow[], Overflow[], Infinity}}], TableHeadings -> {{}, {\"x\", \"NumberQ\", \"match\"}}]    ➡️     *x*NumberQ*match**1*True*True**(3/2)*True*True**1.5*True*True**1 + I*True*True**E*False*False**Sin[1]*False*False**Underflow[]*True*True**Overflow[]*True*True**Infinity*False*False # skip",
                "fullTitle": "TableForm[Table[{x, NumberQ[x], (MatchQ[#1, _Integer | _Rational | _Real | _Complex] & )[x]}, {x, {1, 3/2, 1.5, 1 + I, E, Sin[1], Underflow[], Overflow[], Infinity}}], TableHeadings -> {{}, {\"x\", \"NumberQ\", \"match\"}}]    ➡️     *x*NumberQ*match**1*True*True**(3/2)*True*True**1.5*True*True**1 + I*True*True**E*False*False**Sin[1]*False*False**Underflow[]*True*True**Overflow[]*True*True**Infinity*False*False # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "60ae235e-f865-49d7-ae31-6c3e4c4144f0",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[NumberQ,paclet:ref/NumberQ] is equivalent to RefLink[MatchQ,paclet:ref/MatchQ][#,_Integer|_Rational|_Real|_Complex]&:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "TableForm[Table[{x, NumberQ[x], NumericQ[x]}, {x, {1, 3/2, 1.5, 1 + I, E, Sin[1], Underflow[], Overflow[], Infinity}}], TableHeadings -> {{}, {\"x\", \"NumberQ\", \"NumericQ\"}}]    ➡️     *x*NumberQ*NumericQ**1*True*True**(3/2)*True*True**1.5*True*True**1 + I*True*True**E*False*True**Sin[1]*False*True**Underflow[]*True*True**Overflow[]*True*True**Infinity*False*False",
                "fullTitle": "TableForm[Table[{x, NumberQ[x], NumericQ[x]}, {x, {1, 3/2, 1.5, 1 + I, E, Sin[1], Underflow[], Overflow[], Infinity}}], TableHeadings -> {{}, {\"x\", \"NumberQ\", \"NumericQ\"}}]    ➡️     *x*NumberQ*NumericQ**1*True*True**(3/2)*True*True**1.5*True*True**1 + I*True*True**E*False*True**Sin[1]*False*True**Underflow[]*True*True**Overflow[]*True*True**Infinity*False*False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ed21479f-1ec9-4c91-b28b-9f5cb9992ad8",
                "parentUUID": "33020bcc-69d3-412f-acd2-605324e98791",
                "skipped": true,
                "isHook": false,
                "context": "\"# If RefLink[NumberQ,paclet:ref/NumberQ][x] is RefLink[True,paclet:ref/True], then RefLink[NumericQ,paclet:ref/NumericQ][x] is also RefLink[True,paclet:ref/True]:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "2516a3ef-6cf5-4fc7-af2c-2d17452dfa60",
            "d7da0380-c83e-44c3-b373-8cf995546fd8",
            "f1d60c57-3919-4df4-97b0-43667e322390",
            "859bd46c-d3bd-481f-bf7c-75527d79cbd2",
            "4aece483-295a-47d2-bcf2-db7a5aec5637",
            "b4d3f836-e96f-4a7a-b607-15719e106737",
            "eb623828-4fb4-4083-a8f6-4ea6addd3998",
            "179d1443-3395-41ee-a5f8-f9d7023793d4",
            "505eac43-4f01-4bb1-9c05-6142dd16822d",
            "b4704c21-f2aa-4c65-903c-32aecabe220f",
            "e543aae9-e533-48d4-8ecd-a823a264b95d",
            "3658d32d-9721-48ab-8396-0905176c4b90",
            "ddedc9f3-6e2e-43b4-8eee-7eb1ddfe0ace",
            "7e8994a4-6c6e-4b35-9a1e-077626431f7d",
            "7e49d2e1-2ee0-4a70-9857-3479a1995150",
            "37505d71-a0cf-4195-a258-e56c9d06e47a",
            "14ada503-18dc-4fba-9e3d-e5c7035ba088",
            "60ae235e-f865-49d7-ae31-6c3e4c4144f0",
            "ed21479f-1ec9-4c91-b28b-9f5cb9992ad8"
        ],
        "failures": [],
        "skipped": [
            "3658d32d-9721-48ab-8396-0905176c4b90",
            "7e8994a4-6c6e-4b35-9a1e-077626431f7d",
            "7e49d2e1-2ee0-4a70-9857-3479a1995150",
            "37505d71-a0cf-4195-a258-e56c9d06e47a",
            "14ada503-18dc-4fba-9e3d-e5c7035ba088",
            "ed21479f-1ec9-4c91-b28b-9f5cb9992ad8"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "33020bcc-69d3-412f-acd2-605324e98791",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
