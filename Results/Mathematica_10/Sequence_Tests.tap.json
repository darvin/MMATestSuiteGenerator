{
    "stats": {
        "suites": 0,
        "tests": 10,
        "passes": 9,
        "pending": 0,
        "failures": 1,
        "start": "2018-06-02T18:11:04.949Z",
        "end": "2018-06-02T18:11:04.949Z",
        "duration": 0,
        "testsRegistered": 10,
        "passPercent": 90,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "f[a, Sequence[b, c], d]    ➡️     f[a, b, c, d]",
                "fullTitle": "f[a, Sequence[b, c], d]    ➡️     f[a, b, c, d]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "88bfc909-b6bc-415f-b75d-8009d4c548b4",
                "parentUUID": "a4d84b7f-b5be-4d26-b1ad-af36bc36351c",
                "skipped": false,
                "isHook": false,
                "context": "\"# SYSTEM: Mathematica_10\\n# TEST: Sequence_Tests\\n# OUTPUT: output/Results/Mathematica_10/Sequence_Tests.json\\n# RefLink[Sequence,paclet:ref/Sequence] is automatically spliced in:\\n\\n\\ndata: \\n  got:              f[a, b, c, d]\\n  expect:           f[a, b, c, d]\\n  expect_evaluated: f[a, b, c, d]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[a, b, c, d]",
                    "expected": "f[a, b, c, d]"
                }
            },
            {
                "title": "{u, u, u} /. u -> Sequence[a, b, c]    ➡️     {a, b, c, a, b, c, a, b, c}",
                "fullTitle": "{u, u, u} /. u -> Sequence[a, b, c]    ➡️     {a, b, c, a, b, c, a, b, c}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "08aef188-ebc0-4401-9ef7-d0c6619e8d76",
                "parentUUID": "a4d84b7f-b5be-4d26-b1ad-af36bc36351c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Replace with a sequence that is automatically spliced in:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "u = Sequence[a, b, c]    ➡️     Sequence[a, b, c]",
                "fullTitle": "u = Sequence[a, b, c]    ➡️     Sequence[a, b, c]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f7cd1c74-56a7-43f2-a896-8fa55e5146df",
                "parentUUID": "a4d84b7f-b5be-4d26-b1ad-af36bc36351c",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{u, u, u}    ➡️     {a, b, c, a, b, c, a, b, c}",
                "fullTitle": "{u, u, u}    ➡️     {a, b, c, a, b, c, a, b, c}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9fb997f6-74aa-470d-913e-915df66eaa51",
                "parentUUID": "a4d84b7f-b5be-4d26-b1ad-af36bc36351c",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "failed",
                "err": {}
            },
            {
                "title": "f[{{a, b}, {c, d}, {a}}] /. List -> Sequence    ➡️     f[a, b, c, d, a]",
                "fullTitle": "f[{{a, b}, {c, d}, {a}}] /. List -> Sequence    ➡️     f[a, b, c, d, a]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c71a9f4c-0ad3-44d3-9527-2bd74a97e29d",
                "parentUUID": "a4d84b7f-b5be-4d26-b1ad-af36bc36351c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Completely flatten out all lists in the argument to a function:\\n\\n\\ndata: \\n  got:              f[a, b, c, d, a]\\n  expect:           f[a, b, c, d, a]\\n  expect_evaluated: f[a, b, c, d, a]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[a, b, c, d, a]",
                    "expected": "f[a, b, c, d, a]"
                }
            },
            {
                "title": "f[a, b, c] /. f[x__] -> x    ➡️     Sequence[a, b, c]",
                "fullTitle": "f[a, b, c] /. f[x__] -> x    ➡️     Sequence[a, b, c]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "45da506a-510e-47d1-af26-30346f787dce",
                "parentUUID": "a4d84b7f-b5be-4d26-b1ad-af36bc36351c",
                "skipped": true,
                "isHook": false,
                "context": "\"# A sequence of arguments matched by __ is treated as a RefLink[Sequence,paclet:ref/Sequence] object: \\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "(##1 & )[a, b, c]    ➡️     Sequence[a, b, c] # skip",
                "fullTitle": "(##1 & )[a, b, c]    ➡️     Sequence[a, b, c] # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "42c616eb-9ac6-4bc4-8614-d6c00d6912fa",
                "parentUUID": "a4d84b7f-b5be-4d26-b1ad-af36bc36351c",
                "skipped": false,
                "isHook": false,
                "context": "\"# ## represents sequences of arguments by RefLink[Sequence,paclet:ref/Sequence] objects:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{a, Sequence[b], c, Identity[d]}    ➡️     {a, b, c, d}",
                "fullTitle": "{a, Sequence[b], c, Identity[d]}    ➡️     {a, b, c, d}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "067348f7-42b4-4554-9ac3-2095c75d36d7",
                "parentUUID": "a4d84b7f-b5be-4d26-b1ad-af36bc36351c",
                "skipped": false,
                "isHook": false,
                "context": "\"# A sequence with one argument acts like RefLink[Identity,paclet:ref/Identity]:\\n\\n\\ndata: \\n  got: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n  expect: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n  expect_evaluated: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null
                    },
                    "expected": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null
                    }
                }
            },
            {
                "title": "Head[Sequence[a, b]]    ➡️     Head[a, b]",
                "fullTitle": "Head[Sequence[a, b]]    ➡️     Head[a, b]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "114e433d-5583-4009-bd7a-b1ad6a7a7f78",
                "parentUUID": "a4d84b7f-b5be-4d26-b1ad-af36bc36351c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Most Wolfram Language functions automatically splice in RefLink[Sequence,paclet:ref/Sequence] objects:\\n\\n\\ndata: \\n  got:              Head[a, b]\\n  expect:           Head[a, b]\\n  expect_evaluated: Head[a, b]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Head[a, b]",
                    "expected": "Head[a, b]"
                }
            },
            {
                "title": "u -> Sequence[a, b]    ➡️     u -> Sequence[a, b]",
                "fullTitle": "u -> Sequence[a, b]    ➡️     u -> Sequence[a, b]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ed92c595-07ca-46ee-aac0-c088a05633cd",
                "parentUUID": "a4d84b7f-b5be-4d26-b1ad-af36bc36351c",
                "skipped": false,
                "isHook": false,
                "context": "\"# Assignment and replacement functions have the attribute RefLink[SequenceHold,paclet:ref/SequenceHold]:\\n\\n\\ndata: \\n  got:              u -> Sequence[a, b]\\n  expect:           u -> Sequence[a, b]\\n  expect_evaluated: u -> Sequence[a, b]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "u -> Sequence[a, b]",
                    "expected": "u -> Sequence[a, b]"
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "88bfc909-b6bc-415f-b75d-8009d4c548b4",
            "08aef188-ebc0-4401-9ef7-d0c6619e8d76",
            "f7cd1c74-56a7-43f2-a896-8fa55e5146df",
            "c71a9f4c-0ad3-44d3-9527-2bd74a97e29d",
            "45da506a-510e-47d1-af26-30346f787dce",
            "42c616eb-9ac6-4bc4-8614-d6c00d6912fa",
            "067348f7-42b4-4554-9ac3-2095c75d36d7",
            "114e433d-5583-4009-bd7a-b1ad6a7a7f78",
            "ed92c595-07ca-46ee-aac0-c088a05633cd"
        ],
        "failures": [
            "9fb997f6-74aa-470d-913e-915df66eaa51"
        ],
        "skipped": [
            "f7cd1c74-56a7-43f2-a896-8fa55e5146df",
            "45da506a-510e-47d1-af26-30346f787dce"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "a4d84b7f-b5be-4d26-b1ad-af36bc36351c",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
