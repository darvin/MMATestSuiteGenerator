{
    "stats": {
        "suites": 0,
        "tests": 22,
        "passes": 22,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-11T04:14:43.131Z",
        "end": "2018-06-11T04:14:43.131Z",
        "duration": 0,
        "testsRegistered": 22,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "Union[{1, 2, 1, 3, 6, 2, 2}]    ➡️     {1, 2, 3, 6}",
                "fullTitle": "Union[{1, 2, 1, 3, 6, 2, 2}]    ➡️     {1, 2, 3, 6}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7f11dc9f-5a67-49eb-bc2c-6649b531fccf",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/Union_Tests.m\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: Union_Tests\\n# Give a sorted list of distinct elements:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    2: null\\n    3: null\\n    6: null\\n  expect: \\n    1: null\\n    2: null\\n    3: null\\n    6: null\\n  expect_evaluated: \\n    1: null\\n    2: null\\n    3: null\\n    6: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "6": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "6": null
                    }
                }
            },
            {
                "title": "Union[{a, b, a, c}, {d, a, e, b}, {c, a}]    ➡️     {a, b, c, d, e}",
                "fullTitle": "Union[{a, b, a, c}, {d, a, e, b}, {c, a}]    ➡️     {a, b, c, d, e}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b57c8bd1-dd70-4da7-835f-f09d2c3238f3",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Give a sorted list of distinct elements from all the lists:\\n\\n\\ndata: \\n  got: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n    e: null\\n  expect: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n    e: null\\n  expect_evaluated: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n    e: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null,
                        "e": null
                    },
                    "expected": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null,
                        "e": null
                    }
                }
            },
            {
                "title": "Union[{a, b, c}, {b, c, d}]    ➡️     {a, b, c, d}",
                "fullTitle": "Union[{a, b, c}, {b, c, d}]    ➡️     {a, b, c, d}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f20c7ef3-405f-4cb2-b1ed-57b244221a76",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter using Esc\\\\[ThinSpace]un\\\\[ThinSpace]Esc:\\n\\n\\ndata: \\n  got: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n  expect: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n  expect_evaluated: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null
                    },
                    "expected": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null
                    }
                }
            },
            {
                "title": "Union[{{1, 2}, {1, 2, 3}}, {{2, 1}, {1, 2}}, {{3, 2, 1}, {1, 2, 3}}]    ➡️     {{1, 2}, {2, 1}, {1, 2, 3}, {3, 2, 1}}",
                "fullTitle": "Union[{{1, 2}, {1, 2, 3}}, {{2, 1}, {1, 2}}, {{3, 2, 1}, {1, 2, 3}}]    ➡️     {{1, 2}, {2, 1}, {1, 2, 3}, {3, 2, 1}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f1a3c7c6-7d55-4f22-8a89-a53b7688f3e1",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Give a list of the distinct lists:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[f[a, b], f[c, a], f[b, b, a]]    ➡️     f[a, b, c]",
                "fullTitle": "Union[f[a, b], f[c, a], f[b, b, a]]    ➡️     f[a, b, c]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "df08d2ec-2e41-4e69-aa17-662a4bd0171c",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Union,paclet:ref/Union] works with any head, not just RefLink[List,paclet:ref/List]:\\n\\n\\ndata: \\n  got:              f[a, b, c]\\n  expect:           f[a, b, c]\\n  expect_evaluated: f[a, b, c]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[a, b, c]",
                    "expected": "f[a, b, c]"
                }
            },
            {
                "title": "Union[{2, -2, 1, 3, 1}, SameTest -> (Abs[#1] == Abs[#2] & )]    ➡️     {-2, 1, 3}",
                "fullTitle": "Union[{2, -2, 1, 3, 1}, SameTest -> (Abs[#1] == Abs[#2] & )]    ➡️     {-2, 1, 3}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "aa30b724-fc93-489a-af2d-12ff5b540197",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use equivalence classes based on absolute value: \\n\\n\\ndata: \\n  got: \\n    1:  null\\n    3:  null\\n    -2: null\\n  expect: \\n    1:  null\\n    3:  null\\n    -2: null\\n  expect_evaluated: \\n    1:  null\\n    3:  null\\n    -2: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "3": null,
                        "-2": null
                    },
                    "expected": {
                        "1": null,
                        "3": null,
                        "-2": null
                    }
                }
            },
            {
                "title": "Union[{1.1, 3.4, 0.5, 7.6, 7.1, 1.9}, SameTest -> (Floor[#1] == Floor[#2] & )]    ➡️     {0.5, 1.1, 3.4, 7.1}",
                "fullTitle": "Union[{1.1, 3.4, 0.5, 7.6, 7.1, 1.9}, SameTest -> (Floor[#1] == Floor[#2] & )]    ➡️     {0.5, 1.1, 3.4, 7.1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3f3e2b73-e35d-4433-8fdc-1202c61ea92f",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use equivalence classes based on RefLink[Floor,paclet:ref/Floor]:\\n\\n\\ndata: \\n  got: \\n    0.5: null\\n    1.1: null\\n    3.4: null\\n    7.1: null\\n  expect: \\n    0.5: null\\n    1.1: null\\n    3.4: null\\n    7.1: null\\n  expect_evaluated: \\n    0.5: null\\n    1.1: null\\n    3.4: null\\n    7.1: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "0.5": null,
                        "1.1": null,
                        "3.4": null,
                        "7.1": null
                    },
                    "expected": {
                        "0.5": null,
                        "1.1": null,
                        "3.4": null,
                        "7.1": null
                    }
                }
            },
            {
                "title": "Union[{{1, 2}, {3}, {4, 5, 6}, {9, 6}}, SameTest -> (Total[#1] == Total[#2] & )]    ➡️     {{3}, {9, 6}}",
                "fullTitle": "Union[{{1, 2}, {3}, {4, 5, 6}, {9, 6}}, SameTest -> (Total[#1] == Total[#2] & )]    ➡️     {{3}, {9, 6}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ed99b97e-fdde-44d7-8602-cda5cb3d29dc",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Total,paclet:ref/Total] of list elements:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[{{1, 2}, {2, 1}, {3, 2, 1}, {3}, {4, 5}, {5, 4, 3, 2, 1}}, SameTest -> (First[#1] == Last[#2] & )]    ➡️     {{3}, {1, 2}, {4, 5}}",
                "fullTitle": "Union[{{1, 2}, {2, 1}, {3, 2, 1}, {3}, {4, 5}, {5, 4, 3, 2, 1}}, SameTest -> (First[#1] == Last[#2] & )]    ➡️     {{3}, {1, 2}, {4, 5}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9c22d1e6-5019-4038-9e7e-0273e0abfd6e",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use equality of last and first elements:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[Divisors[10], Divisors[12], Divisors[20]]    ➡️     {1, 2, 3, 4, 5, 6, 10, 12, 20}",
                "fullTitle": "Union[Divisors[10], Divisors[12], Divisors[20]]    ➡️     {1, 2, 3, 4, 5, 6, 10, 12, 20}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "068ed46a-58a3-4db4-922a-592644b1d8d3",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find divisors that occur in any of 10, 12, and 20:\\n\\n\\ndata: \\n  got: \\n    1:  null\\n    2:  null\\n    3:  null\\n    4:  null\\n    5:  null\\n    6:  null\\n    10: null\\n    12: null\\n    20: null\\n  expect: \\n    1:  null\\n    2:  null\\n    3:  null\\n    4:  null\\n    5:  null\\n    6:  null\\n    10: null\\n    12: null\\n    20: null\\n  expect_evaluated: \\n    1:  null\\n    2:  null\\n    3:  null\\n    4:  null\\n    5:  null\\n    6:  null\\n    10: null\\n    12: null\\n    20: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "4": null,
                        "5": null,
                        "6": null,
                        "10": null,
                        "12": null,
                        "20": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "4": null,
                        "5": null,
                        "6": null,
                        "10": null,
                        "12": null,
                        "20": null
                    }
                }
            },
            {
                "title": "Union[Partition[IntegerDigits[10!, 2], 3, 1]]    ➡️     {{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {1, 0, 0}, {1, 0, 1}, {1, 1, 0}, {1, 1, 1}}",
                "fullTitle": "Union[Partition[IntegerDigits[10!, 2], 3, 1]]    ➡️     {{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {1, 0, 0}, {1, 0, 1}, {1, 1, 0}, {1, 1, 1}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "22d707ff-c39c-4d05-a64d-3be823f933e3",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find all the triples of bits that occur in the binary decomposition of 10!:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[NestList[Mod[5*#1, 11] & , 1, 100]]    ➡️     {1, 3, 4, 5, 9}",
                "fullTitle": "Union[NestList[Mod[5*#1, 11] & , 1, 100]]    ➡️     {1, 3, 4, 5, 9}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c9a8d2de-a008-423f-a9b7-aebaf5bb70cb",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the distinct elements in the iteration:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    3: null\\n    4: null\\n    5: null\\n    9: null\\n  expect: \\n    1: null\\n    3: null\\n    4: null\\n    5: null\\n    9: null\\n  expect_evaluated: \\n    1: null\\n    3: null\\n    4: null\\n    5: null\\n    9: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "3": null,
                        "4": null,
                        "5": null,
                        "9": null
                    },
                    "expected": {
                        "1": null,
                        "3": null,
                        "4": null,
                        "5": null,
                        "9": null
                    }
                }
            },
            {
                "title": "Union[Flatten[(Options[#1][[All,1]] & ) /@ {FindFit, FindMinimum, FindRoot}]]    ➡️     {AccuracyGoal, Compiled, DampingFactor, Evaluated, EvaluationMonitor, Gradient, Jacobian, MaxIterations, Method, NormFunction, PrecisionGoal, StepMonitor, WorkingPrecision}",
                "fullTitle": "Union[Flatten[(Options[#1][[All,1]] & ) /@ {FindFit, FindMinimum, FindRoot}]]    ➡️     {AccuracyGoal, Compiled, DampingFactor, Evaluated, EvaluationMonitor, Gradient, Jacobian, MaxIterations, Method, NormFunction, PrecisionGoal, StepMonitor, WorkingPrecision}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1a85e5e4-73bd-4688-a4a9-c075dbb5ed84",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find what options are used by a list of functions:\\n\\n\\ndata: \\n  got: \\n    AccuracyGoal:      null\\n    Compiled:          null\\n    DampingFactor:     null\\n    Evaluated:         null\\n    EvaluationMonitor: null\\n    Gradient:          null\\n    Jacobian:          null\\n    MaxIterations:     null\\n    Method:            null\\n    NormFunction:      null\\n    PrecisionGoal:     null\\n    StepMonitor:       null\\n    WorkingPrecision:  null\\n  expect: \\n    AccuracyGoal:      null\\n    Compiled:          null\\n    DampingFactor:     null\\n    Evaluated:         null\\n    EvaluationMonitor: null\\n    Gradient:          null\\n    Jacobian:          null\\n    MaxIterations:     null\\n    Method:            null\\n    NormFunction:      null\\n    PrecisionGoal:     null\\n    StepMonitor:       null\\n    WorkingPrecision:  null\\n  expect_evaluated: \\n    AccuracyGoal:      null\\n    Compiled:          null\\n    DampingFactor:     null\\n    Evaluated:         null\\n    EvaluationMonitor: null\\n    Gradient:          null\\n    Jacobian:          null\\n    MaxIterations:     null\\n    Method:            null\\n    NormFunction:      null\\n    PrecisionGoal:     null\\n    StepMonitor:       null\\n    WorkingPrecision:  null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "AccuracyGoal": null,
                        "Compiled": null,
                        "DampingFactor": null,
                        "Evaluated": null,
                        "EvaluationMonitor": null,
                        "Gradient": null,
                        "Jacobian": null,
                        "MaxIterations": null,
                        "Method": null,
                        "NormFunction": null,
                        "PrecisionGoal": null,
                        "StepMonitor": null,
                        "WorkingPrecision": null
                    },
                    "expected": {
                        "AccuracyGoal": null,
                        "Compiled": null,
                        "DampingFactor": null,
                        "Evaluated": null,
                        "EvaluationMonitor": null,
                        "Gradient": null,
                        "Jacobian": null,
                        "MaxIterations": null,
                        "Method": null,
                        "NormFunction": null,
                        "PrecisionGoal": null,
                        "StepMonitor": null,
                        "WorkingPrecision": null
                    }
                }
            },
            {
                "title": "ints = RandomInteger[9, 10]    ➡️     {0, 3, 1, 7, 1, 4, 7, 0, 9, 5}",
                "fullTitle": "ints = RandomInteger[9, 10]    ➡️     {0, 3, 1, 7, 1, 4, 7, 0, 9, 5}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "39ed28ea-6e52-42be-ad48-f0b78d15ec58",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": true,
                "isHook": false,
                "context": "\"# Split on the sorted set gives lists of the same elements:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "splits = Split[Sort[ints]]    ➡️     {{0, 0}, {1, 1}, {3}, {4}, {5}, {7, 7}, {9}}",
                "fullTitle": "splits = Split[Sort[ints]]    ➡️     {{0, 0}, {1, 1}, {3}, {4}, {5}, {7, 7}, {9}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "05e3ba88-d187-4249-869e-70a68a37b59c",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[ints] === splits[[All,1]]    ➡️     True",
                "fullTitle": "Union[ints] === splits[[All,1]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "37a76e91-23f8-475b-b903-e2b453c5a0d5",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# The union is equivalent to the first elements of these lists:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "ints = RandomInteger[9, 10]    ➡️     {0, 4, 7, 0, 6, 1, 3, 0, 1, 5}",
                "fullTitle": "ints = RandomInteger[9, 10]    ➡️     {0, 4, 7, 0, 6, 1, 3, 0, 1, 5}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cea1c845-a775-492e-8dd0-df18ece6c27d",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Tally,paclet:ref/Tally] gets the count of identical elements and returns them in the original order:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "tally = Tally[ints]    ➡️     {{0, 3}, {4, 1}, {7, 1}, {6, 1}, {1, 2}, {3, 1}, {5, 1}}",
                "fullTitle": "tally = Tally[ints]    ➡️     {{0, 3}, {4, 1}, {7, 1}, {6, 1}, {1, 2}, {3, 1}, {5, 1}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ad0b9940-83cb-4078-b3c2-e0832386c09d",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[ints] === Sort[tally[[All,1]]]    ➡️     True",
                "fullTitle": "Union[ints] === Sort[tally[[All,1]]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b5e701d8-c44f-4a9d-8b9e-d07e2f18e6f1",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# The union is the sorted list of the elements returned by RefLink[Tally,paclet:ref/Tally]:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "ints = RandomInteger[1000, 1000] ;; Timing[Length[u = Union[ints, SameTest -> (Floor[#1/2] == Floor[#2/2] & )]]]    ➡️     {0.719, 429} # skip",
                "fullTitle": "ints = RandomInteger[1000, 1000] ;; Timing[Length[u = Union[ints, SameTest -> (Floor[#1/2] == Floor[#2/2] & )]]]    ➡️     {0.719, 429} # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "64ad850c-e870-449e-a2e8-7e50b8c0e0bb",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# For large sets RefLink[Union,paclet:ref/Union] may be slow with RefLink[SameTest,paclet:ref/SameTest] since it requires all pairwise comparisons:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Timing[Length[fu = 2*Union[Floor[ints/2]]]]    ➡️     {0., 429}",
                "fullTitle": "Timing[Length[fu = 2*Union[Floor[ints/2]]]]    ➡️     {0., 429}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "72653b77-f50c-4442-b978-d426e55587e1",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": true,
                "isHook": false,
                "context": "\"# When equivalence class representatives can be found, it may be faster to use RefLink[Union,paclet:ref/Union] on these:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[u - fu]    ➡️     {0, 1}",
                "fullTitle": "Union[u - fu]    ➡️     {0, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "552447d8-9d3a-405f-b2df-1885ab7d4cfc",
                "parentUUID": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
                "skipped": true,
                "isHook": false,
                "context": "\"# The results are the same except for the choice of representative:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "7f11dc9f-5a67-49eb-bc2c-6649b531fccf",
            "b57c8bd1-dd70-4da7-835f-f09d2c3238f3",
            "f20c7ef3-405f-4cb2-b1ed-57b244221a76",
            "f1a3c7c6-7d55-4f22-8a89-a53b7688f3e1",
            "df08d2ec-2e41-4e69-aa17-662a4bd0171c",
            "aa30b724-fc93-489a-af2d-12ff5b540197",
            "3f3e2b73-e35d-4433-8fdc-1202c61ea92f",
            "ed99b97e-fdde-44d7-8602-cda5cb3d29dc",
            "9c22d1e6-5019-4038-9e7e-0273e0abfd6e",
            "068ed46a-58a3-4db4-922a-592644b1d8d3",
            "22d707ff-c39c-4d05-a64d-3be823f933e3",
            "c9a8d2de-a008-423f-a9b7-aebaf5bb70cb",
            "1a85e5e4-73bd-4688-a4a9-c075dbb5ed84",
            "39ed28ea-6e52-42be-ad48-f0b78d15ec58",
            "05e3ba88-d187-4249-869e-70a68a37b59c",
            "37a76e91-23f8-475b-b903-e2b453c5a0d5",
            "cea1c845-a775-492e-8dd0-df18ece6c27d",
            "ad0b9940-83cb-4078-b3c2-e0832386c09d",
            "b5e701d8-c44f-4a9d-8b9e-d07e2f18e6f1",
            "64ad850c-e870-449e-a2e8-7e50b8c0e0bb",
            "72653b77-f50c-4442-b978-d426e55587e1",
            "552447d8-9d3a-405f-b2df-1885ab7d4cfc"
        ],
        "failures": [],
        "skipped": [
            "39ed28ea-6e52-42be-ad48-f0b78d15ec58",
            "05e3ba88-d187-4249-869e-70a68a37b59c",
            "cea1c845-a775-492e-8dd0-df18ece6c27d",
            "ad0b9940-83cb-4078-b3c2-e0832386c09d",
            "72653b77-f50c-4442-b978-d426e55587e1",
            "552447d8-9d3a-405f-b2df-1885ab7d4cfc"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "8b3ef09e-578c-4325-834b-7c0df53c59a8",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
