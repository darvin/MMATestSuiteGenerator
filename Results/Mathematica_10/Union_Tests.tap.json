{
    "stats": {
        "suites": 0,
        "tests": 22,
        "passes": 20,
        "pending": 0,
        "failures": 2,
        "start": "2018-06-02T18:11:12.007Z",
        "end": "2018-06-02T18:11:12.007Z",
        "duration": 0,
        "testsRegistered": 22,
        "passPercent": 90.9090909090909,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "Union[{1, 2, 1, 3, 6, 2, 2}]    ➡️     {1, 2, 3, 6}",
                "fullTitle": "Union[{1, 2, 1, 3, 6, 2, 2}]    ➡️     {1, 2, 3, 6}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c33c836b-cefc-4036-8f68-0072e1362bcb",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": false,
                "isHook": false,
                "context": "\"# SYSTEM: Mathematica_10\\n# TEST: Union_Tests\\n# OUTPUT: output/Results/Mathematica_10/Union_Tests.json\\n# Give a sorted list of distinct elements:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    2: null\\n    3: null\\n    6: null\\n  expect: \\n    1: null\\n    2: null\\n    3: null\\n    6: null\\n  expect_evaluated: \\n    1: null\\n    2: null\\n    3: null\\n    6: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "6": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "6": null
                    }
                }
            },
            {
                "title": "Union[{a, b, a, c}, {d, a, e, b}, {c, a}]    ➡️     {a, b, c, d, e}",
                "fullTitle": "Union[{a, b, a, c}, {d, a, e, b}, {c, a}]    ➡️     {a, b, c, d, e}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "587c8ee0-b272-40fd-ac4b-a5cc9cb2ccdf",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": false,
                "isHook": false,
                "context": "\"# Give a sorted list of distinct elements from all the lists:\\n\\n\\ndata: \\n  got: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n    e: null\\n  expect: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n    e: null\\n  expect_evaluated: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n    e: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null,
                        "e": null
                    },
                    "expected": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null,
                        "e": null
                    }
                }
            },
            {
                "title": "Union[{a, b, c}, {b, c, d}]    ➡️     {a, b, c, d}",
                "fullTitle": "Union[{a, b, c}, {b, c, d}]    ➡️     {a, b, c, d}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2e1bcd9e-48a4-4878-9891-27d50c0f97a9",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter using Esc\\\\[ThinSpace]un\\\\[ThinSpace]Esc:\\n\\n\\ndata: \\n  got: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n  expect: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n  expect_evaluated: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null
                    },
                    "expected": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null
                    }
                }
            },
            {
                "title": "Union[{{1, 2}, {1, 2, 3}}, {{2, 1}, {1, 2}}, {{3, 2, 1}, {1, 2, 3}}]    ➡️     {{1, 2}, {2, 1}, {1, 2, 3}, {3, 2, 1}}",
                "fullTitle": "Union[{{1, 2}, {1, 2, 3}}, {{2, 1}, {1, 2}}, {{3, 2, 1}, {1, 2, 3}}]    ➡️     {{1, 2}, {2, 1}, {1, 2, 3}, {3, 2, 1}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "42d1a808-a388-466c-af41-e8c6e7bfacfe",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": false,
                "isHook": false,
                "context": "\"# Give a list of the distinct lists:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[f[a, b], f[c, a], f[b, b, a]]    ➡️     f[a, b, c]",
                "fullTitle": "Union[f[a, b], f[c, a], f[b, b, a]]    ➡️     f[a, b, c]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "eb418a4e-fc85-433c-8193-92ad348ea8fd",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Union,paclet:ref/Union] works with any head, not just RefLink[List,paclet:ref/List]:\\n\\n\\ndata: \\n  got:              f[a, b, c]\\n  expect:           f[a, b, c]\\n  expect_evaluated: f[a, b, c]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[a, b, c]",
                    "expected": "f[a, b, c]"
                }
            },
            {
                "title": "Union[{2, -2, 1, 3, 1}, SameTest -> (Abs[#1] == Abs[#2] & )]    ➡️     {-2, 1, 3}",
                "fullTitle": "Union[{2, -2, 1, 3, 1}, SameTest -> (Abs[#1] == Abs[#2] & )]    ➡️     {-2, 1, 3}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0e120322-8555-4151-85f8-e6532e9801a6",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use equivalence classes based on absolute value: \\n\\n\\ndata: \\n  got: \\n    1:  null\\n    3:  null\\n    -2: null\\n  expect: \\n    1:  null\\n    3:  null\\n    -2: null\\n  expect_evaluated: \\n    1:  null\\n    3:  null\\n    -2: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "3": null,
                        "-2": null
                    },
                    "expected": {
                        "1": null,
                        "3": null,
                        "-2": null
                    }
                }
            },
            {
                "title": "Union[{1.1, 3.4, 0.5, 7.6, 7.1, 1.9}, SameTest -> (Floor[#1] == Floor[#2] & )]    ➡️     {0.5, 1.1, 3.4, 7.1}",
                "fullTitle": "Union[{1.1, 3.4, 0.5, 7.6, 7.1, 1.9}, SameTest -> (Floor[#1] == Floor[#2] & )]    ➡️     {0.5, 1.1, 3.4, 7.1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c6fc0660-a2b9-4678-a38b-b6d07d2cd687",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use equivalence classes based on RefLink[Floor,paclet:ref/Floor]:\\n\\n\\ndata: \\n  got: \\n    0.5: null\\n    1.1: null\\n    3.4: null\\n    7.1: null\\n  expect: \\n    0.5: null\\n    1.1: null\\n    3.4: null\\n    7.1: null\\n  expect_evaluated: \\n    0.5: null\\n    1.1: null\\n    3.4: null\\n    7.1: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "0.5": null,
                        "1.1": null,
                        "3.4": null,
                        "7.1": null
                    },
                    "expected": {
                        "0.5": null,
                        "1.1": null,
                        "3.4": null,
                        "7.1": null
                    }
                }
            },
            {
                "title": "Union[{{1, 2}, {3}, {4, 5, 6}, {9, 6}}, SameTest -> (Total[#1] == Total[#2] & )]    ➡️     {{3}, {9, 6}}",
                "fullTitle": "Union[{{1, 2}, {3}, {4, 5, 6}, {9, 6}}, SameTest -> (Total[#1] == Total[#2] & )]    ➡️     {{3}, {9, 6}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ac7e1ac6-29a6-4b43-af49-1006ef988914",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Total,paclet:ref/Total] of list elements:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[{{1, 2}, {2, 1}, {3, 2, 1}, {3}, {4, 5}, {5, 4, 3, 2, 1}}, SameTest -> (First[#1] == Last[#2] & )]    ➡️     {{3}, {1, 2}, {4, 5}}",
                "fullTitle": "Union[{{1, 2}, {2, 1}, {3, 2, 1}, {3}, {4, 5}, {5, 4, 3, 2, 1}}, SameTest -> (First[#1] == Last[#2] & )]    ➡️     {{3}, {1, 2}, {4, 5}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6fdfd323-6e39-4e15-9bc0-d68d8c4d7696",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use equality of last and first elements:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[Divisors[10], Divisors[12], Divisors[20]]    ➡️     {1, 2, 3, 4, 5, 6, 10, 12, 20}",
                "fullTitle": "Union[Divisors[10], Divisors[12], Divisors[20]]    ➡️     {1, 2, 3, 4, 5, 6, 10, 12, 20}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "609d5a8b-3626-411c-8a29-35abd3487f06",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find divisors that occur in any of 10, 12, and 20:\\n\\n\\ndata: \\n  got: \\n    1:  null\\n    2:  null\\n    3:  null\\n    4:  null\\n    5:  null\\n    6:  null\\n    10: null\\n    12: null\\n    20: null\\n  expect: \\n    1:  null\\n    2:  null\\n    3:  null\\n    4:  null\\n    5:  null\\n    6:  null\\n    10: null\\n    12: null\\n    20: null\\n  expect_evaluated: \\n    1:  null\\n    2:  null\\n    3:  null\\n    4:  null\\n    5:  null\\n    6:  null\\n    10: null\\n    12: null\\n    20: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "4": null,
                        "5": null,
                        "6": null,
                        "10": null,
                        "12": null,
                        "20": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "4": null,
                        "5": null,
                        "6": null,
                        "10": null,
                        "12": null,
                        "20": null
                    }
                }
            },
            {
                "title": "Union[Partition[IntegerDigits[10!, 2], 3, 1]]    ➡️     {{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {1, 0, 0}, {1, 0, 1}, {1, 1, 0}, {1, 1, 1}}",
                "fullTitle": "Union[Partition[IntegerDigits[10!, 2], 3, 1]]    ➡️     {{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {1, 0, 0}, {1, 0, 1}, {1, 1, 0}, {1, 1, 1}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f06fddcb-4a86-4c68-b5ba-c9ceb11cfbf0",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find all the triples of bits that occur in the binary decomposition of 10!:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[NestList[Mod[5*#1, 11] & , 1, 100]]    ➡️     {1, 3, 4, 5, 9}",
                "fullTitle": "Union[NestList[Mod[5*#1, 11] & , 1, 100]]    ➡️     {1, 3, 4, 5, 9}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a8251fce-6193-4a0d-85f3-7697768e0d2f",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the distinct elements in the iteration:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    3: null\\n    4: null\\n    5: null\\n    9: null\\n  expect: \\n    1: null\\n    3: null\\n    4: null\\n    5: null\\n    9: null\\n  expect_evaluated: \\n    1: null\\n    3: null\\n    4: null\\n    5: null\\n    9: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "3": null,
                        "4": null,
                        "5": null,
                        "9": null
                    },
                    "expected": {
                        "1": null,
                        "3": null,
                        "4": null,
                        "5": null,
                        "9": null
                    }
                }
            },
            {
                "title": "Union[Flatten[(Options[#1][[All,1]] & ) /@ {FindFit, FindMinimum, FindRoot}]]    ➡️     {AccuracyGoal, Compiled, DampingFactor, Evaluated, EvaluationMonitor, Gradient, Jacobian, MaxIterations, Method, NormFunction, PrecisionGoal, StepMonitor, WorkingPrecision}",
                "fullTitle": "Union[Flatten[(Options[#1][[All,1]] & ) /@ {FindFit, FindMinimum, FindRoot}]]    ➡️     {AccuracyGoal, Compiled, DampingFactor, Evaluated, EvaluationMonitor, Gradient, Jacobian, MaxIterations, Method, NormFunction, PrecisionGoal, StepMonitor, WorkingPrecision}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "94866cca-4db5-4c5c-adda-34aff3f9288e",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find what options are used by a list of functions:\\n\\n\\ndata: \\n  got: \\n    AccuracyGoal:      null\\n    Compiled:          null\\n    DampingFactor:     null\\n    Evaluated:         null\\n    EvaluationMonitor: null\\n    Gradient:          null\\n    Jacobian:          null\\n    MaxIterations:     null\\n    Method:            null\\n    NormFunction:      null\\n    PrecisionGoal:     null\\n    StepMonitor:       null\\n    WorkingPrecision:  null\\n  expect: \\n    AccuracyGoal:      null\\n    Compiled:          null\\n    DampingFactor:     null\\n    Evaluated:         null\\n    EvaluationMonitor: null\\n    Gradient:          null\\n    Jacobian:          null\\n    MaxIterations:     null\\n    Method:            null\\n    NormFunction:      null\\n    PrecisionGoal:     null\\n    StepMonitor:       null\\n    WorkingPrecision:  null\\n  expect_evaluated: \\n    AccuracyGoal:      null\\n    Compiled:          null\\n    DampingFactor:     null\\n    Evaluated:         null\\n    EvaluationMonitor: null\\n    Gradient:          null\\n    Jacobian:          null\\n    MaxIterations:     null\\n    Method:            null\\n    NormFunction:      null\\n    PrecisionGoal:     null\\n    StepMonitor:       null\\n    WorkingPrecision:  null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "AccuracyGoal": null,
                        "Compiled": null,
                        "DampingFactor": null,
                        "Evaluated": null,
                        "EvaluationMonitor": null,
                        "Gradient": null,
                        "Jacobian": null,
                        "MaxIterations": null,
                        "Method": null,
                        "NormFunction": null,
                        "PrecisionGoal": null,
                        "StepMonitor": null,
                        "WorkingPrecision": null
                    },
                    "expected": {
                        "AccuracyGoal": null,
                        "Compiled": null,
                        "DampingFactor": null,
                        "Evaluated": null,
                        "EvaluationMonitor": null,
                        "Gradient": null,
                        "Jacobian": null,
                        "MaxIterations": null,
                        "Method": null,
                        "NormFunction": null,
                        "PrecisionGoal": null,
                        "StepMonitor": null,
                        "WorkingPrecision": null
                    }
                }
            },
            {
                "title": "ints = RandomInteger[9, 10]    ➡️     {0, 3, 1, 7, 1, 4, 7, 0, 9, 5}",
                "fullTitle": "ints = RandomInteger[9, 10]    ➡️     {0, 3, 1, 7, 1, 4, 7, 0, 9, 5}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4ae0daf9-5867-4f67-8695-307d8fe16e60",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": true,
                "isHook": false,
                "context": "\"# Split on the sorted set gives lists of the same elements:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "splits = Split[Sort[ints]]    ➡️     {{0, 0}, {1, 1}, {3}, {4}, {5}, {7, 7}, {9}}",
                "fullTitle": "splits = Split[Sort[ints]]    ➡️     {{0, 0}, {1, 1}, {3}, {4}, {5}, {7, 7}, {9}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b070ae2d-69b4-4dae-a8f0-a0129017eb44",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[ints] === splits[[All,1]]    ➡️     True",
                "fullTitle": "Union[ints] === splits[[All,1]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b007ab65-1217-412f-a8a3-9d911c1e1120",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": false,
                "isHook": false,
                "context": "\"# The union is equivalent to the first elements of these lists:\\n\\n\\ndata: \\n  got:              false\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "failed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": true
                }
            },
            {
                "title": "ints = RandomInteger[9, 10]    ➡️     {0, 4, 7, 0, 6, 1, 3, 0, 1, 5}",
                "fullTitle": "ints = RandomInteger[9, 10]    ➡️     {0, 4, 7, 0, 6, 1, 3, 0, 1, 5}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "047af0dc-5dba-49b5-abf8-dc64462d5ef6",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Tally,paclet:ref/Tally] gets the count of identical elements and returns them in the original order:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "tally = Tally[ints]    ➡️     {{0, 3}, {4, 1}, {7, 1}, {6, 1}, {1, 2}, {3, 1}, {5, 1}}",
                "fullTitle": "tally = Tally[ints]    ➡️     {{0, 3}, {4, 1}, {7, 1}, {6, 1}, {1, 2}, {3, 1}, {5, 1}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c977552a-79c8-47c7-a3cc-33cce05faef0",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[ints] === Sort[tally[[All,1]]]    ➡️     True",
                "fullTitle": "Union[ints] === Sort[tally[[All,1]]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "40911451-78a4-4610-8dde-5a964faa97c5",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": false,
                "isHook": false,
                "context": "\"# The union is the sorted list of the elements returned by RefLink[Tally,paclet:ref/Tally]:\\n\\n\\ndata: \\n  got:              false\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "failed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": true
                }
            },
            {
                "title": "Timing[Length[u = Union[ints, SameTest -> (Floor[#1/2] == Floor[#2/2] & )]]]    ➡️     {0.719, 429} # skip",
                "fullTitle": "Timing[Length[u = Union[ints, SameTest -> (Floor[#1/2] == Floor[#2/2] & )]]]    ➡️     {0.719, 429} # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a1ea8ad0-9a27-48b8-92d4-dab7a0e2fd3f",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Timing[Length[fu = 2*Union[Floor[ints/2]]]]    ➡️     {0., 429}",
                "fullTitle": "Timing[Length[fu = 2*Union[Floor[ints/2]]]]    ➡️     {0., 429}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "98e65efd-7a96-4a9a-a4fd-445c83440f51",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": true,
                "isHook": false,
                "context": "\"# When equivalence class representatives can be found, it may be faster to use RefLink[Union,paclet:ref/Union] on these:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[u - fu]    ➡️     {0, 1}",
                "fullTitle": "Union[u - fu]    ➡️     {0, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "66581dc9-58a5-4e07-8a17-6dbc65a8b295",
                "parentUUID": "f599353c-a953-4c96-92fc-dc13b04a39be",
                "skipped": true,
                "isHook": false,
                "context": "\"# The results are the same except for the choice of representative:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "c33c836b-cefc-4036-8f68-0072e1362bcb",
            "587c8ee0-b272-40fd-ac4b-a5cc9cb2ccdf",
            "2e1bcd9e-48a4-4878-9891-27d50c0f97a9",
            "42d1a808-a388-466c-af41-e8c6e7bfacfe",
            "eb418a4e-fc85-433c-8193-92ad348ea8fd",
            "0e120322-8555-4151-85f8-e6532e9801a6",
            "c6fc0660-a2b9-4678-a38b-b6d07d2cd687",
            "ac7e1ac6-29a6-4b43-af49-1006ef988914",
            "6fdfd323-6e39-4e15-9bc0-d68d8c4d7696",
            "609d5a8b-3626-411c-8a29-35abd3487f06",
            "f06fddcb-4a86-4c68-b5ba-c9ceb11cfbf0",
            "a8251fce-6193-4a0d-85f3-7697768e0d2f",
            "94866cca-4db5-4c5c-adda-34aff3f9288e",
            "4ae0daf9-5867-4f67-8695-307d8fe16e60",
            "b070ae2d-69b4-4dae-a8f0-a0129017eb44",
            "047af0dc-5dba-49b5-abf8-dc64462d5ef6",
            "c977552a-79c8-47c7-a3cc-33cce05faef0",
            "a1ea8ad0-9a27-48b8-92d4-dab7a0e2fd3f",
            "98e65efd-7a96-4a9a-a4fd-445c83440f51",
            "66581dc9-58a5-4e07-8a17-6dbc65a8b295"
        ],
        "failures": [
            "b007ab65-1217-412f-a8a3-9d911c1e1120",
            "40911451-78a4-4610-8dde-5a964faa97c5"
        ],
        "skipped": [
            "4ae0daf9-5867-4f67-8695-307d8fe16e60",
            "b070ae2d-69b4-4dae-a8f0-a0129017eb44",
            "047af0dc-5dba-49b5-abf8-dc64462d5ef6",
            "c977552a-79c8-47c7-a3cc-33cce05faef0",
            "98e65efd-7a96-4a9a-a4fd-445c83440f51",
            "66581dc9-58a5-4e07-8a17-6dbc65a8b295"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "f599353c-a953-4c96-92fc-dc13b04a39be",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
