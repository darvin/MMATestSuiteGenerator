{
    "stats": {
        "suites": 0,
        "tests": 22,
        "passes": 19,
        "pending": 0,
        "failures": 3,
        "start": "2018-06-03T23:02:32.219Z",
        "end": "2018-06-03T23:02:32.219Z",
        "duration": 0,
        "testsRegistered": 22,
        "passPercent": 86.36363636363636,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "Union[{1, 2, 1, 3, 6, 2, 2}]    ➡️     {1, 2, 3, 6}",
                "fullTitle": "Union[{1, 2, 1, 3, 6, 2, 2}]    ➡️     {1, 2, 3, 6}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "37dde1a9-2c0b-4f2e-8287-afeda1ea6a09",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/Union_Tests.m\\n#! TextForm[ColonForm[MessageName[Union, normal], StringForm[Nonatomic expression expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[Union[ints]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Symbol, argx], StringForm[`1` called with `2` arguments; 1 argument is expected., Short[HoldForm[Symbol], 3], Short[HoldForm[0], 3]]]]\\n#! TextForm[ColonForm[MessageName[Union, normal], StringForm[Nonatomic expression expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[Union[ints]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Symbol, argx], StringForm[`1` called with `2` arguments; 1 argument is expected., Short[HoldForm[Symbol], 3], Short[HoldForm[0], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: Union_Tests\\n# Give a sorted list of distinct elements:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    2: null\\n    3: null\\n    6: null\\n  expect: \\n    1: null\\n    2: null\\n    3: null\\n    6: null\\n  expect_evaluated: \\n    1: null\\n    2: null\\n    3: null\\n    6: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "6": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "6": null
                    }
                }
            },
            {
                "title": "Union[{a, b, a, c}, {d, a, e, b}, {c, a}]    ➡️     {a, b, c, d, e}",
                "fullTitle": "Union[{a, b, a, c}, {d, a, e, b}, {c, a}]    ➡️     {a, b, c, d, e}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c4819a5d-8576-4ebb-acb3-97e794e3966d",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": false,
                "isHook": false,
                "context": "\"# Give a sorted list of distinct elements from all the lists:\\n\\n\\ndata: \\n  got: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n    e: null\\n  expect: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n    e: null\\n  expect_evaluated: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n    e: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null,
                        "e": null
                    },
                    "expected": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null,
                        "e": null
                    }
                }
            },
            {
                "title": "Union[{a, b, c}, {b, c, d}]    ➡️     {a, b, c, d}",
                "fullTitle": "Union[{a, b, c}, {b, c, d}]    ➡️     {a, b, c, d}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c4f82f36-5fa9-4454-8a6b-b7ba1493fbb3",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter using Esc\\\\[ThinSpace]un\\\\[ThinSpace]Esc:\\n\\n\\ndata: \\n  got: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n  expect: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n  expect_evaluated: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null
                    },
                    "expected": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null
                    }
                }
            },
            {
                "title": "Union[{{1, 2}, {1, 2, 3}}, {{2, 1}, {1, 2}}, {{3, 2, 1}, {1, 2, 3}}]    ➡️     {{1, 2}, {2, 1}, {1, 2, 3}, {3, 2, 1}}",
                "fullTitle": "Union[{{1, 2}, {1, 2, 3}}, {{2, 1}, {1, 2}}, {{3, 2, 1}, {1, 2, 3}}]    ➡️     {{1, 2}, {2, 1}, {1, 2, 3}, {3, 2, 1}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "dd39e757-dc9e-4dcb-8633-f5a78866dfd4",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": false,
                "isHook": false,
                "context": "\"# Give a list of the distinct lists:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[f[a, b], f[c, a], f[b, b, a]]    ➡️     f[a, b, c]",
                "fullTitle": "Union[f[a, b], f[c, a], f[b, b, a]]    ➡️     f[a, b, c]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "dc9a8d2a-0f8f-4377-8b1e-9993a913d3bb",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Union,paclet:ref/Union] works with any head, not just RefLink[List,paclet:ref/List]:\\n\\n\\ndata: \\n  got:              f[a, b, c]\\n  expect:           f[a, b, c]\\n  expect_evaluated: f[a, b, c]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[a, b, c]",
                    "expected": "f[a, b, c]"
                }
            },
            {
                "title": "Union[{2, -2, 1, 3, 1}, SameTest -> (Abs[#1] == Abs[#2] & )]    ➡️     {-2, 1, 3}",
                "fullTitle": "Union[{2, -2, 1, 3, 1}, SameTest -> (Abs[#1] == Abs[#2] & )]    ➡️     {-2, 1, 3}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a18ab942-0a31-4fa1-924b-e85270164acd",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use equivalence classes based on absolute value: \\n\\n\\ndata: \\n  got: \\n    1:  null\\n    3:  null\\n    -2: null\\n  expect: \\n    1:  null\\n    3:  null\\n    -2: null\\n  expect_evaluated: \\n    1:  null\\n    3:  null\\n    -2: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "3": null,
                        "-2": null
                    },
                    "expected": {
                        "1": null,
                        "3": null,
                        "-2": null
                    }
                }
            },
            {
                "title": "Union[{1.1, 3.4, 0.5, 7.6, 7.1, 1.9}, SameTest -> (Floor[#1] == Floor[#2] & )]    ➡️     {0.5, 1.1, 3.4, 7.1}",
                "fullTitle": "Union[{1.1, 3.4, 0.5, 7.6, 7.1, 1.9}, SameTest -> (Floor[#1] == Floor[#2] & )]    ➡️     {0.5, 1.1, 3.4, 7.1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bd00e15f-c2e3-4d33-9d09-34f9ee1792ed",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use equivalence classes based on RefLink[Floor,paclet:ref/Floor]:\\n\\n\\ndata: \\n  got: \\n    0.5: null\\n    1.1: null\\n    3.4: null\\n    7.1: null\\n  expect: \\n    0.5: null\\n    1.1: null\\n    3.4: null\\n    7.1: null\\n  expect_evaluated: \\n    0.5: null\\n    1.1: null\\n    3.4: null\\n    7.1: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "0.5": null,
                        "1.1": null,
                        "3.4": null,
                        "7.1": null
                    },
                    "expected": {
                        "0.5": null,
                        "1.1": null,
                        "3.4": null,
                        "7.1": null
                    }
                }
            },
            {
                "title": "Union[{{1, 2}, {3}, {4, 5, 6}, {9, 6}}, SameTest -> (Total[#1] == Total[#2] & )]    ➡️     {{3}, {9, 6}}",
                "fullTitle": "Union[{{1, 2}, {3}, {4, 5, 6}, {9, 6}}, SameTest -> (Total[#1] == Total[#2] & )]    ➡️     {{3}, {9, 6}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "22660d3b-afa6-4c92-86ca-d6183ea332d6",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Total,paclet:ref/Total] of list elements:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[{{1, 2}, {2, 1}, {3, 2, 1}, {3}, {4, 5}, {5, 4, 3, 2, 1}}, SameTest -> (First[#1] == Last[#2] & )]    ➡️     {{3}, {1, 2}, {4, 5}}",
                "fullTitle": "Union[{{1, 2}, {2, 1}, {3, 2, 1}, {3}, {4, 5}, {5, 4, 3, 2, 1}}, SameTest -> (First[#1] == Last[#2] & )]    ➡️     {{3}, {1, 2}, {4, 5}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e4283b76-c644-4b3d-94e7-cfec7790bdb2",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use equality of last and first elements:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[Divisors[10], Divisors[12], Divisors[20]]    ➡️     {1, 2, 3, 4, 5, 6, 10, 12, 20}",
                "fullTitle": "Union[Divisors[10], Divisors[12], Divisors[20]]    ➡️     {1, 2, 3, 4, 5, 6, 10, 12, 20}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d5c1b6e6-f6e3-424f-9682-c07bb2d0820c",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find divisors that occur in any of 10, 12, and 20:\\n\\n\\ndata: \\n  got: \\n    1:  null\\n    2:  null\\n    3:  null\\n    4:  null\\n    5:  null\\n    6:  null\\n    10: null\\n    12: null\\n    20: null\\n  expect: \\n    1:  null\\n    2:  null\\n    3:  null\\n    4:  null\\n    5:  null\\n    6:  null\\n    10: null\\n    12: null\\n    20: null\\n  expect_evaluated: \\n    1:  null\\n    2:  null\\n    3:  null\\n    4:  null\\n    5:  null\\n    6:  null\\n    10: null\\n    12: null\\n    20: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "4": null,
                        "5": null,
                        "6": null,
                        "10": null,
                        "12": null,
                        "20": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "4": null,
                        "5": null,
                        "6": null,
                        "10": null,
                        "12": null,
                        "20": null
                    }
                }
            },
            {
                "title": "Union[Partition[IntegerDigits[10!, 2], 3, 1]]    ➡️     {{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {1, 0, 0}, {1, 0, 1}, {1, 1, 0}, {1, 1, 1}}",
                "fullTitle": "Union[Partition[IntegerDigits[10!, 2], 3, 1]]    ➡️     {{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {1, 0, 0}, {1, 0, 1}, {1, 1, 0}, {1, 1, 1}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4653ba47-50a0-46df-a8cf-2293a46d131c",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find all the triples of bits that occur in the binary decomposition of 10!:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[NestList[Mod[5*#1, 11] & , 1, 100]]    ➡️     {1, 3, 4, 5, 9}",
                "fullTitle": "Union[NestList[Mod[5*#1, 11] & , 1, 100]]    ➡️     {1, 3, 4, 5, 9}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "273e4709-76bd-4f04-85c3-ef8de3f2636f",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the distinct elements in the iteration:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    3: null\\n    4: null\\n    5: null\\n    9: null\\n  expect: \\n    1: null\\n    3: null\\n    4: null\\n    5: null\\n    9: null\\n  expect_evaluated: \\n    1: null\\n    3: null\\n    4: null\\n    5: null\\n    9: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "3": null,
                        "4": null,
                        "5": null,
                        "9": null
                    },
                    "expected": {
                        "1": null,
                        "3": null,
                        "4": null,
                        "5": null,
                        "9": null
                    }
                }
            },
            {
                "title": "Union[Flatten[(Options[#1][[All,1]] & ) /@ {FindFit, FindMinimum, FindRoot}]]    ➡️     {AccuracyGoal, Compiled, DampingFactor, Evaluated, EvaluationMonitor, Gradient, Jacobian, MaxIterations, Method, NormFunction, PrecisionGoal, StepMonitor, WorkingPrecision}",
                "fullTitle": "Union[Flatten[(Options[#1][[All,1]] & ) /@ {FindFit, FindMinimum, FindRoot}]]    ➡️     {AccuracyGoal, Compiled, DampingFactor, Evaluated, EvaluationMonitor, Gradient, Jacobian, MaxIterations, Method, NormFunction, PrecisionGoal, StepMonitor, WorkingPrecision}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b953063f-d633-45ca-a03d-dd1dc79b09ae",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find what options are used by a list of functions:\\n\\n\\ndata: \\n  got: \\n    AccuracyGoal:      null\\n    Compiled:          null\\n    DampingFactor:     null\\n    Evaluated:         null\\n    EvaluationMonitor: null\\n    Gradient:          null\\n    Jacobian:          null\\n    MaxIterations:     null\\n    Method:            null\\n    NormFunction:      null\\n    PrecisionGoal:     null\\n    StepMonitor:       null\\n    WorkingPrecision:  null\\n  expect: \\n    AccuracyGoal:      null\\n    Compiled:          null\\n    DampingFactor:     null\\n    Evaluated:         null\\n    EvaluationMonitor: null\\n    Gradient:          null\\n    Jacobian:          null\\n    MaxIterations:     null\\n    Method:            null\\n    NormFunction:      null\\n    PrecisionGoal:     null\\n    StepMonitor:       null\\n    WorkingPrecision:  null\\n  expect_evaluated: \\n    AccuracyGoal:      null\\n    Compiled:          null\\n    DampingFactor:     null\\n    Evaluated:         null\\n    EvaluationMonitor: null\\n    Gradient:          null\\n    Jacobian:          null\\n    MaxIterations:     null\\n    Method:            null\\n    NormFunction:      null\\n    PrecisionGoal:     null\\n    StepMonitor:       null\\n    WorkingPrecision:  null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "AccuracyGoal": null,
                        "Compiled": null,
                        "DampingFactor": null,
                        "Evaluated": null,
                        "EvaluationMonitor": null,
                        "Gradient": null,
                        "Jacobian": null,
                        "MaxIterations": null,
                        "Method": null,
                        "NormFunction": null,
                        "PrecisionGoal": null,
                        "StepMonitor": null,
                        "WorkingPrecision": null
                    },
                    "expected": {
                        "AccuracyGoal": null,
                        "Compiled": null,
                        "DampingFactor": null,
                        "Evaluated": null,
                        "EvaluationMonitor": null,
                        "Gradient": null,
                        "Jacobian": null,
                        "MaxIterations": null,
                        "Method": null,
                        "NormFunction": null,
                        "PrecisionGoal": null,
                        "StepMonitor": null,
                        "WorkingPrecision": null
                    }
                }
            },
            {
                "title": "ints = RandomInteger[9, 10]    ➡️     {0, 3, 1, 7, 1, 4, 7, 0, 9, 5}",
                "fullTitle": "ints = RandomInteger[9, 10]    ➡️     {0, 3, 1, 7, 1, 4, 7, 0, 9, 5}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "297c1bb9-562a-49d5-9a7a-0dd779181558",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": true,
                "isHook": false,
                "context": "\"# Split on the sorted set gives lists of the same elements:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "splits = Split[Sort[ints]]    ➡️     {{0, 0}, {1, 1}, {3}, {4}, {5}, {7, 7}, {9}}",
                "fullTitle": "splits = Split[Sort[ints]]    ➡️     {{0, 0}, {1, 1}, {3}, {4}, {5}, {7, 7}, {9}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "abc4d16a-c7db-4ad8-876d-21531f074e72",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[ints] === splits[[All,1]]    ➡️     True",
                "fullTitle": "Union[ints] === splits[[All,1]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "818c337d-8d71-4363-8438-c863b87bbe37",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": false,
                "isHook": false,
                "context": "\"# The union is equivalent to the first elements of these lists:\\n\\n\\ndata: \\n  got:              false\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "failed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": true
                }
            },
            {
                "title": "ints = RandomInteger[9, 10]    ➡️     {0, 4, 7, 0, 6, 1, 3, 0, 1, 5}",
                "fullTitle": "ints = RandomInteger[9, 10]    ➡️     {0, 4, 7, 0, 6, 1, 3, 0, 1, 5}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3513eeb4-ffa9-4d6b-8d86-b4ba179282fe",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Tally,paclet:ref/Tally] gets the count of identical elements and returns them in the original order:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "tally = Tally[ints]    ➡️     {{0, 3}, {4, 1}, {7, 1}, {6, 1}, {1, 2}, {3, 1}, {5, 1}}",
                "fullTitle": "tally = Tally[ints]    ➡️     {{0, 3}, {4, 1}, {7, 1}, {6, 1}, {1, 2}, {3, 1}, {5, 1}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bbf32e3d-4743-4ae2-a892-bca6cbd120c4",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[ints] === Sort[tally[[All,1]]]    ➡️     True",
                "fullTitle": "Union[ints] === Sort[tally[[All,1]]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "369b007d-9252-41b8-9f06-4809b299bd90",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": false,
                "isHook": false,
                "context": "\"# The union is the sorted list of the elements returned by RefLink[Tally,paclet:ref/Tally]:\\n\\n\\ndata: \\n  got:              false\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "failed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": true
                }
            },
            {
                "title": "Timing[Length[u = Union[ints, SameTest -> (Floor[#1/2] == Floor[#2/2] & )]]]    ➡️     {0.719, 429} # skip",
                "fullTitle": "Timing[Length[u = Union[ints, SameTest -> (Floor[#1/2] == Floor[#2/2] & )]]]    ➡️     {0.719, 429} # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "78f02794-6c60-47ca-96f5-f45ee5d8b71d",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Timing[Length[fu = 2*Union[Floor[ints/2]]]]    ➡️     {0., 429}",
                "fullTitle": "Timing[Length[fu = 2*Union[Floor[ints/2]]]]    ➡️     {0., 429}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "115f8b09-843e-4332-8740-92cdab028515",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": true,
                "isHook": false,
                "context": "\"# When equivalence class representatives can be found, it may be faster to use RefLink[Union,paclet:ref/Union] on these:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Union[u - fu]    ➡️     {0, 1}",
                "fullTitle": "Union[u - fu]    ➡️     {0, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "22bc3b15-f69c-4a2b-871d-79e4f9acd47f",
                "parentUUID": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
                "skipped": false,
                "isHook": false,
                "context": "\"# The results are the same except for the choice of representative:\\n\\n\\ndata: \\n  got:              -fu + u\\n  expect: \\n    0: null\\n    1: null\\n  expect_evaluated: \\n    0: null\\n    1: null\"",
                "state": "failed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "-fu + u",
                    "expected": {
                        "0": null,
                        "1": null
                    }
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "37dde1a9-2c0b-4f2e-8287-afeda1ea6a09",
            "c4819a5d-8576-4ebb-acb3-97e794e3966d",
            "c4f82f36-5fa9-4454-8a6b-b7ba1493fbb3",
            "dd39e757-dc9e-4dcb-8633-f5a78866dfd4",
            "dc9a8d2a-0f8f-4377-8b1e-9993a913d3bb",
            "a18ab942-0a31-4fa1-924b-e85270164acd",
            "bd00e15f-c2e3-4d33-9d09-34f9ee1792ed",
            "22660d3b-afa6-4c92-86ca-d6183ea332d6",
            "e4283b76-c644-4b3d-94e7-cfec7790bdb2",
            "d5c1b6e6-f6e3-424f-9682-c07bb2d0820c",
            "4653ba47-50a0-46df-a8cf-2293a46d131c",
            "273e4709-76bd-4f04-85c3-ef8de3f2636f",
            "b953063f-d633-45ca-a03d-dd1dc79b09ae",
            "297c1bb9-562a-49d5-9a7a-0dd779181558",
            "abc4d16a-c7db-4ad8-876d-21531f074e72",
            "3513eeb4-ffa9-4d6b-8d86-b4ba179282fe",
            "bbf32e3d-4743-4ae2-a892-bca6cbd120c4",
            "78f02794-6c60-47ca-96f5-f45ee5d8b71d",
            "115f8b09-843e-4332-8740-92cdab028515"
        ],
        "failures": [
            "818c337d-8d71-4363-8438-c863b87bbe37",
            "369b007d-9252-41b8-9f06-4809b299bd90",
            "22bc3b15-f69c-4a2b-871d-79e4f9acd47f"
        ],
        "skipped": [
            "297c1bb9-562a-49d5-9a7a-0dd779181558",
            "abc4d16a-c7db-4ad8-876d-21531f074e72",
            "3513eeb4-ffa9-4d6b-8d86-b4ba179282fe",
            "bbf32e3d-4743-4ae2-a892-bca6cbd120c4",
            "115f8b09-843e-4332-8740-92cdab028515"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "fc3279e5-9cab-4a3b-8119-84aa7eb4f7ba",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
