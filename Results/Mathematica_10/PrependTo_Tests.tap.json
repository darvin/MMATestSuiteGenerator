{
    "stats": {
        "suites": 0,
        "tests": 19,
        "passes": 18,
        "pending": 0,
        "failures": 1,
        "start": "2018-06-03T23:02:13.403Z",
        "end": "2018-06-03T23:02:13.403Z",
        "duration": 0,
        "testsRegistered": 19,
        "passPercent": 94.73684210526315,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "l = {1, 2, 4, 9}    ➡️     {1, 2, 4, 9}",
                "fullTitle": "l = {1, 2, 4, 9}    ➡️     {1, 2, 4, 9}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cda99bcc-e80f-45db-9a9e-870ee87fda73",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/PrependTo_Tests.m\\n#! TextForm[ColonForm[MessageName[PrependTo, rvalue], StringForm[`1` is not a variable with a value, so its value cannot be changed., Short[HoldForm[s], 3]]]]\\n#! TextForm[ColonForm[MessageName[PrependTo, rvalue], StringForm[`1` is not a variable with a value, so its value cannot be changed., Short[HoldForm[{1, 2}], 3]]]]\\n#! TextForm[ColonForm[MessageName[PrependTo, rvalue], StringForm[`1` is not a variable with a value, so its value cannot be changed., Short[HoldForm[{1, 2}], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[PrependTo, rvalue]], 3]]]]\\n#! TextForm[ColonForm[MessageName[PrependTo, normal], StringForm[Nonatomic expression expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[PrependTo[k, 2]], 3]]]]\\n#! TextForm[ColonForm[MessageName[PrependTo, normal], StringForm[Nonatomic expression expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[PrependTo[k, 2]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: PrependTo_Tests\\n# Assign l to a list:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect: \\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect_evaluated: \\n    1: null\\n    2: null\\n    4: null\\n    9: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    }
                }
            },
            {
                "title": "PrependTo[l, 0]    ➡️     {0, 1, 2, 4, 9}",
                "fullTitle": "PrependTo[l, 0]    ➡️     {0, 1, 2, 4, 9}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a5a184b7-271b-4be9-a1c7-57537b718228",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": false,
                "isHook": false,
                "context": "\"# Include a new value at the beginning of the list:\\n\\n\\ndata: \\n  got: \\n    0: null\\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect: \\n    0: null\\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect_evaluated: \\n    0: null\\n    1: null\\n    2: null\\n    4: null\\n    9: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "0": null,
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    },
                    "expected": {
                        "0": null,
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    }
                }
            },
            {
                "title": "l    ➡️     {0, 1, 2, 4, 9}",
                "fullTitle": "l    ➡️     {0, 1, 2, 4, 9}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b7de2102-5c05-4258-970e-e82690e4681a",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": false,
                "isHook": false,
                "context": "\"# The value assigned to l has changed:\\n\\n\\ndata: \\n  got: \\n    0: null\\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect: \\n    0: null\\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect_evaluated: \\n    0: null\\n    1: null\\n    2: null\\n    4: null\\n    9: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "0": null,
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    },
                    "expected": {
                        "0": null,
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    }
                }
            },
            {
                "title": "x = <| 1 -> a, 2 -> b |>    ➡️     <| 1 -> a, 2 -> b |>",
                "fullTitle": "x = <| 1 -> a, 2 -> b |>    ➡️     <| 1 -> a, 2 -> b |>",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "49fead89-cb39-470f-bc17-55252bff691d",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": false,
                "isHook": false,
                "context": "\"# Prepend to an RefLink[Association,paclet:ref/Association]:\\n\\n\\ndata: \\n  got:              <|1 -> a, 2 -> b|>\\n  expect:           <| 1 -> a, 2 -> b |>\\n  expect_evaluated: <|1 -> a, 2 -> b|>\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "<|1 -> a, 2 -> b|>",
                    "expected": "<| 1 -> a, 2 -> b |>"
                }
            },
            {
                "title": "AppendTo[x, 3 -> c]    ➡️     <| 1 -> a, 2 -> b, 3 -> c |>",
                "fullTitle": "AppendTo[x, 3 -> c]    ➡️     <| 1 -> a, 2 -> b, 3 -> c |>",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "36a1fc54-7c12-4879-8b2d-9a1490ca6f02",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              <|1 -> a, 2 -> b, 3 -> c|>\\n  expect:           <| 1 -> a, 2 -> b, 3 -> c |>\\n  expect_evaluated: <|1 -> a, 2 -> b, 3 -> c|>\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "<|1 -> a, 2 -> b, 3 -> c|>",
                    "expected": "<| 1 -> a, 2 -> b, 3 -> c |>"
                }
            },
            {
                "title": "PrependTo[x, 4 -> d]    ➡️     <| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>",
                "fullTitle": "PrependTo[x, 4 -> d]    ➡️     <| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fa8adbc5-aa6a-495f-955f-c2357f2c3d3e",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              <|4 -> d, 1 -> a, 2 -> b, 3 -> c|>\\n  expect:           <| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>\\n  expect_evaluated: <|4 -> d, 1 -> a, 2 -> b, 3 -> c|>\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "<|4 -> d, 1 -> a, 2 -> b, 3 -> c|>",
                    "expected": "<| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>"
                }
            },
            {
                "title": "e = f[a, b, c]; PrependTo[e, x + y]    ➡️     f[x + y, a, b, c]",
                "fullTitle": "e = f[a, b, c]; PrependTo[e, x + y]    ➡️     f[x + y, a, b, c]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7ff14fd8-be9c-45f1-afa0-1052ddfbf9c6",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use a head other than RefLink[List,paclet:ref/List]:\\n\\n\\ndata: \\n  got:              f[<|4 -> d + y, 1 -> a + y, 2 -> b + y, 3 -> c + y|>, a, b, c]\\n  expect:           f[x + y, a, b, c]\\n  expect_evaluated: f[<|4 -> d + y, 1 -> a + y, 2 -> b + y, 3 -> c + y|>, a, b, c]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[<|4 -> d + y, 1 -> a + y, 2 -> b + y, 3 -> c + y|>, a, b, c]",
                    "expected": "f[x + y, a, b, c]"
                }
            },
            {
                "title": "HoldComplete[s = SparseArray[{{i_, i_} -> i}, 3]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[s = SparseArray[{{i_, i_} -> i}, 3]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "47964b6b-fb83-4a96-ad76-a9a1c3d6bed7",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": true,
                "isHook": false,
                "context": "\"# This assigns s to a sparse matrix:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[PrependTo[s, {1, 2, 3}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[PrependTo[s, {1, 2, 3}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5b8c59b7-1167-4e25-8d6a-bc3d924720ec",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": true,
                "isHook": false,
                "context": "\"# Add a row to the top of the matrix:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PrependTo[s, {4, 5}]    ➡️     {{4, 5}, {1, 2, 3}, {1, 0, 0}, {0, 2, 0}, {0, 0, 3}}",
                "fullTitle": "PrependTo[s, {4, 5}]    ➡️     {{4, 5}, {1, 2, 3}, {1, 0, 0}, {0, 2, 0}, {0, 0, 3}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "76e4493b-01ca-4236-a8f9-52149a4cd023",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": false,
                "isHook": false,
                "context": "\"# Prepending an element with inconsistent dimensions requires converting to ordinary lists:\\n\"",
                "state": "failed",
                "err": {}
            },
            {
                "title": "PrependTo[m, {1, 2}]    ➡️     {{1, 2}, {a, b}, {c, d}}",
                "fullTitle": "PrependTo[m, {1, 2}]    ➡️     {{1, 2}, {a, b}, {c, d}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "07a6e59a-f4d2-4be7-a257-e63fa0c56459",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": true,
                "isHook": false,
                "context": "\"# Prepend a row to m:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "col = {3, 4, 5}; Table[PrependTo[m[[i]], col[[i]]], {i, 3}]    ➡️     {{3, 1, 2}, {4, a, b}, {5, c, d}}",
                "fullTitle": "col = {3, 4, 5}; Table[PrependTo[m[[i]], col[[i]]], {i, 3}]    ➡️     {{3, 1, 2}, {4, a, b}, {5, c, d}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "782c906c-c68c-44a5-bd4f-026405d32bc6",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": true,
                "isHook": false,
                "context": "\"# Prepend a column to m:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "m    ➡️     {{3, 1, 2}, {4, a, b}, {5, c, d}}",
                "fullTitle": "m    ➡️     {{3, 1, 2}, {4, a, b}, {5, c, d}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "915fd07c-9817-4d64-998d-5f979c65cc25",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": true,
                "isHook": false,
                "context": "\"# m is now a 3*3 matrix:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PrependTo[{1, 2}, 3]    ➡️     PrependTo[{1, 2}, 3]",
                "fullTitle": "PrependTo[{1, 2}, 3]    ➡️     PrependTo[{1, 2}, 3]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e3af67d0-aae5-41af-b3f5-e427ecd1677d",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": false,
                "isHook": false,
                "context": "\"# The first argument must be a variable:\\n\\n\\ndata: \\n  got:              PrependTo[{1, 2}, 3]\\n  expect:           PrependTo[{1, 2}, 3]\\n  expect_evaluated: PrependTo[{1, 2}, 3]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "PrependTo[{1, 2}, 3]",
                    "expected": "PrependTo[{1, 2}, 3]"
                }
            },
            {
                "title": "PrependTo[k, 2]    ➡️     PrependTo[k, 2]",
                "fullTitle": "PrependTo[k, 2]    ➡️     PrependTo[k, 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "17673579-5ada-425f-b8d3-2fa24ecb5973",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": false,
                "isHook": false,
                "context": "\"# The first argument must be a variable with a value:\\n\\n\\ndata: \\n  got:              PrependTo[k, 2]\\n  expect:           PrependTo[k, 2]\\n  expect_evaluated: PrependTo[k, 2]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "PrependTo[k, 2]",
                    "expected": "PrependTo[k, 2]"
                }
            },
            {
                "title": "k = 1; PrependTo[k, 2]    ➡️     PrependTo[k, 2]",
                "fullTitle": "k = 1; PrependTo[k, 2]    ➡️     PrependTo[k, 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "eccb6c6d-55c9-48fb-b0ad-378864998fc7",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": false,
                "isHook": false,
                "context": "\"# The first argument must be assigned to something which can be prepended to:\\n\\n\\ndata: \\n  got:              PrependTo[k, 2]\\n  expect:           PrependTo[k, 2]\\n  expect_evaluated: PrependTo[k, 2]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "PrependTo[k, 2]",
                    "expected": "PrependTo[k, 2]"
                }
            },
            {
                "title": "AtomQ[k]    ➡️     True",
                "fullTitle": "AtomQ[k]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "13213325-2e21-4019-af10-9fd679c6c59e",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": false,
                "isHook": false,
                "context": "\"# Something for which RefLink[AtomQ,paclet:ref/AtomQ] is RefLink[True,paclet:ref/True] cannot be prepended to:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "BlockRandom[Timing[a = {}; sum = 0; While[sum < 10^4, r = RandomReal[]; sum += r; PrependTo[a, r]]; Length[a]]]    ➡️     {18.227, 20069}",
                "fullTitle": "BlockRandom[Timing[a = {}; sum = 0; While[sum < 10^4, r = RandomReal[]; sum += r; PrependTo[a, r]]; Length[a]]]    ➡️     {18.227, 20069}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "446f88a3-a8a8-4b59-b296-0be6c69cd38f",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": true,
                "isHook": false,
                "context": "\"# Using RefLink[PrependTo,paclet:ref/PrependTo] to accumulate values in large loops can be slow:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "BlockRandom[Timing[sum = 0; {r, {a}} = Reap[While[sum < 10^4, r = RandomReal[]; sum += r; Sow[r]]]; a = Reverse[a]; Length[a]]]    ➡️     {0.27, 20069}",
                "fullTitle": "BlockRandom[Timing[sum = 0; {r, {a}} = Reap[While[sum < 10^4, r = RandomReal[]; sum += r; Sow[r]]]; a = Reverse[a]; Length[a]]]    ➡️     {0.27, 20069}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f941514b-8a35-4316-b496-1cde777c8c57",
                "parentUUID": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
                "skipped": true,
                "isHook": false,
                "context": "\"# There are many alternatives, such as using RefLink[Reap,paclet:ref/Reap] and RefLink[Sow,paclet:ref/Sow]:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "cda99bcc-e80f-45db-9a9e-870ee87fda73",
            "a5a184b7-271b-4be9-a1c7-57537b718228",
            "b7de2102-5c05-4258-970e-e82690e4681a",
            "49fead89-cb39-470f-bc17-55252bff691d",
            "36a1fc54-7c12-4879-8b2d-9a1490ca6f02",
            "fa8adbc5-aa6a-495f-955f-c2357f2c3d3e",
            "7ff14fd8-be9c-45f1-afa0-1052ddfbf9c6",
            "47964b6b-fb83-4a96-ad76-a9a1c3d6bed7",
            "5b8c59b7-1167-4e25-8d6a-bc3d924720ec",
            "07a6e59a-f4d2-4be7-a257-e63fa0c56459",
            "782c906c-c68c-44a5-bd4f-026405d32bc6",
            "915fd07c-9817-4d64-998d-5f979c65cc25",
            "e3af67d0-aae5-41af-b3f5-e427ecd1677d",
            "17673579-5ada-425f-b8d3-2fa24ecb5973",
            "eccb6c6d-55c9-48fb-b0ad-378864998fc7",
            "13213325-2e21-4019-af10-9fd679c6c59e",
            "446f88a3-a8a8-4b59-b296-0be6c69cd38f",
            "f941514b-8a35-4316-b496-1cde777c8c57"
        ],
        "failures": [
            "76e4493b-01ca-4236-a8f9-52149a4cd023"
        ],
        "skipped": [
            "47964b6b-fb83-4a96-ad76-a9a1c3d6bed7",
            "5b8c59b7-1167-4e25-8d6a-bc3d924720ec",
            "07a6e59a-f4d2-4be7-a257-e63fa0c56459",
            "782c906c-c68c-44a5-bd4f-026405d32bc6",
            "915fd07c-9817-4d64-998d-5f979c65cc25",
            "446f88a3-a8a8-4b59-b296-0be6c69cd38f",
            "f941514b-8a35-4316-b496-1cde777c8c57"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "3a902ac8-5c6d-4aee-9730-6623b2f521b4",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
