{
    "stats": {
        "suites": 0,
        "tests": 19,
        "passes": 18,
        "pending": 0,
        "failures": 1,
        "start": "2018-06-03T12:20:54.257Z",
        "end": "2018-06-03T12:20:54.257Z",
        "duration": 0,
        "testsRegistered": 19,
        "passPercent": 94.73684210526315,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "l = {1, 2, 4, 9}    ➡️     {1, 2, 4, 9}",
                "fullTitle": "l = {1, 2, 4, 9}    ➡️     {1, 2, 4, 9}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7c9413ec-1a35-4fa5-939a-5a2ee251251f",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/PrependTo_Tests.m\\n#! TextForm[ColonForm[MessageName[PrependTo, rvalue], StringForm[`1` is not a variable with a value, so its value cannot be changed., Short[HoldForm[s], 3]]]]\\n#! TextForm[ColonForm[MessageName[PrependTo, rvalue], StringForm[`1` is not a variable with a value, so its value cannot be changed., Short[HoldForm[{1, 2}], 3]]]]\\n#! TextForm[ColonForm[MessageName[PrependTo, rvalue], StringForm[`1` is not a variable with a value, so its value cannot be changed., Short[HoldForm[{1, 2}], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[PrependTo, rvalue]], 3]]]]\\n#! TextForm[ColonForm[MessageName[PrependTo, normal], StringForm[Nonatomic expression expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[PrependTo[k, 2]], 3]]]]\\n#! TextForm[ColonForm[MessageName[PrependTo, normal], StringForm[Nonatomic expression expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[PrependTo[k, 2]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: PrependTo_Tests\\n# Assign l to a list:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect: \\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect_evaluated: \\n    1: null\\n    2: null\\n    4: null\\n    9: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    }
                }
            },
            {
                "title": "PrependTo[l, 0]    ➡️     {0, 1, 2, 4, 9}",
                "fullTitle": "PrependTo[l, 0]    ➡️     {0, 1, 2, 4, 9}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "75ba1227-4ff4-49d5-bdfd-7848d5939e5c",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Include a new value at the beginning of the list:\\n\\n\\ndata: \\n  got: \\n    0: null\\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect: \\n    0: null\\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect_evaluated: \\n    0: null\\n    1: null\\n    2: null\\n    4: null\\n    9: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "0": null,
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    },
                    "expected": {
                        "0": null,
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    }
                }
            },
            {
                "title": "l    ➡️     {0, 1, 2, 4, 9}",
                "fullTitle": "l    ➡️     {0, 1, 2, 4, 9}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "be393da9-309c-482c-b5dc-192ff88a1a55",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": false,
                "isHook": false,
                "context": "\"# The value assigned to l has changed:\\n\\n\\ndata: \\n  got: \\n    0: null\\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect: \\n    0: null\\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect_evaluated: \\n    0: null\\n    1: null\\n    2: null\\n    4: null\\n    9: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "0": null,
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    },
                    "expected": {
                        "0": null,
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    }
                }
            },
            {
                "title": "x = <| 1 -> a, 2 -> b |>    ➡️     <| 1 -> a, 2 -> b |>",
                "fullTitle": "x = <| 1 -> a, 2 -> b |>    ➡️     <| 1 -> a, 2 -> b |>",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "99ecbd92-fd90-45f6-840b-79f26d488d47",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Prepend to an RefLink[Association,paclet:ref/Association]:\\n\\n\\ndata: \\n  got:              <|1 -> a, 2 -> b|>\\n  expect:           <| 1 -> a, 2 -> b |>\\n  expect_evaluated: <|1 -> a, 2 -> b|>\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "<|1 -> a, 2 -> b|>",
                    "expected": "<| 1 -> a, 2 -> b |>"
                }
            },
            {
                "title": "AppendTo[x, 3 -> c]    ➡️     <| 1 -> a, 2 -> b, 3 -> c |>",
                "fullTitle": "AppendTo[x, 3 -> c]    ➡️     <| 1 -> a, 2 -> b, 3 -> c |>",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9a12308e-f7ff-4d41-9a78-39e785ddd586",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              <|1 -> a, 2 -> b, 3 -> c|>\\n  expect:           <| 1 -> a, 2 -> b, 3 -> c |>\\n  expect_evaluated: <|1 -> a, 2 -> b, 3 -> c|>\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "<|1 -> a, 2 -> b, 3 -> c|>",
                    "expected": "<| 1 -> a, 2 -> b, 3 -> c |>"
                }
            },
            {
                "title": "PrependTo[x, 4 -> d]    ➡️     <| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>",
                "fullTitle": "PrependTo[x, 4 -> d]    ➡️     <| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1f4e9cc4-5111-4bc6-9532-6bf474eeecb2",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              <|4 -> d, 1 -> a, 2 -> b, 3 -> c|>\\n  expect:           <| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>\\n  expect_evaluated: <|4 -> d, 1 -> a, 2 -> b, 3 -> c|>\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "<|4 -> d, 1 -> a, 2 -> b, 3 -> c|>",
                    "expected": "<| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>"
                }
            },
            {
                "title": "e = f[a, b, c]; PrependTo[e, x + y]    ➡️     f[x + y, a, b, c]",
                "fullTitle": "e = f[a, b, c]; PrependTo[e, x + y]    ➡️     f[x + y, a, b, c]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d55a8799-70b6-469c-b1e1-58e53ea384f8",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use a head other than RefLink[List,paclet:ref/List]:\\n\\n\\ndata: \\n  got:              f[<|4 -> d + y, 1 -> a + y, 2 -> b + y, 3 -> c + y|>, a, b, c]\\n  expect:           f[x + y, a, b, c]\\n  expect_evaluated: f[<|4 -> d + y, 1 -> a + y, 2 -> b + y, 3 -> c + y|>, a, b, c]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[<|4 -> d + y, 1 -> a + y, 2 -> b + y, 3 -> c + y|>, a, b, c]",
                    "expected": "f[x + y, a, b, c]"
                }
            },
            {
                "title": "HoldComplete[s = SparseArray[{{i_, i_} -> i}, 3]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[s = SparseArray[{{i_, i_} -> i}, 3]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1fc7c25b-68d8-4a4e-a37a-f11c1488860d",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": true,
                "isHook": false,
                "context": "\"# This assigns s to a sparse matrix:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[PrependTo[s, {1, 2, 3}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[PrependTo[s, {1, 2, 3}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "030351a9-1091-485e-9bd0-439ff5684e6b",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": true,
                "isHook": false,
                "context": "\"# Add a row to the top of the matrix:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PrependTo[s, {4, 5}]    ➡️     {{4, 5}, {1, 2, 3}, {1, 0, 0}, {0, 2, 0}, {0, 0, 3}}",
                "fullTitle": "PrependTo[s, {4, 5}]    ➡️     {{4, 5}, {1, 2, 3}, {1, 0, 0}, {0, 2, 0}, {0, 0, 3}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9d6f73d2-90af-48f2-aa9a-ea20cc3f18cd",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Prepending an element with inconsistent dimensions requires converting to ordinary lists:\\n\"",
                "state": "failed",
                "err": {}
            },
            {
                "title": "PrependTo[m, {1, 2}]    ➡️     {{1, 2}, {a, b}, {c, d}}",
                "fullTitle": "PrependTo[m, {1, 2}]    ➡️     {{1, 2}, {a, b}, {c, d}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f45a8954-f890-433c-a6dd-a119d015b530",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": true,
                "isHook": false,
                "context": "\"# Prepend a row to m:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "col = {3, 4, 5}; Table[PrependTo[m[[i]], col[[i]]], {i, 3}]    ➡️     {{3, 1, 2}, {4, a, b}, {5, c, d}}",
                "fullTitle": "col = {3, 4, 5}; Table[PrependTo[m[[i]], col[[i]]], {i, 3}]    ➡️     {{3, 1, 2}, {4, a, b}, {5, c, d}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "158d0f66-9244-4ba8-9805-0085dea7adf9",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": true,
                "isHook": false,
                "context": "\"# Prepend a column to m:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "m    ➡️     {{3, 1, 2}, {4, a, b}, {5, c, d}}",
                "fullTitle": "m    ➡️     {{3, 1, 2}, {4, a, b}, {5, c, d}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "168e0d45-1767-4a06-a2a3-f199da051711",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": true,
                "isHook": false,
                "context": "\"# m is now a 3*3 matrix:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PrependTo[{1, 2}, 3]    ➡️     PrependTo[{1, 2}, 3]",
                "fullTitle": "PrependTo[{1, 2}, 3]    ➡️     PrependTo[{1, 2}, 3]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cca25831-6ac9-424f-9516-068d97953221",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": false,
                "isHook": false,
                "context": "\"# The first argument must be a variable:\\n\\n\\ndata: \\n  got:              PrependTo[{1, 2}, 3]\\n  expect:           PrependTo[{1, 2}, 3]\\n  expect_evaluated: PrependTo[{1, 2}, 3]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "PrependTo[{1, 2}, 3]",
                    "expected": "PrependTo[{1, 2}, 3]"
                }
            },
            {
                "title": "PrependTo[k, 2]    ➡️     PrependTo[k, 2]",
                "fullTitle": "PrependTo[k, 2]    ➡️     PrependTo[k, 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "13881cc3-920c-45d2-b774-6da3a21d6024",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": false,
                "isHook": false,
                "context": "\"# The first argument must be a variable with a value:\\n\\n\\ndata: \\n  got:              PrependTo[k, 2]\\n  expect:           PrependTo[k, 2]\\n  expect_evaluated: PrependTo[k, 2]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "PrependTo[k, 2]",
                    "expected": "PrependTo[k, 2]"
                }
            },
            {
                "title": "k = 1; PrependTo[k, 2]    ➡️     PrependTo[k, 2]",
                "fullTitle": "k = 1; PrependTo[k, 2]    ➡️     PrependTo[k, 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6a821528-6f50-4cee-b41c-9437743622c5",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": false,
                "isHook": false,
                "context": "\"# The first argument must be assigned to something which can be prepended to:\\n\\n\\ndata: \\n  got:              PrependTo[k, 2]\\n  expect:           PrependTo[k, 2]\\n  expect_evaluated: PrependTo[k, 2]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "PrependTo[k, 2]",
                    "expected": "PrependTo[k, 2]"
                }
            },
            {
                "title": "AtomQ[k]    ➡️     True",
                "fullTitle": "AtomQ[k]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "396262cd-e1b2-4539-ba24-b27e07645e24",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Something for which RefLink[AtomQ,paclet:ref/AtomQ] is RefLink[True,paclet:ref/True] cannot be prepended to:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "BlockRandom[Timing[a = {}; sum = 0; While[sum < 10^4, r = RandomReal[]; sum += r; PrependTo[a, r]]; Length[a]]]    ➡️     {18.227, 20069}",
                "fullTitle": "BlockRandom[Timing[a = {}; sum = 0; While[sum < 10^4, r = RandomReal[]; sum += r; PrependTo[a, r]]; Length[a]]]    ➡️     {18.227, 20069}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bba7bd17-d2b8-4e33-b7eb-9d92d632271e",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": true,
                "isHook": false,
                "context": "\"# Using RefLink[PrependTo,paclet:ref/PrependTo] to accumulate values in large loops can be slow:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "BlockRandom[Timing[sum = 0; {r, {a}} = Reap[While[sum < 10^4, r = RandomReal[]; sum += r; Sow[r]]]; a = Reverse[a]; Length[a]]]    ➡️     {0.27, 20069}",
                "fullTitle": "BlockRandom[Timing[sum = 0; {r, {a}} = Reap[While[sum < 10^4, r = RandomReal[]; sum += r; Sow[r]]]; a = Reverse[a]; Length[a]]]    ➡️     {0.27, 20069}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "48ed312c-6ffc-4d9d-9af5-3ec74733acf4",
                "parentUUID": "213da14c-2fa8-46f9-8ba6-649403f6092d",
                "skipped": true,
                "isHook": false,
                "context": "\"# There are many alternatives, such as using RefLink[Reap,paclet:ref/Reap] and RefLink[Sow,paclet:ref/Sow]:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "7c9413ec-1a35-4fa5-939a-5a2ee251251f",
            "75ba1227-4ff4-49d5-bdfd-7848d5939e5c",
            "be393da9-309c-482c-b5dc-192ff88a1a55",
            "99ecbd92-fd90-45f6-840b-79f26d488d47",
            "9a12308e-f7ff-4d41-9a78-39e785ddd586",
            "1f4e9cc4-5111-4bc6-9532-6bf474eeecb2",
            "d55a8799-70b6-469c-b1e1-58e53ea384f8",
            "1fc7c25b-68d8-4a4e-a37a-f11c1488860d",
            "030351a9-1091-485e-9bd0-439ff5684e6b",
            "f45a8954-f890-433c-a6dd-a119d015b530",
            "158d0f66-9244-4ba8-9805-0085dea7adf9",
            "168e0d45-1767-4a06-a2a3-f199da051711",
            "cca25831-6ac9-424f-9516-068d97953221",
            "13881cc3-920c-45d2-b774-6da3a21d6024",
            "6a821528-6f50-4cee-b41c-9437743622c5",
            "396262cd-e1b2-4539-ba24-b27e07645e24",
            "bba7bd17-d2b8-4e33-b7eb-9d92d632271e",
            "48ed312c-6ffc-4d9d-9af5-3ec74733acf4"
        ],
        "failures": [
            "9d6f73d2-90af-48f2-aa9a-ea20cc3f18cd"
        ],
        "skipped": [
            "1fc7c25b-68d8-4a4e-a37a-f11c1488860d",
            "030351a9-1091-485e-9bd0-439ff5684e6b",
            "f45a8954-f890-433c-a6dd-a119d015b530",
            "158d0f66-9244-4ba8-9805-0085dea7adf9",
            "168e0d45-1767-4a06-a2a3-f199da051711",
            "bba7bd17-d2b8-4e33-b7eb-9d92d632271e",
            "48ed312c-6ffc-4d9d-9af5-3ec74733acf4"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "213da14c-2fa8-46f9-8ba6-649403f6092d",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
