{
    "stats": {
        "suites": 0,
        "tests": 19,
        "passes": 18,
        "pending": 0,
        "failures": 1,
        "start": "2018-06-03T23:01:27.575Z",
        "end": "2018-06-03T23:01:27.575Z",
        "duration": 0,
        "testsRegistered": 19,
        "passPercent": 94.73684210526315,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "l = {1, 2, 4, 9}    ➡️     {1, 2, 4, 9}",
                "fullTitle": "l = {1, 2, 4, 9}    ➡️     {1, 2, 4, 9}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b6cd9f04-9446-4f8f-b3dd-5330235d8f45",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/AppendTo_Tests.m\\n#! TextForm[ColonForm[MessageName[AppendTo, rvalue], StringForm[`1` is not a variable with a value, so its value cannot be changed., Short[HoldForm[s], 3]]]]\\n#! TextForm[ColonForm[MessageName[AppendTo, rvalue], StringForm[`1` is not a variable with a value, so its value cannot be changed., Short[HoldForm[{1, 2}], 3]]]]\\n#! TextForm[ColonForm[MessageName[AppendTo, rvalue], StringForm[`1` is not a variable with a value, so its value cannot be changed., Short[HoldForm[{1, 2}], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[AppendTo, rvalue]], 3]]]]\\n#! TextForm[ColonForm[MessageName[AppendTo, normal], StringForm[Nonatomic expression expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[AppendTo[k, 2]], 3]]]]\\n#! TextForm[ColonForm[MessageName[AppendTo, normal], StringForm[Nonatomic expression expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[AppendTo[k, 2]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: AppendTo_Tests\\n# Assign l to a list:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect: \\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect_evaluated: \\n    1: null\\n    2: null\\n    4: null\\n    9: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    }
                }
            },
            {
                "title": "AppendTo[l, 16]    ➡️     {1, 2, 4, 9, 16}",
                "fullTitle": "AppendTo[l, 16]    ➡️     {1, 2, 4, 9, 16}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e3413234-6d74-4fc8-8ab4-7305975e0123",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Include a new value at the end of the list:\\n\\n\\ndata: \\n  got: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\\n  expect: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\\n  expect_evaluated: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null,
                        "16": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null,
                        "16": null
                    }
                }
            },
            {
                "title": "l    ➡️     {1, 2, 4, 9, 16}",
                "fullTitle": "l    ➡️     {1, 2, 4, 9, 16}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "79501b65-24d5-45cc-b40d-2a02343e1ae8",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": false,
                "isHook": false,
                "context": "\"# The value assigned to l has changed:\\n\\n\\ndata: \\n  got: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\\n  expect: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\\n  expect_evaluated: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null,
                        "16": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null,
                        "16": null
                    }
                }
            },
            {
                "title": "x = <| 1 -> a, 2 -> b |>    ➡️     <| 1 -> a, 2 -> b |>",
                "fullTitle": "x = <| 1 -> a, 2 -> b |>    ➡️     <| 1 -> a, 2 -> b |>",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "47deaf6e-593d-4045-9564-71a0e79fe886",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Append to an RefLink[Association,paclet:ref/Association]:\\n\\n\\ndata: \\n  got:              <|1 -> a, 2 -> b|>\\n  expect:           <| 1 -> a, 2 -> b |>\\n  expect_evaluated: <|1 -> a, 2 -> b|>\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "<|1 -> a, 2 -> b|>",
                    "expected": "<| 1 -> a, 2 -> b |>"
                }
            },
            {
                "title": "AppendTo[x, 3 -> c]    ➡️     <| 1 -> a, 2 -> b, 3 -> c |>",
                "fullTitle": "AppendTo[x, 3 -> c]    ➡️     <| 1 -> a, 2 -> b, 3 -> c |>",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1960bab4-ad8d-4a43-920e-49fec26eaba8",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              <|1 -> a, 2 -> b, 3 -> c|>\\n  expect:           <| 1 -> a, 2 -> b, 3 -> c |>\\n  expect_evaluated: <|1 -> a, 2 -> b, 3 -> c|>\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "<|1 -> a, 2 -> b, 3 -> c|>",
                    "expected": "<| 1 -> a, 2 -> b, 3 -> c |>"
                }
            },
            {
                "title": "PrependTo[x, 4 -> d]    ➡️     <| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>",
                "fullTitle": "PrependTo[x, 4 -> d]    ➡️     <| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4f485d64-4302-4ee6-b375-e079be13d07c",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              <|4 -> d, 1 -> a, 2 -> b, 3 -> c|>\\n  expect:           <| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>\\n  expect_evaluated: <|4 -> d, 1 -> a, 2 -> b, 3 -> c|>\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "<|4 -> d, 1 -> a, 2 -> b, 3 -> c|>",
                    "expected": "<| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>"
                }
            },
            {
                "title": "e = f[a, b, c]; AppendTo[e, x + y]    ➡️     f[a, b, c, x + y]",
                "fullTitle": "e = f[a, b, c]; AppendTo[e, x + y]    ➡️     f[a, b, c, x + y]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "137e049a-51d1-483b-bfaa-3b1ef89c0a08",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use a head other than RefLink[List,paclet:ref/List]:\\n\\n\\ndata: \\n  got:              f[a, b, c, <|4 -> d + y, 1 -> a + y, 2 -> b + y, 3 -> c + y|>]\\n  expect:           f[a, b, c, x + y]\\n  expect_evaluated: f[a, b, c, <|4 -> d + y, 1 -> a + y, 2 -> b + y, 3 -> c + y|>]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[a, b, c, <|4 -> d + y, 1 -> a + y, 2 -> b + y, 3 -> c + y|>]",
                    "expected": "f[a, b, c, x + y]"
                }
            },
            {
                "title": "HoldComplete[s = SparseArray[{{i_, i_} -> i}, 3]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[s = SparseArray[{{i_, i_} -> i}, 3]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e1636638-ac11-4934-a0c0-fe697297f4e7",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": true,
                "isHook": false,
                "context": "\"# This assigns s to a sparse matrix:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[AppendTo[s, {1, 2, 3}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[AppendTo[s, {1, 2, 3}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8fcf8290-a831-4f02-a62c-b9315a083175",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": true,
                "isHook": false,
                "context": "\"# Add a row to the matrix:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "AppendTo[s, {4, 5}]    ➡️     {{1, 0, 0}, {0, 2, 0}, {0, 0, 3}, {1, 2, 3}, {4, 5}}",
                "fullTitle": "AppendTo[s, {4, 5}]    ➡️     {{1, 0, 0}, {0, 2, 0}, {0, 0, 3}, {1, 2, 3}, {4, 5}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b1cda4c8-65a8-47f4-86e8-b7c832434f4a",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Appending an element with inconsistent dimensions requires converting to ordinary lists:\\n\"",
                "state": "failed",
                "err": {}
            },
            {
                "title": "AppendTo[m, {e, f}]    ➡️     {{a, b}, {c, d}, {e, f}}",
                "fullTitle": "AppendTo[m, {e, f}]    ➡️     {{a, b}, {c, d}, {e, f}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fe8f423f-bf97-41d6-802e-10376713db3f",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": true,
                "isHook": false,
                "context": "\"# Append a row to m:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "col = {x, y, z}; Table[AppendTo[m[[i]], col[[i]]], {i, 3}]    ➡️     {{a, b, x}, {c, d, y}, {e, f, z}}",
                "fullTitle": "col = {x, y, z}; Table[AppendTo[m[[i]], col[[i]]], {i, 3}]    ➡️     {{a, b, x}, {c, d, y}, {e, f, z}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8521e45b-2093-4218-8752-a1e0919cefd0",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": true,
                "isHook": false,
                "context": "\"# Append a column to m:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "m    ➡️     {{a, b, x}, {c, d, y}, {e, f, z}}",
                "fullTitle": "m    ➡️     {{a, b, x}, {c, d, y}, {e, f, z}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "29771b1a-ab7d-4e3c-97e8-92bfc7079dcf",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": true,
                "isHook": false,
                "context": "\"# m is now a 3*3 matrix:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "AppendTo[{1, 2}, 3]    ➡️     AppendTo[{1, 2}, 3]",
                "fullTitle": "AppendTo[{1, 2}, 3]    ➡️     AppendTo[{1, 2}, 3]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ce8d73b1-3aca-481a-ada5-c4ed0b874434",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": false,
                "isHook": false,
                "context": "\"# The first argument must be a variable:\\n\\n\\ndata: \\n  got:              AppendTo[{1, 2}, 3]\\n  expect:           AppendTo[{1, 2}, 3]\\n  expect_evaluated: AppendTo[{1, 2}, 3]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "AppendTo[{1, 2}, 3]",
                    "expected": "AppendTo[{1, 2}, 3]"
                }
            },
            {
                "title": "AppendTo[k, 2]    ➡️     AppendTo[k, 2]",
                "fullTitle": "AppendTo[k, 2]    ➡️     AppendTo[k, 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4b621b57-b3c2-4554-b051-601fa1eed07b",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": false,
                "isHook": false,
                "context": "\"# The first argument must be a variable with a value:\\n\\n\\ndata: \\n  got:              AppendTo[k, 2]\\n  expect:           AppendTo[k, 2]\\n  expect_evaluated: AppendTo[k, 2]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "AppendTo[k, 2]",
                    "expected": "AppendTo[k, 2]"
                }
            },
            {
                "title": "k = 1; AppendTo[k, 2]    ➡️     AppendTo[k, 2]",
                "fullTitle": "k = 1; AppendTo[k, 2]    ➡️     AppendTo[k, 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e964a61e-1a13-4e41-86b6-f6f8d96934cc",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": false,
                "isHook": false,
                "context": "\"# The first argument must be assigned to something which can be appended to:\\n\\n\\ndata: \\n  got:              AppendTo[k, 2]\\n  expect:           AppendTo[k, 2]\\n  expect_evaluated: AppendTo[k, 2]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "AppendTo[k, 2]",
                    "expected": "AppendTo[k, 2]"
                }
            },
            {
                "title": "AtomQ[k]    ➡️     True",
                "fullTitle": "AtomQ[k]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d3b6b8f4-aaf8-4c66-984c-b3457259290b",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Something for which  RefLink[AtomQ,paclet:ref/AtomQ] is RefLink[True,paclet:ref/True] cannot be appended to:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "BlockRandom[Timing[a = {}; sum = 0; While[sum < 10^5, r = RandomInteger[9]; sum += r; AppendTo[a, r]]; Length[a]]]    ➡️     {3.425, 22250}",
                "fullTitle": "BlockRandom[Timing[a = {}; sum = 0; While[sum < 10^5, r = RandomInteger[9]; sum += r; AppendTo[a, r]]; Length[a]]]    ➡️     {3.425, 22250}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fa548faa-6798-4680-a49b-800e2d7b7c43",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": true,
                "isHook": false,
                "context": "\"# Using RefLink[AppendTo,paclet:ref/AppendTo] to accumulate values in large loops can be slow:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "BlockRandom[Timing[sum = 0; {r, {a}} = Reap[While[sum < 10^5, r = RandomInteger[9]; sum += r; Sow[r]]]; Length[a]]]    ➡️     {0.27, 22250}",
                "fullTitle": "BlockRandom[Timing[sum = 0; {r, {a}} = Reap[While[sum < 10^5, r = RandomInteger[9]; sum += r; Sow[r]]]; Length[a]]]    ➡️     {0.27, 22250}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "23059f38-c8db-4d3f-a300-5058ea3227b9",
                "parentUUID": "f5e10a84-1013-42d8-9346-800726cb071d",
                "skipped": true,
                "isHook": false,
                "context": "\"# There are many alternatives, such as using RefLink[Reap,paclet:ref/Reap] and RefLink[Sow,paclet:ref/Sow]:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "b6cd9f04-9446-4f8f-b3dd-5330235d8f45",
            "e3413234-6d74-4fc8-8ab4-7305975e0123",
            "79501b65-24d5-45cc-b40d-2a02343e1ae8",
            "47deaf6e-593d-4045-9564-71a0e79fe886",
            "1960bab4-ad8d-4a43-920e-49fec26eaba8",
            "4f485d64-4302-4ee6-b375-e079be13d07c",
            "137e049a-51d1-483b-bfaa-3b1ef89c0a08",
            "e1636638-ac11-4934-a0c0-fe697297f4e7",
            "8fcf8290-a831-4f02-a62c-b9315a083175",
            "fe8f423f-bf97-41d6-802e-10376713db3f",
            "8521e45b-2093-4218-8752-a1e0919cefd0",
            "29771b1a-ab7d-4e3c-97e8-92bfc7079dcf",
            "ce8d73b1-3aca-481a-ada5-c4ed0b874434",
            "4b621b57-b3c2-4554-b051-601fa1eed07b",
            "e964a61e-1a13-4e41-86b6-f6f8d96934cc",
            "d3b6b8f4-aaf8-4c66-984c-b3457259290b",
            "fa548faa-6798-4680-a49b-800e2d7b7c43",
            "23059f38-c8db-4d3f-a300-5058ea3227b9"
        ],
        "failures": [
            "b1cda4c8-65a8-47f4-86e8-b7c832434f4a"
        ],
        "skipped": [
            "e1636638-ac11-4934-a0c0-fe697297f4e7",
            "8fcf8290-a831-4f02-a62c-b9315a083175",
            "fe8f423f-bf97-41d6-802e-10376713db3f",
            "8521e45b-2093-4218-8752-a1e0919cefd0",
            "29771b1a-ab7d-4e3c-97e8-92bfc7079dcf",
            "fa548faa-6798-4680-a49b-800e2d7b7c43",
            "23059f38-c8db-4d3f-a300-5058ea3227b9"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "f5e10a84-1013-42d8-9346-800726cb071d",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
