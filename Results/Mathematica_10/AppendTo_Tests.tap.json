{
    "stats": {
        "suites": 0,
        "tests": 19,
        "passes": 18,
        "pending": 0,
        "failures": 1,
        "start": "2018-06-03T12:20:07.853Z",
        "end": "2018-06-03T12:20:07.853Z",
        "duration": 0,
        "testsRegistered": 19,
        "passPercent": 94.73684210526315,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "l = {1, 2, 4, 9}    ➡️     {1, 2, 4, 9}",
                "fullTitle": "l = {1, 2, 4, 9}    ➡️     {1, 2, 4, 9}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8ca790d5-4bd7-4ef1-82d6-5a1407d95610",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/AppendTo_Tests.m\\n#! TextForm[ColonForm[MessageName[AppendTo, rvalue], StringForm[`1` is not a variable with a value, so its value cannot be changed., Short[HoldForm[s], 3]]]]\\n#! TextForm[ColonForm[MessageName[AppendTo, rvalue], StringForm[`1` is not a variable with a value, so its value cannot be changed., Short[HoldForm[{1, 2}], 3]]]]\\n#! TextForm[ColonForm[MessageName[AppendTo, rvalue], StringForm[`1` is not a variable with a value, so its value cannot be changed., Short[HoldForm[{1, 2}], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[AppendTo, rvalue]], 3]]]]\\n#! TextForm[ColonForm[MessageName[AppendTo, normal], StringForm[Nonatomic expression expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[AppendTo[k, 2]], 3]]]]\\n#! TextForm[ColonForm[MessageName[AppendTo, normal], StringForm[Nonatomic expression expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[AppendTo[k, 2]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: AppendTo_Tests\\n# Assign l to a list:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect: \\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect_evaluated: \\n    1: null\\n    2: null\\n    4: null\\n    9: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    }
                }
            },
            {
                "title": "AppendTo[l, 16]    ➡️     {1, 2, 4, 9, 16}",
                "fullTitle": "AppendTo[l, 16]    ➡️     {1, 2, 4, 9, 16}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4113c721-4e97-4772-9b19-10bd0680a901",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": false,
                "isHook": false,
                "context": "\"# Include a new value at the end of the list:\\n\\n\\ndata: \\n  got: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\\n  expect: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\\n  expect_evaluated: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null,
                        "16": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null,
                        "16": null
                    }
                }
            },
            {
                "title": "l    ➡️     {1, 2, 4, 9, 16}",
                "fullTitle": "l    ➡️     {1, 2, 4, 9, 16}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d4e7149c-93b1-44c9-9567-987a10d4e2b6",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": false,
                "isHook": false,
                "context": "\"# The value assigned to l has changed:\\n\\n\\ndata: \\n  got: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\\n  expect: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\\n  expect_evaluated: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null,
                        "16": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null,
                        "16": null
                    }
                }
            },
            {
                "title": "x = <| 1 -> a, 2 -> b |>    ➡️     <| 1 -> a, 2 -> b |>",
                "fullTitle": "x = <| 1 -> a, 2 -> b |>    ➡️     <| 1 -> a, 2 -> b |>",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9071bef3-1497-497c-9f14-c169a509d70a",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": false,
                "isHook": false,
                "context": "\"# Append to an RefLink[Association,paclet:ref/Association]:\\n\\n\\ndata: \\n  got:              <|1 -> a, 2 -> b|>\\n  expect:           <| 1 -> a, 2 -> b |>\\n  expect_evaluated: <|1 -> a, 2 -> b|>\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "<|1 -> a, 2 -> b|>",
                    "expected": "<| 1 -> a, 2 -> b |>"
                }
            },
            {
                "title": "AppendTo[x, 3 -> c]    ➡️     <| 1 -> a, 2 -> b, 3 -> c |>",
                "fullTitle": "AppendTo[x, 3 -> c]    ➡️     <| 1 -> a, 2 -> b, 3 -> c |>",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "514e6ddd-0cf1-4e03-87e3-0a36775f3de9",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              <|1 -> a, 2 -> b, 3 -> c|>\\n  expect:           <| 1 -> a, 2 -> b, 3 -> c |>\\n  expect_evaluated: <|1 -> a, 2 -> b, 3 -> c|>\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "<|1 -> a, 2 -> b, 3 -> c|>",
                    "expected": "<| 1 -> a, 2 -> b, 3 -> c |>"
                }
            },
            {
                "title": "PrependTo[x, 4 -> d]    ➡️     <| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>",
                "fullTitle": "PrependTo[x, 4 -> d]    ➡️     <| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1a1314ae-66a0-4291-ba4e-9d568513fc3b",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              <|4 -> d, 1 -> a, 2 -> b, 3 -> c|>\\n  expect:           <| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>\\n  expect_evaluated: <|4 -> d, 1 -> a, 2 -> b, 3 -> c|>\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "<|4 -> d, 1 -> a, 2 -> b, 3 -> c|>",
                    "expected": "<| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>"
                }
            },
            {
                "title": "e = f[a, b, c]; AppendTo[e, x + y]    ➡️     f[a, b, c, x + y]",
                "fullTitle": "e = f[a, b, c]; AppendTo[e, x + y]    ➡️     f[a, b, c, x + y]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "104e1efd-e9fb-49cc-8124-3374b962cf07",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use a head other than RefLink[List,paclet:ref/List]:\\n\\n\\ndata: \\n  got:              f[a, b, c, <|4 -> d + y, 1 -> a + y, 2 -> b + y, 3 -> c + y|>]\\n  expect:           f[a, b, c, x + y]\\n  expect_evaluated: f[a, b, c, <|4 -> d + y, 1 -> a + y, 2 -> b + y, 3 -> c + y|>]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[a, b, c, <|4 -> d + y, 1 -> a + y, 2 -> b + y, 3 -> c + y|>]",
                    "expected": "f[a, b, c, x + y]"
                }
            },
            {
                "title": "HoldComplete[s = SparseArray[{{i_, i_} -> i}, 3]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[s = SparseArray[{{i_, i_} -> i}, 3]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f8d47ede-a160-4262-95a7-e661174daa9a",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": true,
                "isHook": false,
                "context": "\"# This assigns s to a sparse matrix:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[AppendTo[s, {1, 2, 3}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[AppendTo[s, {1, 2, 3}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1b48b23e-03ce-4bae-97a4-5260d73cb2fa",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": true,
                "isHook": false,
                "context": "\"# Add a row to the matrix:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "AppendTo[s, {4, 5}]    ➡️     {{1, 0, 0}, {0, 2, 0}, {0, 0, 3}, {1, 2, 3}, {4, 5}}",
                "fullTitle": "AppendTo[s, {4, 5}]    ➡️     {{1, 0, 0}, {0, 2, 0}, {0, 0, 3}, {1, 2, 3}, {4, 5}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "521722e8-b9f4-4253-bfca-a7a148933887",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": false,
                "isHook": false,
                "context": "\"# Appending an element with inconsistent dimensions requires converting to ordinary lists:\\n\"",
                "state": "failed",
                "err": {}
            },
            {
                "title": "AppendTo[m, {e, f}]    ➡️     {{a, b}, {c, d}, {e, f}}",
                "fullTitle": "AppendTo[m, {e, f}]    ➡️     {{a, b}, {c, d}, {e, f}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9a4423cf-ffa1-4a73-be20-efe4cdebe55c",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": true,
                "isHook": false,
                "context": "\"# Append a row to m:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "col = {x, y, z}; Table[AppendTo[m[[i]], col[[i]]], {i, 3}]    ➡️     {{a, b, x}, {c, d, y}, {e, f, z}}",
                "fullTitle": "col = {x, y, z}; Table[AppendTo[m[[i]], col[[i]]], {i, 3}]    ➡️     {{a, b, x}, {c, d, y}, {e, f, z}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9c079cee-c731-48f5-a254-c7fcc8f1e1cf",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": true,
                "isHook": false,
                "context": "\"# Append a column to m:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "m    ➡️     {{a, b, x}, {c, d, y}, {e, f, z}}",
                "fullTitle": "m    ➡️     {{a, b, x}, {c, d, y}, {e, f, z}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "14147c79-587a-427b-a895-db6ee459da49",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": true,
                "isHook": false,
                "context": "\"# m is now a 3*3 matrix:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "AppendTo[{1, 2}, 3]    ➡️     AppendTo[{1, 2}, 3]",
                "fullTitle": "AppendTo[{1, 2}, 3]    ➡️     AppendTo[{1, 2}, 3]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "69d12344-5593-4c77-8941-118add37de53",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": false,
                "isHook": false,
                "context": "\"# The first argument must be a variable:\\n\\n\\ndata: \\n  got:              AppendTo[{1, 2}, 3]\\n  expect:           AppendTo[{1, 2}, 3]\\n  expect_evaluated: AppendTo[{1, 2}, 3]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "AppendTo[{1, 2}, 3]",
                    "expected": "AppendTo[{1, 2}, 3]"
                }
            },
            {
                "title": "AppendTo[k, 2]    ➡️     AppendTo[k, 2]",
                "fullTitle": "AppendTo[k, 2]    ➡️     AppendTo[k, 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1f9fca11-f7fe-4f7f-8558-47593b807e75",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": false,
                "isHook": false,
                "context": "\"# The first argument must be a variable with a value:\\n\\n\\ndata: \\n  got:              AppendTo[k, 2]\\n  expect:           AppendTo[k, 2]\\n  expect_evaluated: AppendTo[k, 2]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "AppendTo[k, 2]",
                    "expected": "AppendTo[k, 2]"
                }
            },
            {
                "title": "k = 1; AppendTo[k, 2]    ➡️     AppendTo[k, 2]",
                "fullTitle": "k = 1; AppendTo[k, 2]    ➡️     AppendTo[k, 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d868ed1c-91cd-4cc9-a6c9-3bfdd38184f3",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": false,
                "isHook": false,
                "context": "\"# The first argument must be assigned to something which can be appended to:\\n\\n\\ndata: \\n  got:              AppendTo[k, 2]\\n  expect:           AppendTo[k, 2]\\n  expect_evaluated: AppendTo[k, 2]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "AppendTo[k, 2]",
                    "expected": "AppendTo[k, 2]"
                }
            },
            {
                "title": "AtomQ[k]    ➡️     True",
                "fullTitle": "AtomQ[k]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9f78f049-7129-4c44-ba28-de18befbea0e",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": false,
                "isHook": false,
                "context": "\"# Something for which  RefLink[AtomQ,paclet:ref/AtomQ] is RefLink[True,paclet:ref/True] cannot be appended to:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "BlockRandom[Timing[a = {}; sum = 0; While[sum < 10^5, r = RandomInteger[9]; sum += r; AppendTo[a, r]]; Length[a]]]    ➡️     {3.425, 22250}",
                "fullTitle": "BlockRandom[Timing[a = {}; sum = 0; While[sum < 10^5, r = RandomInteger[9]; sum += r; AppendTo[a, r]]; Length[a]]]    ➡️     {3.425, 22250}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "025a4555-d912-4afc-b71e-ea54af06668b",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": true,
                "isHook": false,
                "context": "\"# Using RefLink[AppendTo,paclet:ref/AppendTo] to accumulate values in large loops can be slow:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "BlockRandom[Timing[sum = 0; {r, {a}} = Reap[While[sum < 10^5, r = RandomInteger[9]; sum += r; Sow[r]]]; Length[a]]]    ➡️     {0.27, 22250}",
                "fullTitle": "BlockRandom[Timing[sum = 0; {r, {a}} = Reap[While[sum < 10^5, r = RandomInteger[9]; sum += r; Sow[r]]]; Length[a]]]    ➡️     {0.27, 22250}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cebfa65b-b853-4fe3-84f3-e5db3d6a07a2",
                "parentUUID": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
                "skipped": true,
                "isHook": false,
                "context": "\"# There are many alternatives, such as using RefLink[Reap,paclet:ref/Reap] and RefLink[Sow,paclet:ref/Sow]:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "8ca790d5-4bd7-4ef1-82d6-5a1407d95610",
            "4113c721-4e97-4772-9b19-10bd0680a901",
            "d4e7149c-93b1-44c9-9567-987a10d4e2b6",
            "9071bef3-1497-497c-9f14-c169a509d70a",
            "514e6ddd-0cf1-4e03-87e3-0a36775f3de9",
            "1a1314ae-66a0-4291-ba4e-9d568513fc3b",
            "104e1efd-e9fb-49cc-8124-3374b962cf07",
            "f8d47ede-a160-4262-95a7-e661174daa9a",
            "1b48b23e-03ce-4bae-97a4-5260d73cb2fa",
            "9a4423cf-ffa1-4a73-be20-efe4cdebe55c",
            "9c079cee-c731-48f5-a254-c7fcc8f1e1cf",
            "14147c79-587a-427b-a895-db6ee459da49",
            "69d12344-5593-4c77-8941-118add37de53",
            "1f9fca11-f7fe-4f7f-8558-47593b807e75",
            "d868ed1c-91cd-4cc9-a6c9-3bfdd38184f3",
            "9f78f049-7129-4c44-ba28-de18befbea0e",
            "025a4555-d912-4afc-b71e-ea54af06668b",
            "cebfa65b-b853-4fe3-84f3-e5db3d6a07a2"
        ],
        "failures": [
            "521722e8-b9f4-4253-bfca-a7a148933887"
        ],
        "skipped": [
            "f8d47ede-a160-4262-95a7-e661174daa9a",
            "1b48b23e-03ce-4bae-97a4-5260d73cb2fa",
            "9a4423cf-ffa1-4a73-be20-efe4cdebe55c",
            "9c079cee-c731-48f5-a254-c7fcc8f1e1cf",
            "14147c79-587a-427b-a895-db6ee459da49",
            "025a4555-d912-4afc-b71e-ea54af06668b",
            "cebfa65b-b853-4fe3-84f3-e5db3d6a07a2"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "f3d4cbd8-af4a-4d40-90df-9124443c0805",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
