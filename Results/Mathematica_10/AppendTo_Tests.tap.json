{
    "stats": {
        "suites": 0,
        "tests": 19,
        "passes": 18,
        "pending": 0,
        "failures": 1,
        "start": "2018-06-02T19:34:42.082Z",
        "end": "2018-06-02T19:34:42.082Z",
        "duration": 0,
        "testsRegistered": 19,
        "passPercent": 94.73684210526315,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "l = {1, 2, 4, 9}    ➡️     {1, 2, 4, 9}",
                "fullTitle": "l = {1, 2, 4, 9}    ➡️     {1, 2, 4, 9}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "59e32548-8e21-4abe-b680-d0f968786865",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": false,
                "isHook": false,
                "context": "\"# SYSTEM: Mathematica_10\\n# TEST: AppendTo_Tests\\n# OUTPUT: output/Results/Mathematica_10/AppendTo_Tests.json\\n# Assign l to a list:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect: \\n    1: null\\n    2: null\\n    4: null\\n    9: null\\n  expect_evaluated: \\n    1: null\\n    2: null\\n    4: null\\n    9: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null
                    }
                }
            },
            {
                "title": "AppendTo[l, 16]    ➡️     {1, 2, 4, 9, 16}",
                "fullTitle": "AppendTo[l, 16]    ➡️     {1, 2, 4, 9, 16}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "697c876a-3988-4563-b2a0-7301f0def5d4",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": false,
                "isHook": false,
                "context": "\"# Include a new value at the end of the list:\\n\\n\\ndata: \\n  got: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\\n  expect: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\\n  expect_evaluated: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null,
                        "16": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null,
                        "16": null
                    }
                }
            },
            {
                "title": "l    ➡️     {1, 2, 4, 9, 16}",
                "fullTitle": "l    ➡️     {1, 2, 4, 9, 16}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d2244b7f-560f-4d64-9404-33ce65dc34b7",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": false,
                "isHook": false,
                "context": "\"# The value assigned to l has changed:\\n\\n\\ndata: \\n  got: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\\n  expect: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\\n  expect_evaluated: \\n    1:  null\\n    2:  null\\n    4:  null\\n    9:  null\\n    16: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null,
                        "16": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "9": null,
                        "16": null
                    }
                }
            },
            {
                "title": "x = <| 1 -> a, 2 -> b |>    ➡️     <| 1 -> a, 2 -> b |>",
                "fullTitle": "x = <| 1 -> a, 2 -> b |>    ➡️     <| 1 -> a, 2 -> b |>",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f102a3de-0a59-4a03-a8e2-9ea23f5028cf",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": false,
                "isHook": false,
                "context": "\"# Append to an RefLink[Association,paclet:ref/Association]:\\n\\n\\ndata: \\n  got:              <|1 -> a, 2 -> b|>\\n  expect:           <| 1 -> a, 2 -> b |>\\n  expect_evaluated: <|1 -> a, 2 -> b|>\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "<|1 -> a, 2 -> b|>",
                    "expected": "<| 1 -> a, 2 -> b |>"
                }
            },
            {
                "title": "AppendTo[x, 3 -> c]    ➡️     <| 1 -> a, 2 -> b, 3 -> c |>",
                "fullTitle": "AppendTo[x, 3 -> c]    ➡️     <| 1 -> a, 2 -> b, 3 -> c |>",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3a2cd239-6c47-4245-a6f0-f48558c9233b",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              <|1 -> a, 2 -> b, 3 -> c|>\\n  expect:           <| 1 -> a, 2 -> b, 3 -> c |>\\n  expect_evaluated: <|1 -> a, 2 -> b, 3 -> c|>\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "<|1 -> a, 2 -> b, 3 -> c|>",
                    "expected": "<| 1 -> a, 2 -> b, 3 -> c |>"
                }
            },
            {
                "title": "PrependTo[x, 4 -> d]    ➡️     <| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>",
                "fullTitle": "PrependTo[x, 4 -> d]    ➡️     <| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e55bf2ca-ca86-4dd7-ba0c-27c2f75bb4eb",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              <|4 -> d, 1 -> a, 2 -> b, 3 -> c|>\\n  expect:           <| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>\\n  expect_evaluated: <|4 -> d, 1 -> a, 2 -> b, 3 -> c|>\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "<|4 -> d, 1 -> a, 2 -> b, 3 -> c|>",
                    "expected": "<| 4 -> d, 1 -> a, 2 -> b, 3 -> c |>"
                }
            },
            {
                "title": "e = f[a, b, c]; AppendTo[e, x + y]    ➡️     f[a, b, c, x + y]",
                "fullTitle": "e = f[a, b, c]; AppendTo[e, x + y]    ➡️     f[a, b, c, x + y]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2bf766b5-3f30-4d5d-9bdc-3ed54e85dad2",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use a head other than RefLink[List,paclet:ref/List]:\\n\\n\\ndata: \\n  got:              f[a, b, c, <|4 -> d + y, 1 -> a + y, 2 -> b + y, 3 -> c + y|>]\\n  expect:           f[a, b, c, x + y]\\n  expect_evaluated: f[a, b, c, <|4 -> d + y, 1 -> a + y, 2 -> b + y, 3 -> c + y|>]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[a, b, c, <|4 -> d + y, 1 -> a + y, 2 -> b + y, 3 -> c + y|>]",
                    "expected": "f[a, b, c, x + y]"
                }
            },
            {
                "title": "HoldComplete[s = SparseArray[{{i_, i_} -> i}, 3]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[s = SparseArray[{{i_, i_} -> i}, 3]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "36e8f637-5ec3-4bec-8bba-9e447229da74",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": true,
                "isHook": false,
                "context": "\"# This assigns s to a sparse matrix:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[AppendTo[s, {1, 2, 3}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[AppendTo[s, {1, 2, 3}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "50d2b0ab-85b4-411b-9d78-0b0d8cbfd227",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": true,
                "isHook": false,
                "context": "\"# Add a row to the matrix:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "AppendTo[s, {4, 5}]    ➡️     {{1, 0, 0}, {0, 2, 0}, {0, 0, 3}, {1, 2, 3}, {4, 5}}",
                "fullTitle": "AppendTo[s, {4, 5}]    ➡️     {{1, 0, 0}, {0, 2, 0}, {0, 0, 3}, {1, 2, 3}, {4, 5}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "41cdede2-0c7c-4bd6-a311-4d48a51b5755",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": false,
                "isHook": false,
                "context": "\"# Appending an element with inconsistent dimensions requires converting to ordinary lists:\\n\"",
                "state": "failed",
                "err": {}
            },
            {
                "title": "AppendTo[m, {e, f}]    ➡️     {{a, b}, {c, d}, {e, f}}",
                "fullTitle": "AppendTo[m, {e, f}]    ➡️     {{a, b}, {c, d}, {e, f}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5702ee8b-0341-4c87-bb70-15775079e899",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": true,
                "isHook": false,
                "context": "\"# Append a row to m:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "col = {x, y, z}; Table[AppendTo[m[[i]], col[[i]]], {i, 3}]    ➡️     {{a, b, x}, {c, d, y}, {e, f, z}}",
                "fullTitle": "col = {x, y, z}; Table[AppendTo[m[[i]], col[[i]]], {i, 3}]    ➡️     {{a, b, x}, {c, d, y}, {e, f, z}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6f5d753c-f4fe-4680-a5ab-b50813877f2c",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": true,
                "isHook": false,
                "context": "\"# Append a column to m:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "m    ➡️     {{a, b, x}, {c, d, y}, {e, f, z}}",
                "fullTitle": "m    ➡️     {{a, b, x}, {c, d, y}, {e, f, z}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7bc9ade7-7ca3-4630-ad7f-6f5d52dd7724",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": true,
                "isHook": false,
                "context": "\"# m is now a 3*3 matrix:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "AppendTo[{1, 2}, 3]    ➡️     AppendTo[{1, 2}, 3]",
                "fullTitle": "AppendTo[{1, 2}, 3]    ➡️     AppendTo[{1, 2}, 3]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0f0dbbfa-a6e1-4c2c-b1f4-cc7f8af961cd",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": false,
                "isHook": false,
                "context": "\"# The first argument must be a variable:\\n\\n\\ndata: \\n  got:              AppendTo[{1, 2}, 3]\\n  expect:           AppendTo[{1, 2}, 3]\\n  expect_evaluated: AppendTo[{1, 2}, 3]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "AppendTo[{1, 2}, 3]",
                    "expected": "AppendTo[{1, 2}, 3]"
                }
            },
            {
                "title": "AppendTo[k, 2]    ➡️     AppendTo[k, 2]",
                "fullTitle": "AppendTo[k, 2]    ➡️     AppendTo[k, 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "768b1298-c34b-43bf-9414-3d2bebfc43bc",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": false,
                "isHook": false,
                "context": "\"# The first argument must be a variable with a value:\\n\\n\\ndata: \\n  got:              AppendTo[k, 2]\\n  expect:           AppendTo[k, 2]\\n  expect_evaluated: AppendTo[k, 2]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "AppendTo[k, 2]",
                    "expected": "AppendTo[k, 2]"
                }
            },
            {
                "title": "k = 1; AppendTo[k, 2]    ➡️     AppendTo[k, 2]",
                "fullTitle": "k = 1; AppendTo[k, 2]    ➡️     AppendTo[k, 2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "85e393cb-8bd0-46af-967e-f13643192d7c",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": false,
                "isHook": false,
                "context": "\"# The first argument must be assigned to something which can be appended to:\\n\\n\\ndata: \\n  got:              AppendTo[k, 2]\\n  expect:           AppendTo[k, 2]\\n  expect_evaluated: AppendTo[k, 2]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "AppendTo[k, 2]",
                    "expected": "AppendTo[k, 2]"
                }
            },
            {
                "title": "AtomQ[k]    ➡️     True",
                "fullTitle": "AtomQ[k]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5f707c04-35fd-4629-b4da-e9dcc8558422",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": false,
                "isHook": false,
                "context": "\"# Something for which  RefLink[AtomQ,paclet:ref/AtomQ] is RefLink[True,paclet:ref/True] cannot be appended to:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "BlockRandom[Timing[a = {}; sum = 0; While[sum < 10^5, r = RandomInteger[9]; sum += r; AppendTo[a, r]]; Length[a]]]    ➡️     {3.425, 22250}",
                "fullTitle": "BlockRandom[Timing[a = {}; sum = 0; While[sum < 10^5, r = RandomInteger[9]; sum += r; AppendTo[a, r]]; Length[a]]]    ➡️     {3.425, 22250}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1f797b93-567c-494d-872f-f72166498c75",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": true,
                "isHook": false,
                "context": "\"# Using RefLink[AppendTo,paclet:ref/AppendTo] to accumulate values in large loops can be slow:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "BlockRandom[Timing[sum = 0; {r, {a}} = Reap[While[sum < 10^5, r = RandomInteger[9]; sum += r; Sow[r]]]; Length[a]]]    ➡️     {0.27, 22250}",
                "fullTitle": "BlockRandom[Timing[sum = 0; {r, {a}} = Reap[While[sum < 10^5, r = RandomInteger[9]; sum += r; Sow[r]]]; Length[a]]]    ➡️     {0.27, 22250}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f25a8053-2631-451c-82f0-f5c827ef3c47",
                "parentUUID": "7ffbd961-6c85-49a2-8427-310adb64b247",
                "skipped": true,
                "isHook": false,
                "context": "\"# There are many alternatives, such as using RefLink[Reap,paclet:ref/Reap] and RefLink[Sow,paclet:ref/Sow]:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "59e32548-8e21-4abe-b680-d0f968786865",
            "697c876a-3988-4563-b2a0-7301f0def5d4",
            "d2244b7f-560f-4d64-9404-33ce65dc34b7",
            "f102a3de-0a59-4a03-a8e2-9ea23f5028cf",
            "3a2cd239-6c47-4245-a6f0-f48558c9233b",
            "e55bf2ca-ca86-4dd7-ba0c-27c2f75bb4eb",
            "2bf766b5-3f30-4d5d-9bdc-3ed54e85dad2",
            "36e8f637-5ec3-4bec-8bba-9e447229da74",
            "50d2b0ab-85b4-411b-9d78-0b0d8cbfd227",
            "5702ee8b-0341-4c87-bb70-15775079e899",
            "6f5d753c-f4fe-4680-a5ab-b50813877f2c",
            "7bc9ade7-7ca3-4630-ad7f-6f5d52dd7724",
            "0f0dbbfa-a6e1-4c2c-b1f4-cc7f8af961cd",
            "768b1298-c34b-43bf-9414-3d2bebfc43bc",
            "85e393cb-8bd0-46af-967e-f13643192d7c",
            "5f707c04-35fd-4629-b4da-e9dcc8558422",
            "1f797b93-567c-494d-872f-f72166498c75",
            "f25a8053-2631-451c-82f0-f5c827ef3c47"
        ],
        "failures": [
            "41cdede2-0c7c-4bd6-a311-4d48a51b5755"
        ],
        "skipped": [
            "36e8f637-5ec3-4bec-8bba-9e447229da74",
            "50d2b0ab-85b4-411b-9d78-0b0d8cbfd227",
            "5702ee8b-0341-4c87-bb70-15775079e899",
            "6f5d753c-f4fe-4680-a5ab-b50813877f2c",
            "7bc9ade7-7ca3-4630-ad7f-6f5d52dd7724",
            "1f797b93-567c-494d-872f-f72166498c75",
            "f25a8053-2631-451c-82f0-f5c827ef3c47"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "7ffbd961-6c85-49a2-8427-310adb64b247",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
