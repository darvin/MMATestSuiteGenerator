# SYSTEM: Mathematica_10
# TEST: Hold_Tests
# OUTPUT: output/Results/Mathematica_10/Hold_Tests.json
# Hold an expression to prevent evaluation:
ok  Hold[2 + 2]    ==>     Hold[2 + 2]
    ---
    data:
        got: 4
        expect: Hold[2 + 2]
        expect_evaluated: 4
    ...
# Release the hold:
ok  ReleaseHold[%]    ==>     4 # skip
ok  List @@ Hold /@ list    ==>     {Hold[1 + 2], Hold[2*3*4*5], Hold[1/0], Hold[Quit[]]} # skip
ok  % /. Hold[e_] :> Length[Unevaluated[e]]    ==>     {2, 4, 2, 0} # skip
# Evaluate every sum (only) inside a held expression:
ok  expr = Hold[{1 + 2, g[3 + 4, 2*3], f[1 + g[2 + 3]]}]    ==>     Hold[{1 + 2, g[3 + 4, 2*3], f[1 + g[2 + 3]]}]
    ---
    data:
        got: {3, g[7, 6], f[1 + g[5]]}
        expect: Hold[{1 + 2, g[3 + 4, 2*3], f[1 + g[2 + 3]]}]
        expect_evaluated: {3, g[7, 6], f[1 + g[5]]}
    ...
ok  pos = Position[expr, _Plus]    ==>     {{1, 1}, {1, 2, 1}, {1, 3, 1, 2, 1}, {1, 3, 1}}
    ---
    data:
        got: {{1, 1}, {1, 2, 1}, {1, 3, 1, 2, 1}, {1, 3, 1}}
        expect: {{1, 1}, {1, 2, 1}, {1, 3, 1, 2, 1}, {1, 3, 1}}
        expect_evaluated: {{1, 1}, {1, 2, 1}, {1, 3, 1, 2, 1}, {1, 3, 1}}
    ...
ok  val = Extract[expr, pos]    ==>     {3, 7, 5, 1 + g[5]}
    ---
    data:
        got: {3, 7, 5, 1 + g[5]}
        expect: {3, 7, 5, 1 + g[5]}
        expect_evaluated: {3, 7, 5, 1 + g[5]}
    ...
ok  ReplacePart[expr, Thread[pos -> val]]    ==>     Hold[{3, g[7, 2*3], f[1 + g[5]]}]
    ---
    data:
        got: {3, g[7, 6], f[1 + g[5]]}
        expect: Hold[{3, g[7, 2*3], f[1 + g[5]]}]
        expect_evaluated: {3, g[7, 6], f[1 + g[5]]}
    ...
# RefLink[Hold,paclet:ref/Hold] is a container with the attribute RefLink[HoldAll,paclet:ref/HoldAll]:
ok  Attributes[Hold]    ==>     {HoldAll, Protected}
    ---
    data:
        got: {HoldAll, Protected}
        expect: {HoldAll, Protected}
        expect_evaluated: {HoldAll, Protected}
    ...
ok  Hold[1 + 2]    ==>     Hold[1 + 2]
    ---
    data:
        got: 3
        expect: Hold[1 + 2]
        expect_evaluated: 3
    ...
# Use RefLink[Evaluate,paclet:ref/Evaluate] to force evaluation of an argument of RefLink[Hold,paclet:ref/Hold]:
not ok  Hold[Evaluate[1 + 1], 2 + 2]    ==>     Hold[2, 2 + 2]
    ---
    data:
        got: InputForm[2, 4]
        expect: Hold[2, 2 + 2]
        expect_evaluated: InputForm[2, 4]
    ...
# RefLink[Unevaluated,paclet:ref/Unevaluated] inside a held expression is not removed:
ok  Hold[Unevaluated[1 + 1]]    ==>     Hold[Unevaluated[1 + 1]]
    ---
    data:
        got: Unevaluated[1 + 1]
        expect: Hold[Unevaluated[1 + 1]]
        expect_evaluated: Unevaluated[1 + 1]
    ...
# Sequence splicing still happens inside RefLink[Hold,paclet:ref/Hold]:
not ok  Hold[Sequence[1 + 1, 2 + 2]]    ==>     Hold[1 + 1, 2 + 2]
    ---
    data:
        got: InputForm[2, 4]
        expect: Hold[1 + 1, 2 + 2]
        expect_evaluated: InputForm[2, 4]
    ...
# Use the container RefLink[HoldComplete,paclet:ref/HoldComplete] to suppress even such transformations:
not ok  HoldComplete[Sequence[1 + 1, 2 + 2]]    ==>     HoldComplete[Sequence[1 + 1, 2 + 2]]
    ---
    data:
        got: InputForm[2, 4]
        expect: HoldComplete[Sequence[1 + 1, 2 + 2]]
        expect_evaluated: InputForm[2, 4]
    ...
ok  Hold[h[1 + 2]]    ==>     f[3] # skip
ok  HoldComplete[h[1 + 2]]    ==>     HoldComplete[h[1 + 2]]
    ---
    data:
        got: h[3]
        expect: HoldComplete[h[1 + 2]]
        expect_evaluated: h[3]
    ...
# Substitution works inside RefLink[Hold,paclet:ref/Hold]:
ok  Hold[f[1 + 2]] /. f[x_] :> g[x]    ==>     Hold[g[1 + 2]]
    ---
    data:
        got: g[3]
        expect: Hold[g[1 + 2]]
        expect_evaluated: g[3]
    ...
# Insert into a held expression:
ok  Insert[Hold[x + x], y, {1, 2}]    ==>     Hold[x + y + x]
    ---
    data:
        got: 2*x + y
        expect: Hold[x + y + x]
        expect_evaluated: 2*x + y
    ...
# RefLink[ReleaseHold,paclet:ref/ReleaseHold] removes one level of RefLink[Hold,paclet:ref/Hold]:
ok  ReleaseHold[Hold[1 + 2]]    ==>     3
    ---
    data:
        got: 3
        expect: 3
        expect_evaluated: 3
    ...
# RefLink[HoldForm,paclet:ref/HoldForm] is like RefLink[Hold,paclet:ref/Hold], but is normally not shown in the output:
ok  HoldForm[1 + 2]    ==>     1 + 2 # skip
ok  FullForm[%]    ==>     HoldForm[1 + 2] # skip
