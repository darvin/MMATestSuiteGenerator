#! DOCKER > wolfram -script output/Tests/SquareFreeQ_Tests.m
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
# SYSTEM: Mathematica_10
# TEST: SquareFreeQ_Tests
ok  $Failed    ==>     HoldComplete[True] # skip
# 12 has a factor 4, which is a square:
ok  SquareFreeQ[12]    ==>     False
    ---
    data:
        got: False
        expect: False
        expect_evaluated: False
    ...
ok  SquareFreeQ[x^4 - 1]    ==>     True
    ---
    data:
        got: True
        expect: True
        expect_evaluated: True
    ...
ok  SquareFreeQ[x^4 - 2*x^2 + 1]    ==>     False
    ---
    data:
        got: False
        expect: False
        expect_evaluated: False
    ...
# Integers: 
ok  SquareFreeQ[20]    ==>     False
    ---
    data:
        got: False
        expect: False
        expect_evaluated: False
    ...
ok  FactorInteger[20]    ==>     {{2, 2}, {5, 1}}
    ---
    data:
        got: {{2, 2}, {5, 1}}
        expect: {{2, 2}, {5, 1}}
        expect_evaluated: {{2, 2}, {5, 1}}
    ...
# Gaussian integers:
ok  SquareFreeQ[8 + 2*I]    ==>     False
    ---
    data:
        got: False
        expect: False
        expect_evaluated: False
    ...
ok  FactorInteger[8 + 2*I]    ==>     {{-I, 1}, {1 + I, 2}, {4 + I, 1}}
    ---
    data:
        got: {{-I, 1}, {1 + I, 2}, {4 + I, 1}}
        expect: {{-I, 1}, {1 + I, 2}, {4 + I, 1}}
        expect_evaluated: {{-I, 1}, {1 + I, 2}, {4 + I, 1}}
    ...
# Univariate polynomials:
ok  SquareFreeQ[9 + 6*x + x^2]    ==>     False
    ---
    data:
        got: False
        expect: False
        expect_evaluated: False
    ...
ok  FactorList[9 + 6*x + x^2]    ==>     {{1, 1}, {3 + x, 2}}
    ---
    data:
        got: {{1, 1}, {3 + x, 2}}
        expect: {{1, 1}, {3 + x, 2}}
        expect_evaluated: {{1, 1}, {3 + x, 2}}
    ...
# Multivariate polynomials:
ok  SquareFreeQ[x^3 - x^2*y - x*y^2 + y^3]    ==>     False
    ---
    data:
        got: False
        expect: False
        expect_evaluated: False
    ...
ok  FactorList[x^3 - x^2*y - x*y^2 + y^3]    ==>     {{1, 1}, {x - y, 2}, {x + y, 1}}
    ---
    data:
        got: {{1, 1}, {x - y, 2}, {x + y, 1}}
        expect: {{1, 1}, {x - y, 2}, {x + y, 1}}
        expect_evaluated: {{1, 1}, {x - y, 2}, {x + y, 1}}
    ...
# Polynomials in specific variables:
ok  SquareFreeQ[a*x*y^2, x]    ==>     True
    ---
    data:
        got: True
        expect: True
        expect_evaluated: True
    ...
ok  SquareFreeQ[a*x*y^2, y]    ==>     False
    ---
    data:
        got: False
        expect: False
        expect_evaluated: False
    ...
# Polynomials over a finite field:
ok  SquareFreeQ[x^2 + 1, Modulus -> 2]    ==>     False
    ---
    data:
        got: False
        expect: False
        expect_evaluated: False
    ...
ok  FactorList[x^2 + 1, Modulus -> 2]    ==>     {{1, 1}, {1 + x, 2}}
    ---
    data:
        got: {{1, 1}, {1 + x, 2}}
        expect: {{1, 1}, {1 + x, 2}}
        expect_evaluated: {{1, 1}, {1 + x, 2}}
    ...
# This is square-free over the integers:
ok  SquareFreeQ[x^2 + 1]    ==>     True
    ---
    data:
        got: True
        expect: True
        expect_evaluated: True
    ...
# Square-free Gaussian integers:
ok  SquareFreeQ[2, GaussianIntegers -> True]    ==>     False
    ---
    data:
        got: False
        expect: False
        expect_evaluated: False
    ...
ok  SquareFreeQ[2, GaussianIntegers -> False]    ==>     True
    ---
    data:
        got: True
        expect: True
        expect_evaluated: True
    ...
# Square-free polynomials over finite fields:
ok  SquareFreeQ[x^2 - 3, Modulus -> 3]    ==>     False
    ---
    data:
        got: False
        expect: False
        expect_evaluated: False
    ...
ok  SquareFreeQ[x^2 - 3, Modulus -> 0]    ==>     True
    ---
    data:
        got: True
        expect: True
        expect_evaluated: True
    ...
# The central binomial coefficients RefLink[Binomial,paclet:ref/Binomial][2n,n] are not square-free for n>4:
ok  Or @@ Table[SquareFreeQ[Binomial[2*n, n]], {n, 5, 2^10}]    ==>     False
    ---
    data:
        got: False
        expect: False
        expect_evaluated: False
    ...
# Square factors can be found using RefLink[FactorSquareFreeList,paclet:ref/FactorSquareFreeList]:
ok  SquareFreeQ[Expand[(x + 1)^3*(x + 2)^2*(x + 3)^2]]    ==>     False
    ---
    data:
        got: False
        expect: False
        expect_evaluated: False
    ...
ok  FactorSquareFreeList[Expand[(x + 1)^3*(x + 2)^2*(x + 3)^2]]    ==>     {{1, 1}, {1 + x, 3}, {6 + 5*x + x^2, 2}}
    ---
    data:
        got:                                  2
#! {{1, 1}, {1 + x, 3}, {6 + 5 x + x , 2}}
        expect: {{1, 1}, {1 + x, 3}, {6 + 5*x + x^2, 2}}
        expect_evaluated:                                  2
#! {{1, 1}, {1 + x, 3}, {6 + 5 x + x , 2}}
    ...
# The polynomial p[x]/RefLink[PolynomialGCD,paclet:ref/PolynomialGCD][p[x],p'[x]] is always square-free:
ok  p = Expand[(x + 1)^3*(x + 2)^2*(x + 3)^2] ;; SquareFreeQ[Cancel[p/PolynomialGCD[p, D[p, x]]]]    ==>     True # skip
# RefLink[MoebiusMu,paclet:ref/MoebiusMu] is zero for non-square-free integers:
ok  MoebiusMu[12]    ==>     0
    ---
    data:
        got: 0
        expect: 0
        expect_evaluated: 0
    ...
ok  SquareFreeQ[12]    ==>     False
    ---
    data:
        got: False
        expect: False
        expect_evaluated: False
    ...
# Square-free integers: 
not ok  HoldComplete[ArrayPlot[Partition[Table[Boole[SquareFreeQ[i]], {i, 300^2}], 300]]]    ==>     $Failed
    ---
    data:
        got: -Graphics-
        expect: $Failed
        expect_evaluated: $Failed
    ...
# Square-free Gaussian integers:
not ok  HoldComplete[ArrayPlot[Table[Boole[SquareFreeQ[x + I*y, GaussianIntegers -> True]], {x, 300}, {y, 300}]]]    ==>     $Failed
    ---
    data:
        got: -Graphics-
        expect: $Failed
        expect_evaluated: $Failed
    ...
