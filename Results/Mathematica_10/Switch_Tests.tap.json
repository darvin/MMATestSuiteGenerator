{
    "stats": {
        "suites": 0,
        "tests": 3,
        "passes": 3,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-11T04:14:37.783Z",
        "end": "2018-06-11T04:14:37.783Z",
        "duration": 0,
        "testsRegistered": 3,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "f::boole = \"The value `1` is not True or False.\" ;; f[b_] := Switch[b, True, 1, False, 0, _, Message[f::boole, b]; 0]; {f[True], f[False], f[x]}    ➡️     {1, 0, 0}",
                "fullTitle": "f::boole = \"The value `1` is not True or False.\" ;; f[b_] := Switch[b, True, 1, False, 0, _, Message[f::boole, b]; 0]; {f[True], f[False], f[x]}    ➡️     {1, 0, 0}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f277054a-6586-41f8-93db-c7589128d2e9",
                "parentUUID": "d8863f6f-27ff-4d79-bc14-6c53e7c5e42f",
                "skipped": true,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/Switch_Tests.m\\n#! TextForm[ColonForm[MessageName[SetDelayed, write], StringForm[Tag `1` in `2` is Protected., Short[HoldForm[Span], 3], Short[HoldForm[Span[The value `1` is not True or False., f[b_]]], 3]]]]\\n#! TextForm[ColonForm[MessageName[MessageName, messg], StringForm[`1` cannot be set to `2`. It must be set to a string., Short[HoldForm[MessageName[f, boole]], 3], Short[HoldForm[$Failed], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: Switch_Tests\\n# Process Boolean value to 1 or 0, giving a message and defaulting to 0 when not Boolean:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "t[e_] := Switch[e, _Plus, Together, _Times, Apart, _, Identity]; e = (1 + x)/(1 - x) + x/(1 + x); t[e]    ➡️     Together",
                "fullTitle": "t[e_] := Switch[e, _Plus, Together, _Times, Apart, _, Identity]; e = (1 + x)/(1 - x) + x/(1 + x); t[e]    ➡️     Together",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1ab70ce2-0a89-4ee7-b8c1-8bd181cde916",
                "parentUUID": "d8863f6f-27ff-4d79-bc14-6c53e7c5e42f",
                "skipped": false,
                "isHook": false,
                "context": "\"# Give a suggested symbolic transformation for an expression:\\n\\n\\ndata: \\n  got:              Together\\n  expect:           Together\\n  expect_evaluated: Together\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Together",
                    "expected": "Together"
                }
            },
            {
                "title": "e1 = t[e][e]    ➡️     (-1 - 3*x)/((-1 + x)*(1 + x))",
                "fullTitle": "e1 = t[e][e]    ➡️     (-1 - 3*x)/((-1 + x)*(1 + x))",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bbf5bb36-76e0-46fc-b22d-8bf8508f6c4f",
                "parentUUID": "d8863f6f-27ff-4d79-bc14-6c53e7c5e42f",
                "skipped": false,
                "isHook": false,
                "context": "\"# Try the transformation:\\n\\n\\ndata: \\n  got:              -1 - 3 x\\n  expect:           (-1 - 3*x)/((-1 + x)*(1 + x))\\n  expect_evaluated: -1 - 3 x\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "-1 - 3 x",
                    "expected": "(-1 - 3*x)/((-1 + x)*(1 + x))"
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "f277054a-6586-41f8-93db-c7589128d2e9",
            "1ab70ce2-0a89-4ee7-b8c1-8bd181cde916",
            "bbf5bb36-76e0-46fc-b22d-8bf8508f6c4f"
        ],
        "failures": [],
        "skipped": [
            "f277054a-6586-41f8-93db-c7589128d2e9"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "d8863f6f-27ff-4d79-bc14-6c53e7c5e42f",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
