{
    "stats": {
        "suites": 0,
        "tests": 13,
        "passes": 13,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-11T04:13:38.445Z",
        "end": "2018-06-11T04:13:38.445Z",
        "duration": 0,
        "testsRegistered": 13,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "ComplexExpand[Sin[x + I*y]]    ➡️     Cosh[y]*Sin[x] + I*Cos[x]*Sinh[y]",
                "fullTitle": "ComplexExpand[Sin[x + I*y]]    ➡️     Cosh[y]*Sin[x] + I*Cos[x]*Sinh[y]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f4482359-725b-4590-b72b-c4f2bba360bf",
                "parentUUID": "df9c1a21-02c0-4fb4-a73f-f5e097ca24da",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/ComplexExpand_Tests.m\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: ComplexExpand_Tests\\n# Assume both x and y are real:\\n\\n\\ndata: \\n  got:              Cosh[y] Sin[x] + I Cos[x] Sinh[y]\\n  expect:           Cosh[y]*Sin[x] + I*Cos[x]*Sinh[y]\\n  expect_evaluated: Cosh[y] Sin[x] + I Cos[x] Sinh[y]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Cosh[y] Sin[x] + I Cos[x] Sinh[y]",
                    "expected": "Cosh[y]*Sin[x] + I*Cos[x]*Sinh[y]"
                }
            },
            {
                "title": "ComplexExpand[Sin[x], x]    ➡️     Cosh[Im[x]]*Sin[Re[x]] + I*Cos[Re[x]]*Sinh[Im[x]]",
                "fullTitle": "ComplexExpand[Sin[x], x]    ➡️     Cosh[Im[x]]*Sin[Re[x]] + I*Cos[Re[x]]*Sinh[Im[x]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4f7a7f08-81e6-49a1-bc3d-57bc83ddcd84",
                "parentUUID": "df9c1a21-02c0-4fb4-a73f-f5e097ca24da",
                "skipped": false,
                "isHook": false,
                "context": "\"# Take x to be complex:\\n\\n\\ndata: \\n  got:              Cosh[Im[x]] Sin[Re[x]] + I Cos[Re[x]] Sinh[Im[x]]\\n  expect:           Cosh[Im[x]]*Sin[Re[x]] + I*Cos[Re[x]]*Sinh[Im[x]]\\n  expect_evaluated: Cosh[Im[x]] Sin[Re[x]] + I Cos[Re[x]] Sinh[Im[x]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Cosh[Im[x]] Sin[Re[x]] + I Cos[Re[x]] Sinh[Im[x]]",
                    "expected": "Cosh[Im[x]]*Sin[Re[x]] + I*Cos[Re[x]]*Sinh[Im[x]]"
                }
            },
            {
                "title": "ComplexExpand[Re[z^5 - 2*z^3 - z + 1], z]    ➡️     1 - Re[z] + 6*Im[z]^2*Re[z] + 5*Im[z]^4*Re[z] - 2*Re[z]^3 - 10*Im[z]^2*Re[z]^3 + Re[z]^5",
                "fullTitle": "ComplexExpand[Re[z^5 - 2*z^3 - z + 1], z]    ➡️     1 - Re[z] + 6*Im[z]^2*Re[z] + 5*Im[z]^4*Re[z] - 2*Re[z]^3 - 10*Im[z]^2*Re[z]^3 + Re[z]^5",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8e606d9c-6d2e-4e78-bf70-ad9274bc0041",
                "parentUUID": "df9c1a21-02c0-4fb4-a73f-f5e097ca24da",
                "skipped": false,
                "isHook": false,
                "context": "\"# Polynomials:\\n\\n\\ndata: \\n  got:              2                4                3           2      3        5\\n  expect:           1 - Re[z] + 6*Im[z]^2*Re[z] + 5*Im[z]^4*Re[z] - 2*Re[z]^3 - 10*Im[z]^2*Re[z]^3 + Re[z]^5\\n  expect_evaluated: 2                4                3           2      3        5\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2                4                3           2      3        5",
                    "expected": "1 - Re[z] + 6*Im[z]^2*Re[z] + 5*Im[z]^4*Re[z] - 2*Re[z]^3 - 10*Im[z]^2*Re[z]^3 + Re[z]^5"
                }
            },
            {
                "title": "ComplexExpand[Cos[x + I*y] + Tanh[z], {z}]    ➡️     Cos[x]*Cosh[y] + I*(Sin[2*Im[z]]/(Cos[2*Im[z]] + Cosh[2*Re[z]]) - Sin[x]*Sinh[y]) + Sinh[2*Re[z]]/(Cos[2*Im[z]] + Cosh[2*Re[z]])",
                "fullTitle": "ComplexExpand[Cos[x + I*y] + Tanh[z], {z}]    ➡️     Cos[x]*Cosh[y] + I*(Sin[2*Im[z]]/(Cos[2*Im[z]] + Cosh[2*Re[z]]) - Sin[x]*Sinh[y]) + Sinh[2*Re[z]]/(Cos[2*Im[z]] + Cosh[2*Re[z]])",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c3f304ab-6839-44a0-8738-efd73d68c765",
                "parentUUID": "df9c1a21-02c0-4fb4-a73f-f5e097ca24da",
                "skipped": false,
                "isHook": false,
                "context": "\"#! 1 - Re[z] + 6 Im[z]  Re[z] + 5 Im[z]  Re[z] - 2 Re[z]  - 10 Im[z]  Re[z]  + Re[z]\\n#! 1 - Re[z] + 6 Im[z]  Re[z] + 5 Im[z]  Re[z] - 2 Re[z]  - 10 Im[z]  Re[z]  + Re[z]\\n# Trigonometric and hyperbolic functions:\\n\\n\\ndata: \\n  got:              Sin[2 Im[z]]                                    Sinh[2 Re[z]]\\n  expect:           Cos[x]*Cosh[y] + I*(Sin[2*Im[z]]/(Cos[2*Im[z]] + Cosh[2*Re[z]]) - Sin[x]*Sinh[y]) + Sinh[2*Re[z]]/(Cos[2*Im[z]] + Cosh[2*Re[z]])\\n  expect_evaluated: Sin[2 Im[z]]                                    Sinh[2 Re[z]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sin[2 Im[z]]                                    Sinh[2 Re[z]]",
                    "expected": "Cos[x]*Cosh[y] + I*(Sin[2*Im[z]]/(Cos[2*Im[z]] + Cosh[2*Re[z]]) - Sin[x]*Sinh[y]) + Sinh[2*Re[z]]/(Cos[2*Im[z]] + Cosh[2*Re[z]])"
                }
            },
            {
                "title": "ComplexExpand[Re[ArcCot[x + I*y]] + Im[ArcSinh[x - I*y]]]    ➡️     (-(1/2))*Arg[1 - I/(x + I*y)] + (1/2)*Arg[1 + I/(x + I*y)] + Arg[x + Sqrt[1 + (x - I*y)^2] - I*y]",
                "fullTitle": "ComplexExpand[Re[ArcCot[x + I*y]] + Im[ArcSinh[x - I*y]]]    ➡️     (-(1/2))*Arg[1 - I/(x + I*y)] + (1/2)*Arg[1 + I/(x + I*y)] + Arg[x + Sqrt[1 + (x - I*y)^2] - I*y]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0de5e374-db7c-4bfa-b701-255163c195e7",
                "parentUUID": "df9c1a21-02c0-4fb4-a73f-f5e097ca24da",
                "skipped": false,
                "isHook": false,
                "context": "\"#! Cos[x] Cosh[y] + I (---------------------------- - Sin[x] Sinh[y]) + ----------------------------\\n#!                     Cos[2 Im[z]] + Cosh[2 Re[z]]                     Cos[2 Im[z]] + Cosh[2 Re[z]]\\n#! Cos[x] Cosh[y] + I (---------------------------- - Sin[x] Sinh[y]) + ----------------------------\\n#!                     Cos[2 Im[z]] + Cosh[2 Re[z]]                     Cos[2 Im[z]] + Cosh[2 Re[z]]\\n# Inverse trigonometric and inverse hyperbolic functions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "ComplexExpand[Abs[2^z*Log[2*z]], z]    ➡️     2^Re[z]*Sqrt[Arg[z]^2 + (Log[2] + (1/2)*Log[Im[z]^2 + Re[z]^2])^2]",
                "fullTitle": "ComplexExpand[Abs[2^z*Log[2*z]], z]    ➡️     2^Re[z]*Sqrt[Arg[z]^2 + (Log[2] + (1/2)*Log[Im[z]^2 + Re[z]^2])^2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3b78f7c6-4af5-49fe-b8d4-7dd6d53841cc",
                "parentUUID": "df9c1a21-02c0-4fb4-a73f-f5e097ca24da",
                "skipped": false,
                "isHook": false,
                "context": "\"#! -Arg[1 - -------]   Arg[1 + -------]\\n#! ----------------- + ---------------- + Arg[x + Sqrt[1 + (x - I y) ] - I y]\\n#! -Arg[1 - -------]   Arg[1 + -------]\\n#! ----------------- + ---------------- + Arg[x + Sqrt[1 + (x - I y) ] - I y]\\n# Exponential and logarithmic functions:\\n\\n\\ndata: \\n  got:              2        2\\n  expect:           2^Re[z]*Sqrt[Arg[z]^2 + (Log[2] + (1/2)*Log[Im[z]^2 + Re[z]^2])^2]\\n  expect_evaluated: 2        2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2        2",
                    "expected": "2^Re[z]*Sqrt[Arg[z]^2 + (Log[2] + (1/2)*Log[Im[z]^2 + Re[z]^2])^2]"
                }
            },
            {
                "title": "ComplexExpand[Re[Log[Sin[Exp[x + I*y]^2]]]]    ➡️     (1/2)*Log[Cosh[E^(2*x)*Sin[2*y]]^2*Sin[E^(2*x)*Cos[2*y]]^2 + Cos[E^(2*x)*Cos[2*y]]^2*Sinh[E^(2*x)*Sin[2*y]]^2]",
                "fullTitle": "ComplexExpand[Re[Log[Sin[Exp[x + I*y]^2]]]]    ➡️     (1/2)*Log[Cosh[E^(2*x)*Sin[2*y]]^2*Sin[E^(2*x)*Cos[2*y]]^2 + Cos[E^(2*x)*Cos[2*y]]^2*Sinh[E^(2*x)*Sin[2*y]]^2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2f4c00e6-2887-421e-ba08-4f2edf6a6474",
                "parentUUID": "df9c1a21-02c0-4fb4-a73f-f5e097ca24da",
                "skipped": false,
                "isHook": false,
                "context": "\"#!  Re[z]            2             Log[Im[z]  + Re[z] ] 2\\n#! 2      Sqrt[Arg[z]  + (Log[2] + --------------------) ]\\n#!                                          2\\n#!  Re[z]            2             Log[Im[z]  + Re[z] ] 2\\n#! 2      Sqrt[Arg[z]  + (Log[2] + --------------------) ]\\n#!                                          2\\n# Composition of functions:\\n\\n\\ndata: \\n  got:              2 x          2      2 x          2        2 x          2       2 x          2\\n  expect:           (1/2)*Log[Cosh[E^(2*x)*Sin[2*y]]^2*Sin[E^(2*x)*Cos[2*y]]^2 + Cos[E^(2*x)*Cos[2*y]]^2*Sinh[E^(2*x)*Sin[2*y]]^2]\\n  expect_evaluated: 2 x          2      2 x          2        2 x          2       2 x          2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2 x          2      2 x          2        2 x          2       2 x          2",
                    "expected": "(1/2)*Log[Cosh[E^(2*x)*Sin[2*y]]^2*Sin[E^(2*x)*Cos[2*y]]^2 + Cos[E^(2*x)*Cos[2*y]]^2*Sinh[E^(2*x)*Sin[2*y]]^2]"
                }
            },
            {
                "title": "ComplexExpand[Re[Tan[z]], z]    ➡️     Sin[2*Re[z]]/(Cos[2*Re[z]] + Cosh[2*Im[z]])",
                "fullTitle": "ComplexExpand[Re[Tan[z]], z]    ➡️     Sin[2*Re[z]]/(Cos[2*Re[z]] + Cosh[2*Im[z]])",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bba05cc1-e9b5-45dd-9497-2d8c66a05af2",
                "parentUUID": "df9c1a21-02c0-4fb4-a73f-f5e097ca24da",
                "skipped": false,
                "isHook": false,
                "context": "\"#! Log[Cosh[E    Sin[2 y]]  Sin[E    Cos[2 y]]  + Cos[E    Cos[2 y]]  Sinh[E    Sin[2 y]] ]\\n#! ----------------------------------------------------------------------------------------\\n#!                                            2\\n#! Log[Cosh[E    Sin[2 y]]  Sin[E    Cos[2 y]]  + Cos[E    Cos[2 y]]  Sinh[E    Sin[2 y]] ]\\n#! ----------------------------------------------------------------------------------------\\n#!                                            2\\n# This gives an answer in terms of RefLink[Re,paclet:ref/Re][z] and RefLink[Im,paclet:ref/Im][z]:\\n\\n\\ndata: \\n  got:              Sin[2 Re[z]]\\n  expect:           Sin[2*Re[z]]/(Cos[2*Re[z]] + Cosh[2*Im[z]])\\n  expect_evaluated: Sin[2 Re[z]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sin[2 Re[z]]",
                    "expected": "Sin[2*Re[z]]/(Cos[2*Re[z]] + Cosh[2*Im[z]])"
                }
            },
            {
                "title": "ComplexExpand[Re[Tan[z]], z, TargetFunctions -> {Abs, Arg}]    ➡️     Sin[2*Abs[z]*Cos[Arg[z]]]/(Cos[2*Abs[z]*Cos[Arg[z]]] + Cosh[2*Abs[z]*Sin[Arg[z]]])",
                "fullTitle": "ComplexExpand[Re[Tan[z]], z, TargetFunctions -> {Abs, Arg}]    ➡️     Sin[2*Abs[z]*Cos[Arg[z]]]/(Cos[2*Abs[z]*Cos[Arg[z]]] + Cosh[2*Abs[z]*Sin[Arg[z]]])",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bc06f4d4-803b-42a4-b372-a36d2f8d44a0",
                "parentUUID": "df9c1a21-02c0-4fb4-a73f-f5e097ca24da",
                "skipped": false,
                "isHook": false,
                "context": "\"#! ----------------------------\\n#! Cos[2 Re[z]] + Cosh[2 Im[z]]\\n#! ----------------------------\\n#! Cos[2 Re[z]] + Cosh[2 Im[z]]\\n# With RefLink[TargetFunctions,paclet:ref/TargetFunctions]->{RefLink[Abs,paclet:ref/Abs], RefLink[Arg,paclet:ref/Arg]}, the answer is given in terms of RefLink[Abs,paclet:ref/Abs][z] and RefLink[Arg,paclet:ref/Arg][z]:\\n\\n\\ndata: \\n  got:              Sin[2 Abs[z] Cos[Arg[z]]]\\n  expect:           Sin[2*Abs[z]*Cos[Arg[z]]]/(Cos[2*Abs[z]*Cos[Arg[z]]] + Cosh[2*Abs[z]*Sin[Arg[z]]])\\n  expect_evaluated: Sin[2 Abs[z] Cos[Arg[z]]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sin[2 Abs[z] Cos[Arg[z]]]",
                    "expected": "Sin[2*Abs[z]*Cos[Arg[z]]]/(Cos[2*Abs[z]*Cos[Arg[z]]] + Cosh[2*Abs[z]*Sin[Arg[z]]])"
                }
            },
            {
                "title": "ComplexExpand[Re[Tan[z]], z, TargetFunctions -> Conjugate]    ➡️     Sin[z + Conjugate[z]]/(Cos[z - Conjugate[z]] + Cos[z + Conjugate[z]])",
                "fullTitle": "ComplexExpand[Re[Tan[z]], z, TargetFunctions -> Conjugate]    ➡️     Sin[z + Conjugate[z]]/(Cos[z - Conjugate[z]] + Cos[z + Conjugate[z]])",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3190c32c-bd5c-455e-89ef-86b6919da90b",
                "parentUUID": "df9c1a21-02c0-4fb4-a73f-f5e097ca24da",
                "skipped": false,
                "isHook": false,
                "context": "\"#! ------------------------------------------------------\\n#! Cos[2 Abs[z] Cos[Arg[z]]] + Cosh[2 Abs[z] Sin[Arg[z]]]\\n#! ------------------------------------------------------\\n#! Cos[2 Abs[z] Cos[Arg[z]]] + Cosh[2 Abs[z] Sin[Arg[z]]]\\n# Use RefLink[Conjugate,paclet:ref/Conjugate] as the target function:\\n\\n\\ndata: \\n  got:              Sin[z + Conjugate[z]]\\n  expect:           Sin[z + Conjugate[z]]/(Cos[z - Conjugate[z]] + Cos[z + Conjugate[z]])\\n  expect_evaluated: Sin[z + Conjugate[z]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sin[z + Conjugate[z]]",
                    "expected": "Sin[z + Conjugate[z]]/(Cos[z - Conjugate[z]] + Cos[z + Conjugate[z]])"
                }
            },
            {
                "title": "ComplexExpand[Re[Sin[x + I*y]]]    ➡️     Cosh[y]*Sin[x]",
                "fullTitle": "ComplexExpand[Re[Sin[x + I*y]]]    ➡️     Cosh[y]*Sin[x]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "be3fcb38-b331-4215-bfc4-a8b4fb721b7c",
                "parentUUID": "df9c1a21-02c0-4fb4-a73f-f5e097ca24da",
                "skipped": false,
                "isHook": false,
                "context": "\"#! ---------------------------------------------\\n#! Cos[z - Conjugate[z]] + Cos[z + Conjugate[z]]\\n#! ---------------------------------------------\\n#! Cos[z - Conjugate[z]] + Cos[z + Conjugate[z]]\\n# This computes RefLink[Re,paclet:ref/Re][RefLink[Sin,paclet:ref/Sin][x+RefLink[I,paclet:ref/I] y]] assuming that x and y are real:\\n\\n\\ndata: \\n  got:              Cosh[y] Sin[x]\\n  expect:           Cosh[y]*Sin[x]\\n  expect_evaluated: Cosh[y] Sin[x]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Cosh[y] Sin[x]",
                    "expected": "Cosh[y]*Sin[x]"
                }
            },
            {
                "title": "TrigExpand[Sin[x + I*y]]    ➡️     Cosh[y]*Sin[x] + I*Cos[x]*Sinh[y]",
                "fullTitle": "TrigExpand[Sin[x + I*y]]    ➡️     Cosh[y]*Sin[x] + I*Cos[x]*Sinh[y]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8bf62968-6fca-4acd-b140-a7810c996365",
                "parentUUID": "df9c1a21-02c0-4fb4-a73f-f5e097ca24da",
                "skipped": false,
                "isHook": false,
                "context": "\"# The same computation can be done using RefLink[TrigExpand,paclet:ref/TrigExpand] and RefLink[Refine,paclet:ref/Refine]:\\n\\n\\ndata: \\n  got:              Cosh[y] Sin[x] + I Cos[x] Sinh[y]\\n  expect:           Cosh[y]*Sin[x] + I*Cos[x]*Sinh[y]\\n  expect_evaluated: Cosh[y] Sin[x] + I Cos[x] Sinh[y]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Cosh[y] Sin[x] + I Cos[x] Sinh[y]",
                    "expected": "Cosh[y]*Sin[x] + I*Cos[x]*Sinh[y]"
                }
            },
            {
                "title": "Refine[Re[%], Element[x | y, Reals]]    ➡️     Cosh[y]*Sin[x]",
                "fullTitle": "Refine[Re[%], Element[x | y, Reals]]    ➡️     Cosh[y]*Sin[x]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cc8cefad-d5e5-447e-a28c-10eee47ee79f",
                "parentUUID": "df9c1a21-02c0-4fb4-a73f-f5e097ca24da",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "f4482359-725b-4590-b72b-c4f2bba360bf",
            "4f7a7f08-81e6-49a1-bc3d-57bc83ddcd84",
            "8e606d9c-6d2e-4e78-bf70-ad9274bc0041",
            "c3f304ab-6839-44a0-8738-efd73d68c765",
            "0de5e374-db7c-4bfa-b701-255163c195e7",
            "3b78f7c6-4af5-49fe-b8d4-7dd6d53841cc",
            "2f4c00e6-2887-421e-ba08-4f2edf6a6474",
            "bba05cc1-e9b5-45dd-9497-2d8c66a05af2",
            "bc06f4d4-803b-42a4-b372-a36d2f8d44a0",
            "3190c32c-bd5c-455e-89ef-86b6919da90b",
            "be3fcb38-b331-4215-bfc4-a8b4fb721b7c",
            "8bf62968-6fca-4acd-b140-a7810c996365",
            "cc8cefad-d5e5-447e-a28c-10eee47ee79f"
        ],
        "failures": [],
        "skipped": [
            "cc8cefad-d5e5-447e-a28c-10eee47ee79f"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "df9c1a21-02c0-4fb4-a73f-f5e097ca24da",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
