{
    "stats": {
        "suites": 0,
        "tests": 16,
        "passes": 16,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-11T04:14:45.125Z",
        "end": "2018-06-11T04:14:45.125Z",
        "duration": 0,
        "testsRegistered": 16,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "$Failed    ➡️     HoldComplete[b]",
                "fullTitle": "$Failed    ➡️     HoldComplete[b]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8e7e633b-1812-4b0b-98e0-dc58fceb384f",
                "parentUUID": "40bcca59-4bbf-4ba0-9de3-2fec1109ed39",
                "skipped": true,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/Which_Tests.m\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Piecewise, pairs], StringForm[The first argument `1` of Piecewise is not a list of pairs., Short[HoldForm[-1], 3]]]]\\n#! TextForm[ColonForm[MessageName[Piecewise, pairs], StringForm[The first argument `1` of Piecewise is not a list of pairs., Short[HoldForm[a1], 3]]]]\\n#! TextForm[ColonForm[MessageName[Piecewise, pairs], StringForm[The first argument `1` of Piecewise is not a list of pairs., Short[HoldForm[a2!], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[Piecewise, pairs]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: Which_Tests\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Which[a == 1, x, a == 2, b]    ➡️     Which[a == 1, x, a == 2, b]",
                "fullTitle": "Which[a == 1, x, a == 2, b]    ➡️     Which[a == 1, x, a == 2, b]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bd76df47-9a10-4d3f-a6b3-3f86c8a582a8",
                "parentUUID": "40bcca59-4bbf-4ba0-9de3-2fec1109ed39",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Which,paclet:ref/Which] can be maintained in symbolic form:\\n\\n\\ndata: \\n  got:              Which[a == 1, x, a == 2, b]\\n  expect:           Which[a == 1, x, a == 2, b]\\n  expect_evaluated: Which[a == 1, x, a == 2, b]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Which[a == 1, x, a == 2, b]",
                    "expected": "Which[a == 1, x, a == 2, b]"
                }
            },
            {
                "title": "% /. a -> 2    ➡️     b",
                "fullTitle": "% /. a -> 2    ➡️     b",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8af93343-925b-479d-81cd-689559026e28",
                "parentUUID": "40bcca59-4bbf-4ba0-9de3-2fec1109ed39",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Which[1 < 0, a, x == 0, b, 0 < 1, c]    ➡️     Which[x == 0, b, 0 < 1, c]",
                "fullTitle": "Which[1 < 0, a, x == 0, b, 0 < 1, c]    ➡️     Which[x == 0, b, 0 < 1, c]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "08385fcf-e807-4e6a-ae65-9586edf1d3a1",
                "parentUUID": "40bcca59-4bbf-4ba0-9de3-2fec1109ed39",
                "skipped": false,
                "isHook": false,
                "context": "\"# Conditions are evaluated until one is found that is neither RefLink[True,paclet:ref/True] nor RefLink[False,paclet:ref/False]:\\n\\n\\ndata: \\n  got:              Which[x == 0, b, 0 < 1, c]\\n  expect:           Which[x == 0, b, 0 < 1, c]\\n  expect_evaluated: Which[x == 0, b, 0 < 1, c]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Which[x == 0, b, 0 < 1, c]",
                    "expected": "Which[x == 0, b, 0 < 1, c]"
                }
            },
            {
                "title": "sign[x_] := Which[x < 0, -1, x > 0, 1, True, Indeterminate]; sign /@ {-2, 0, 3}    ➡️     {-1, Indeterminate, 1}",
                "fullTitle": "sign[x_] := Which[x < 0, -1, x > 0, 1, True, Indeterminate]; sign /@ {-2, 0, 3}    ➡️     {-1, Indeterminate, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2e433059-468a-4d3d-9396-d1037b8cf8dd",
                "parentUUID": "40bcca59-4bbf-4ba0-9de3-2fec1109ed39",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[True,paclet:ref/True] for an else clause that always matches:\\n\\n\\ndata: \\n  got: \\n    1:             null\\n    -1:            null\\n    Indeterminate: null\\n  expect: \\n    1:             null\\n    -1:            null\\n    Indeterminate: null\\n  expect_evaluated: \\n    1:             null\\n    -1:            null\\n    Indeterminate: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "-1": null,
                        "Indeterminate": null
                    },
                    "expected": {
                        "1": null,
                        "-1": null,
                        "Indeterminate": null
                    }
                }
            },
            {
                "title": "f = Which[x < -(Pi/2), -1, -(Pi/2) <= x <= Pi/2, Sin[x], True, 1]    ➡️     Which[x < -(Pi/2), -1, -(Pi/2) <= x <= Pi/2, Sin[x], True, 1]",
                "fullTitle": "f = Which[x < -(Pi/2), -1, -(Pi/2) <= x <= Pi/2, Sin[x], True, 1]    ➡️     Which[x < -(Pi/2), -1, -(Pi/2) <= x <= Pi/2, Sin[x], True, 1]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e50ed398-e238-47e2-8720-d4d6b9204e21",
                "parentUUID": "40bcca59-4bbf-4ba0-9de3-2fec1109ed39",
                "skipped": false,
                "isHook": false,
                "context": "\"# Define a piecewise function:\\n\\n\\ndata: \\n  got:              -Pi        Pi          Pi\\n  expect:           Which[x < -(Pi/2), -1, -(Pi/2) <= x <= Pi/2, Sin[x], True, 1]\\n  expect_evaluated: -Pi        Pi          Pi\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "-Pi        Pi          Pi",
                    "expected": "Which[x < -(Pi/2), -1, -(Pi/2) <= x <= Pi/2, Sin[x], True, 1]"
                }
            },
            {
                "title": "PiecewiseExpand[f]    ➡️     Inequality[Piecewise[-1]*x, Less, (-(Pi/2))*1*x, Greater, (Pi/2)*Sin[x]*True]",
                "fullTitle": "PiecewiseExpand[f]    ➡️     Inequality[Piecewise[-1]*x, Less, (-(Pi/2))*1*x, Greater, (Pi/2)*Sin[x]*True]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "04bbde48-ed41-44b2-a900-ab75680641a5",
                "parentUUID": "40bcca59-4bbf-4ba0-9de3-2fec1109ed39",
                "skipped": true,
                "isHook": false,
                "context": "\"#! Which[x < ---, -1, -(--) <= x <= --, Sin[x], True, 1]\\n#!            2         2           2\\n#! Which[x < ---, -1, -(--) <= x <= --, Sin[x], True, 1]\\n#!            2         2           2\\n# Expand it to use RefLink[Piecewise,paclet:ref/Piecewise]: \\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[f == 1/2, x]    ➡️     x == Pi/6",
                "fullTitle": "Reduce[f == 1/2, x]    ➡️     x == Pi/6",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3e10077e-c208-4fd0-aa4f-b78602e9ee84",
                "parentUUID": "40bcca59-4bbf-4ba0-9de3-2fec1109ed39",
                "skipped": false,
                "isHook": false,
                "context": "\"# Do symbolic operations: \\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Integrate[f, {x, 0, 3}]    ➡️     (8 - Pi)/2",
                "fullTitle": "Integrate[f, {x, 0, 3}]    ➡️     (8 - Pi)/2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f84c0c1c-ecb2-4bd2-9117-c4a8b6576124",
                "parentUUID": "40bcca59-4bbf-4ba0-9de3-2fec1109ed39",
                "skipped": false,
                "isHook": false,
                "context": "\"#! x == --\\n#! x == --\\n\\n\\ndata: \\n  got:              8 - Pi\\n  expect:           (8 - Pi)/2\\n  expect_evaluated: 8 - Pi\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "8 - Pi",
                    "expected": "(8 - Pi)/2"
                }
            },
            {
                "title": "D[f, x]    ➡️     Which[x < -(Pi/2), 0, -(Pi/2) <= x <= Pi/2, Cos[x], True, 0]",
                "fullTitle": "D[f, x]    ➡️     Which[x < -(Pi/2), 0, -(Pi/2) <= x <= Pi/2, Cos[x], True, 0]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "88a6a8e6-77b3-4521-b38e-79c7d0736de8",
                "parentUUID": "40bcca59-4bbf-4ba0-9de3-2fec1109ed39",
                "skipped": false,
                "isHook": false,
                "context": "\"#! ------\\n#!   2\\n#! ------\\n#!   2\\n\\n\\ndata: \\n  got:              -Pi       Pi          Pi\\n  expect:           Which[x < -(Pi/2), 0, -(Pi/2) <= x <= Pi/2, Cos[x], True, 0]\\n  expect_evaluated: -Pi       Pi          Pi\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "-Pi       Pi          Pi",
                    "expected": "Which[x < -(Pi/2), 0, -(Pi/2) <= x <= Pi/2, Cos[x], True, 0]"
                }
            },
            {
                "title": "HoldComplete[Plot[f, {x, -Pi, Pi}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[Plot[f, {x, -Pi, Pi}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9a8f7019-d5a3-45e8-8fb2-88deb14ed906",
                "parentUUID": "40bcca59-4bbf-4ba0-9de3-2fec1109ed39",
                "skipped": true,
                "isHook": false,
                "context": "\"#! Which[x < ---, 0, -(--) <= x <= --, Cos[x], True, 0]\\n#!            2        2           2\\n#! Which[x < ---, 0, -(--) <= x <= --, Cos[x], True, 0]\\n#!            2        2           2\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "cut1[x_] := If[x < -1, -1, If[x < 1, x, 1]]; cut1 /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "fullTitle": "cut1[x_] := If[x < -1, -1, If[x < 1, x, 1]]; cut1 /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "07315abe-8653-43e9-b7ad-4c9b5668eb7a",
                "parentUUID": "40bcca59-4bbf-4ba0-9de3-2fec1109ed39",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Which,paclet:ref/Which] rather than a nested if-then-elsif chain:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "cut2[x_] := Which[x < -1, -1, x < 1, x, True, 1]; cut2 /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "fullTitle": "cut2[x_] := Which[x < -1, -1, x < 1, x, True, 1]; cut2 /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b47a0ea0-1c86-4209-95d3-a4454912a637",
                "parentUUID": "40bcca59-4bbf-4ba0-9de3-2fec1109ed39",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PiecewiseExpand[Which[c1, a1, c2, a2, True, a3]]    ➡️     Piecewise[a1]*c1*a2!*c1 && c2*a3*True",
                "fullTitle": "PiecewiseExpand[Which[c1, a1, c2, a2, True, a3]]    ➡️     Piecewise[a1]*c1*a2!*c1 && c2*a3*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "15cd802d-5394-4a2c-a01c-3088ea3b638e",
                "parentUUID": "40bcca59-4bbf-4ba0-9de3-2fec1109ed39",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[PiecewiseExpand,paclet:ref/PiecewiseExpand] to convert RefLink[Which,paclet:ref/Which] to RefLink[Piecewise,paclet:ref/Piecewise]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PiecewiseExpand[Which[c1, Which[d1, b1, True, b2], True, a2]]    ➡️     Piecewise[a2!]*c1*b1*c1 && d1*b2*True",
                "fullTitle": "PiecewiseExpand[Which[c1, Which[d1, b1, True, b2], True, a2]]    ➡️     Piecewise[a2!]*c1*b1*c1 && d1*b2*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ff397d57-6ab6-4c24-86f9-bbc1938bdb42",
                "parentUUID": "40bcca59-4bbf-4ba0-9de3-2fec1109ed39",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PiecewiseExpand[Which[Which[d1, b1, True, b2], a1, True, a2]]    ➡️     Piecewise[a1]*(b1 && d1) || (b2 &&  !d1)*a2*True",
                "fullTitle": "PiecewiseExpand[Which[Which[d1, b1, True, b2], a1, True, a2]]    ➡️     Piecewise[a1]*(b1 && d1) || (b2 &&  !d1)*a2*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9f8b9c27-76eb-475b-b352-84dbcf890227",
                "parentUUID": "40bcca59-4bbf-4ba0-9de3-2fec1109ed39",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "8e7e633b-1812-4b0b-98e0-dc58fceb384f",
            "bd76df47-9a10-4d3f-a6b3-3f86c8a582a8",
            "8af93343-925b-479d-81cd-689559026e28",
            "08385fcf-e807-4e6a-ae65-9586edf1d3a1",
            "2e433059-468a-4d3d-9396-d1037b8cf8dd",
            "e50ed398-e238-47e2-8720-d4d6b9204e21",
            "04bbde48-ed41-44b2-a900-ab75680641a5",
            "3e10077e-c208-4fd0-aa4f-b78602e9ee84",
            "f84c0c1c-ecb2-4bd2-9117-c4a8b6576124",
            "88a6a8e6-77b3-4521-b38e-79c7d0736de8",
            "9a8f7019-d5a3-45e8-8fb2-88deb14ed906",
            "07315abe-8653-43e9-b7ad-4c9b5668eb7a",
            "b47a0ea0-1c86-4209-95d3-a4454912a637",
            "15cd802d-5394-4a2c-a01c-3088ea3b638e",
            "ff397d57-6ab6-4c24-86f9-bbc1938bdb42",
            "9f8b9c27-76eb-475b-b352-84dbcf890227"
        ],
        "failures": [],
        "skipped": [
            "8e7e633b-1812-4b0b-98e0-dc58fceb384f",
            "8af93343-925b-479d-81cd-689559026e28",
            "04bbde48-ed41-44b2-a900-ab75680641a5",
            "9a8f7019-d5a3-45e8-8fb2-88deb14ed906",
            "15cd802d-5394-4a2c-a01c-3088ea3b638e",
            "ff397d57-6ab6-4c24-86f9-bbc1938bdb42",
            "9f8b9c27-76eb-475b-b352-84dbcf890227"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "40bcca59-4bbf-4ba0-9de3-2fec1109ed39",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
