#! DOCKER > wolfram -script output/Tests/All_Tests.m
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
# SYSTEM: Mathematica_10
# TEST: All_Tests
# Use RefLink[Part,paclet:ref/Part] to extract the first column vector: 
ok  {{1, 2}, {3, 4}}[[All,1]]    ==>     {1, 3}
    ---
    data:
        got: {1, 3}
        expect: {1, 3}
        expect_evaluated: {1, 3}
    ...
# Use RefLink[Take,paclet:ref/Take] to extract the column matrix: 
ok  Take[{{1, 2}, {3, 4}}, All, {1}]    ==>     {{1}, {3}}
    ---
    data:
        got: {{1}, {3}}
        expect: {{1}, {3}}
        expect_evaluated: {{1}, {3}}
    ...
# Normally, plots drop outlying points:
ok  HoldComplete[Plot3D[Exp[-x^2 - y^2], {x, -3, 3}, {y, -3, 3}]]    ==>     $Failed # skip
# Choose the range to show all the existing points:
ok  HoldComplete[Plot3D[Exp[-x^2 - y^2], {x, -3, 3}, {y, -3, 3}, PlotRange -> All]]    ==>     $Failed # skip
