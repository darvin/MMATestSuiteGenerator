{
    "stats": {
        "suites": 0,
        "tests": 38,
        "passes": 38,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T23:02:31.608Z",
        "end": "2018-06-03T23:02:31.608Z",
        "duration": 0,
        "testsRegistered": 38,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "a != b    ➡️     a != b",
                "fullTitle": "a != b    ➡️     a != b",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3f2753cc-10b8-455a-a16c-db3fbbb1f67b",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/Unequal_Tests.m\\n#! TextForm[ColonForm[MessageName[PossibleZeroQ, ztest1], StringForm[Unable to decide whether numeric quantity `1` is equal to zero. Assuming it is., Short[HoldForm[Log[Sqrt[2] + Sqrt[3]] - Log[5 + 2*Sqrt[6]]/2], 3]]]]\\n#! TextForm[ColonForm[MessageName[PossibleZeroQ, ztest1], StringForm[Unable to decide whether numeric quantity `1` is equal to zero. Assuming it is., Short[HoldForm[1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Log[Sqrt[2] + Sqrt[3]] - Log[5 + 2*Sqrt[6]]/2], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: Unequal_Tests\\n# Returns RefLink[True,paclet:ref/True] if elements are guaranteed unequal, and otherwise stays unevaluated:\\n\\n\\ndata: \\n  got:              a != b\\n  expect:           a != b\\n  expect_evaluated: a != b\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a != b",
                    "expected": "a != b"
                }
            },
            {
                "title": "1 != 2    ➡️     True",
                "fullTitle": "1 != 2    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d2a99eeb-58cd-48da-91b2-08fbcfd3a086",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter as !=\\\\[ThinSpace] or as Esc\\\\[ThinSpace]\\\\[ThinSpace]!=\\\\[ThinSpace]\\\\[ThinSpace]Esc:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "3/2 != 5/3    ➡️     True",
                "fullTitle": "3/2 != 5/3    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7c45aed9-5820-4419-97eb-41113a6f3d6d",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test unequality of numbers:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "1. != 1. + 2^7/10^16    ➡️     False",
                "fullTitle": "1. != 1. + 2^7/10^16    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "229dba44-839c-4b7f-b2c3-b5cf68b90f5c",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# Approximate numbers that differ in at most their last eight binary digits are considered equal:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "1. != 1. + 2^8/10^16    ➡️     True",
                "fullTitle": "1. != 1. + 2^8/10^16    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "87b8d9c6-62ae-4002-897b-fa97c24021b2",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "N[Pi, 20] != Pi    ➡️     False",
                "fullTitle": "N[Pi, 20] != Pi    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c9361463-0382-4bcc-a292-6cc3346529e6",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare an exact numeric expression and an approximate number:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "N[Pi, 20] != Pi*(1 + 2^8/10^20)    ➡️     True",
                "fullTitle": "N[Pi, 20] != Pi*(1 + 2^8/10^20)    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a1d8f3c0-2afe-4699-a92c-79e7bd2017a9",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Pi^E != E^Pi    ➡️     True",
                "fullTitle": "Pi^E != E^Pi    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5caa8c75-782b-4367-a671-3fd41c240a5f",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare two exact numeric expressions; a numeric test may suffice to prove unequality:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Sqrt[2] + Sqrt[3] != Sqrt[5 + 2*Sqrt[6]]    ➡️     False",
                "fullTitle": "Sqrt[2] + Sqrt[3] != Sqrt[5 + 2*Sqrt[6]]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8a6168a8-19e7-4ee6-9bb6-99478ffbf28a",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# Proving equality requires symbolic methods:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4]    ➡️     Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 + #1^4 & , 4]",
                "fullTitle": "Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4]    ➡️     Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 + #1^4 & , 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d6de1bb8-0c46-499b-941d-1f997dd5c3ff",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# Symbolic methods used by RefLink[Unequal,paclet:ref/Unequal] are insufficient to prove this RefLink[False,paclet:ref/False]:\\n\\n\\ndata: \\n  got:              Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 +\\n  expect:           Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 +\\n  expect_evaluated: Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 +\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 +",
                    "expected": "Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 +"
                }
            },
            {
                "title": "RootReduce[%]    ➡️     False",
                "fullTitle": "RootReduce[%]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "adf062e1-4e1d-4bc0-8307-f656b9e3361c",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[RootReduce,paclet:ref/RootReduce] to decide whether two algebraic numbers are unequal:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)    ➡️     Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 + #1^4 & , 4]",
                "fullTitle": "Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)    ➡️     Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 + #1^4 & , 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "99e2e309-ae17-407e-ad9e-7c052a426328",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numeric methods used by RefLink[Unequal,paclet:ref/Unequal] do not use sufficient precision to prove this unequality:\\n\\n\\ndata: \\n  got:              Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\\n  expect:           Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\\n  expect_evaluated: Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +",
                    "expected": "Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +"
                }
            },
            {
                "title": "RootReduce[%]    ➡️     True",
                "fullTitle": "RootReduce[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3ed36ec9-bb73-4fbf-86fb-1744f01b129e",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[RootReduce,paclet:ref/RootReduce] proves that the two algebraic numbers are not equal:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Block[{$MaxExtraPrecision = 100}, Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)]    ➡️     True",
                "fullTitle": "Block[{$MaxExtraPrecision = 100}, Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9cc34a9d-198b-4715-8df5-b485363bf0f6",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# Increasing RefLink[$MaxExtraPrecision,paclet:ref/$MaxExtraPrecision] may also prove unequality:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x != x    ➡️     False",
                "fullTitle": "x != x    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3fd53210-88bc-4192-ba83-9314796605b9",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# This symbolic unequality is always RefLink[False,paclet:ref/False]:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "(x + 1)^2 - x^2 - 2*x != 0    ➡️     -2*x - x^2 + (1 + x)^2 != 0",
                "fullTitle": "(x + 1)^2 - x^2 - 2*x != 0    ➡️     -2*x - x^2 + (1 + x)^2 != 0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "35589f64-183b-4864-a0eb-d6f0bb33d3c9",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Unequal,paclet:ref/Unequal] does not automatically prove this unequality:\\n\\n\\ndata: \\n  got:              -2*x - x^2 + (1 + x)^2 != 0\\n  expect:           -2*x - x^2 + (1 + x)^2 != 0\\n  expect_evaluated: -2*x - x^2 + (1 + x)^2 != 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "-2*x - x^2 + (1 + x)^2 != 0",
                    "expected": "-2*x - x^2 + (1 + x)^2 != 0"
                }
            },
            {
                "title": "Expand[%]    ➡️     True",
                "fullTitle": "Expand[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "780e4591-a6c8-4e5f-aa48-a3f45789d823",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[Expand,paclet:ref/Expand] to prove it:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "3 != 4 != 5    ➡️     True",
                "fullTitle": "3 != 4 != 5    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "38ac8a20-888e-49a1-a10b-f4232a81854a",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare more than two expressions:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x != y != z != t    ➡️     x != y != z != t",
                "fullTitle": "x != y != z != t    ➡️     x != y != z != t",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5cae8867-e3c6-4752-99d1-99f69d02a842",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              x != y != z != t\\n  expect:           x != y != z != t\\n  expect_evaluated: x != y != z != t\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x != y != z != t",
                    "expected": "x != y != z != t"
                }
            },
            {
                "title": "{1, 2} != {1, 2}    ➡️     False",
                "fullTitle": "{1, 2} != {1, 2}    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "62eb893f-5e67-41e2-b98d-7f807b0249d1",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare lists:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "{a, b, c} != {d, e}    ➡️     True",
                "fullTitle": "{a, b, c} != {d, e}    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "30f3e108-b968-4c4c-a8f1-57b7d1dfdcb6",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "\"abc\" != \"ABC\"    ➡️     True",
                "fullTitle": "\"abc\" != \"ABC\"    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d061d8f2-78a6-4d1a-9f39-2e8e7921cd0e",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare strings:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "!x != y    ➡️     x == y",
                "fullTitle": "!x != y    ➡️     x == y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d20352f3-b43e-4479-84b4-cb48be8c5ee3",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of two-argument RefLink[Unequal,paclet:ref/Unequal] is RefLink[Equal,paclet:ref/Equal]:\\n\\n\\ndata: \\n  got:              x == y\\n  expect:           x == y\\n  expect_evaluated: x == y\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x == y",
                    "expected": "x == y"
                }
            },
            {
                "title": "!x != y != z    ➡️      !x != y != z",
                "fullTitle": "!x != y != z    ➡️      !x != y != z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "32d11b16-23ac-4308-8429-96acb429546b",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of three-argument RefLink[Unequal,paclet:ref/Unequal] does not simplify automatically:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[%]    ➡️     y == x || z == x || z == y",
                "fullTitle": "LogicalExpand[%]    ➡️     y == x || z == x || z == y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c8be477f-a78d-4058-89ea-9f2ba500eb49",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[LogicalExpand,paclet:ref/LogicalExpand] to express it in terms of two-argument RefLink[Equal,paclet:ref/Equal]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[x == y == z]    ➡️     y == x && z == x",
                "fullTitle": "LogicalExpand[x == y == z]    ➡️     y == x && z == x",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ad71ec73-90ab-4a63-9045-692f97fa746e",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of three-argument RefLink[Unequal,paclet:ref/Unequal] is not equivalent to three-argument RefLink[Equal,paclet:ref/Equal]:\\n\\n\\ndata: \\n  got:              y == x && z == x\\n  expect:           y == x && z == x\\n  expect_evaluated: y == x && z == x\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "y == x && z == x",
                    "expected": "y == x && z == x"
                }
            },
            {
                "title": "{x != x, x != y, Sqrt[2] + Sqrt[3] != Sqrt[5 + 2*Sqrt[6]], Pi != N[Pi]}    ➡️     {False, x != y, False, False}",
                "fullTitle": "{x != x, x != y, Sqrt[2] + Sqrt[3] != Sqrt[5 + 2*Sqrt[6]], Pi != N[Pi]}    ➡️     {False, x != y, False, False}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d5e0607f-f0e5-45e7-9e18-6a53081a5171",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Unequal,paclet:ref/Unequal] tests mathematical unequality of objects represented by expressions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{x =!= x, x =!= y, Sqrt[2] + Sqrt[3] =!= Sqrt[5 + 2*Sqrt[6]], Pi =!= N[Pi]}    ➡️     {False, True, True, True}",
                "fullTitle": "{x =!= x, x =!= y, Sqrt[2] + Sqrt[3] =!= Sqrt[5 + 2*Sqrt[6]], Pi =!= N[Pi]}    ➡️     {False, True, True, True}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "05107f52-093b-461f-b5f0-8ae5f8693cbf",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[UnsameQ,paclet:ref/UnsameQ] tests syntactic unequality of expressions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "a = Log[Sqrt[2] + Sqrt[3]]; b = Log[5 + 2*Sqrt[6]]/2; a != b    ➡️     Log[Sqrt[2] + Sqrt[3]] != (1/2)*Log[5 + 2*Sqrt[6]]",
                "fullTitle": "a = Log[Sqrt[2] + Sqrt[3]]; b = Log[5 + 2*Sqrt[6]]/2; a != b    ➡️     Log[Sqrt[2] + Sqrt[3]] != (1/2)*Log[5 + 2*Sqrt[6]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bfc62678-2819-4d35-8826-a94db9a29405",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# When RefLink[Unequal,paclet:ref/Unequal] cannot decide whether two numeric expressions are equal it returns unchanged:\\n\\n\\ndata: \\n  got:              Log[Sqrt[2] + Sqrt[3]] != Log[5 + 2*Sqrt[6]]/2\\n  expect:           Log[Sqrt[2] + Sqrt[3]] != (1/2)*Log[5 + 2*Sqrt[6]]\\n  expect_evaluated: Log[Sqrt[2] + Sqrt[3]] != Log[5 + 2*Sqrt[6]]/2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Log[Sqrt[2] + Sqrt[3]] != Log[5 + 2*Sqrt[6]]/2",
                    "expected": "Log[Sqrt[2] + Sqrt[3]] != (1/2)*Log[5 + 2*Sqrt[6]]"
                }
            },
            {
                "title": "FullSimplify[a != b]    ➡️     False",
                "fullTitle": "FullSimplify[a != b]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2d9a800f-fb00-4b55-9200-8da80542b534",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[FullSimplify,paclet:ref/FullSimplify] uses exact symbolic transformations to disprove the unequality:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "PossibleZeroQ[a - b]    ➡️     True",
                "fullTitle": "PossibleZeroQ[a - b]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0ca2e00f-5dfd-4fca-8eb3-60915dbf444a",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] uses numeric and symbolic heuristics to decide whether an expression is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[a - b + 10^(-100)]    ➡️     True",
                "fullTitle": "PossibleZeroQ[a - b + 10^(-100)]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9852ccc9-b0fb-4bfe-9c08-5a437f39dac5",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numeric methods used by RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] may incorrectly decide that a number is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "2.00006 - 2.00005 != 0.00001    ➡️     True",
                "fullTitle": "2.00006 - 2.00005 != 0.00001    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "27e0c001-3bbe-4d4a-8f2a-c25446483716",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# Unequality for machine-precision approximate numbers can be subtle: \\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "InputForm[2.00006 - 2.00005]    ➡️     0.000010000000000065512",
                "fullTitle": "InputForm[2.00006 - 2.00005]    ➡️     0.000010000000000065512",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cc344b44-43da-49e8-bf54-9e5a55b95f39",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": true,
                "isHook": false,
                "context": "\"# The extra digits disrupt equality:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "2.00006`16. - 2.00005000000000000000000000001`16. != 1.`16.*^-5    ➡️     False",
                "fullTitle": "2.00006`16. - 2.00005000000000000000000000001`16. != 1.`16.*^-5    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3e33f309-cd2c-430f-b9a1-fdc04bac8235",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# Arbitrary-precision approximate numbers do not have this problem:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Precision[2.00006`16. - 2.00005000000000000000000000001`16.]    ➡️     10.3979",
                "fullTitle": "Precision[2.00006`16. - 2.00005000000000000000000000001`16.]    ➡️     10.3979",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cfe84fba-81a7-49c1-80e5-084f3fb7daeb",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": true,
                "isHook": false,
                "context": "\"# Thanks to automatic-precision tracking, RefLink[Unequal,paclet:ref/Unequal] knows to look only at the first 10 digits:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "2.6 - 2.5 != 0.1    ➡️     False",
                "fullTitle": "2.6 - 2.5 != 0.1    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "08b86812-471b-47ca-abd6-471988f2aabc",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": false,
                "isHook": false,
                "context": "\"# In this case, the unequality test for machine numbers gives the expected result:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "InputForm[2.6 - 2.5]    ➡️     0.10000000000000009",
                "fullTitle": "InputForm[2.6 - 2.5]    ➡️     0.10000000000000009",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8702d507-bb75-44ad-8747-e96e856044d8",
                "parentUUID": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
                "skipped": true,
                "isHook": false,
                "context": "\"# The extra digits in this case are ignored by RefLink[Unequal,paclet:ref/Unequal]:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "3f2753cc-10b8-455a-a16c-db3fbbb1f67b",
            "d2a99eeb-58cd-48da-91b2-08fbcfd3a086",
            "7c45aed9-5820-4419-97eb-41113a6f3d6d",
            "229dba44-839c-4b7f-b2c3-b5cf68b90f5c",
            "87b8d9c6-62ae-4002-897b-fa97c24021b2",
            "c9361463-0382-4bcc-a292-6cc3346529e6",
            "a1d8f3c0-2afe-4699-a92c-79e7bd2017a9",
            "5caa8c75-782b-4367-a671-3fd41c240a5f",
            "8a6168a8-19e7-4ee6-9bb6-99478ffbf28a",
            "d6de1bb8-0c46-499b-941d-1f997dd5c3ff",
            "adf062e1-4e1d-4bc0-8307-f656b9e3361c",
            "99e2e309-ae17-407e-ad9e-7c052a426328",
            "3ed36ec9-bb73-4fbf-86fb-1744f01b129e",
            "9cc34a9d-198b-4715-8df5-b485363bf0f6",
            "3fd53210-88bc-4192-ba83-9314796605b9",
            "35589f64-183b-4864-a0eb-d6f0bb33d3c9",
            "780e4591-a6c8-4e5f-aa48-a3f45789d823",
            "38ac8a20-888e-49a1-a10b-f4232a81854a",
            "5cae8867-e3c6-4752-99d1-99f69d02a842",
            "62eb893f-5e67-41e2-b98d-7f807b0249d1",
            "30f3e108-b968-4c4c-a8f1-57b7d1dfdcb6",
            "d061d8f2-78a6-4d1a-9f39-2e8e7921cd0e",
            "d20352f3-b43e-4479-84b4-cb48be8c5ee3",
            "32d11b16-23ac-4308-8429-96acb429546b",
            "c8be477f-a78d-4058-89ea-9f2ba500eb49",
            "ad71ec73-90ab-4a63-9045-692f97fa746e",
            "d5e0607f-f0e5-45e7-9e18-6a53081a5171",
            "05107f52-093b-461f-b5f0-8ae5f8693cbf",
            "bfc62678-2819-4d35-8826-a94db9a29405",
            "2d9a800f-fb00-4b55-9200-8da80542b534",
            "0ca2e00f-5dfd-4fca-8eb3-60915dbf444a",
            "9852ccc9-b0fb-4bfe-9c08-5a437f39dac5",
            "27e0c001-3bbe-4d4a-8f2a-c25446483716",
            "cc344b44-43da-49e8-bf54-9e5a55b95f39",
            "3e33f309-cd2c-430f-b9a1-fdc04bac8235",
            "cfe84fba-81a7-49c1-80e5-084f3fb7daeb",
            "08b86812-471b-47ca-abd6-471988f2aabc",
            "8702d507-bb75-44ad-8747-e96e856044d8"
        ],
        "failures": [],
        "skipped": [
            "adf062e1-4e1d-4bc0-8307-f656b9e3361c",
            "3ed36ec9-bb73-4fbf-86fb-1744f01b129e",
            "780e4591-a6c8-4e5f-aa48-a3f45789d823",
            "c8be477f-a78d-4058-89ea-9f2ba500eb49",
            "cc344b44-43da-49e8-bf54-9e5a55b95f39",
            "cfe84fba-81a7-49c1-80e5-084f3fb7daeb",
            "8702d507-bb75-44ad-8747-e96e856044d8"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "d81b3232-8c9e-43c1-8f7a-d1262da6c4ef",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
