{
    "stats": {
        "suites": 0,
        "tests": 38,
        "passes": 38,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-11T04:14:42.461Z",
        "end": "2018-06-11T04:14:42.461Z",
        "duration": 0,
        "testsRegistered": 38,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "a != b    ➡️     a != b",
                "fullTitle": "a != b    ➡️     a != b",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9d1f26ba-967f-4835-812a-45896c623042",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/Unequal_Tests.m\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n#! TextForm[ColonForm[MessageName[PossibleZeroQ, ztest1], StringForm[Unable to decide whether numeric quantity `1` is equal to zero. Assuming it is., Short[HoldForm[Log[Sqrt[2] + Sqrt[3]] - Log[5 + 2*Sqrt[6]]/2], 3]]]]\\n#! TextForm[ColonForm[MessageName[PossibleZeroQ, ztest1], StringForm[Unable to decide whether numeric quantity `1` is equal to zero. Assuming it is., Short[HoldForm[1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Log[Sqrt[2] + Sqrt[3]] - Log[5 + 2*Sqrt[6]]/2], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: Unequal_Tests\\n# Returns RefLink[True,paclet:ref/True] if elements are guaranteed unequal, and otherwise stays unevaluated:\\n\\n\\ndata: \\n  got:              a != b\\n  expect:           a != b\\n  expect_evaluated: a != b\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a != b",
                    "expected": "a != b"
                }
            },
            {
                "title": "1 != 2    ➡️     True",
                "fullTitle": "1 != 2    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2842df9d-63fc-4eea-a032-930ada6aa63f",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter as !=\\\\[ThinSpace] or as Esc\\\\[ThinSpace]\\\\[ThinSpace]!=\\\\[ThinSpace]\\\\[ThinSpace]Esc:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "3/2 != 5/3    ➡️     True",
                "fullTitle": "3/2 != 5/3    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9f107adf-9cf7-4e61-b20a-0dc52d5b6599",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test unequality of numbers:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "1. != 1. + 2^7/10^16    ➡️     False",
                "fullTitle": "1. != 1. + 2^7/10^16    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c99161ed-c615-47a2-b41a-229fe0eac697",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# Approximate numbers that differ in at most their last eight binary digits are considered equal:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "1. != 1. + 2^8/10^16    ➡️     True",
                "fullTitle": "1. != 1. + 2^8/10^16    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "54d6f91f-dcea-468c-b643-8790205b3806",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "N[Pi, 20] != Pi    ➡️     False",
                "fullTitle": "N[Pi, 20] != Pi    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "129ba982-9e00-4346-ae4b-71b7e787070a",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare an exact numeric expression and an approximate number:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "N[Pi, 20] != Pi*(1 + 2^8/10^20)    ➡️     True",
                "fullTitle": "N[Pi, 20] != Pi*(1 + 2^8/10^20)    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "15e7eed1-ea8c-49a6-8c55-89997549bec7",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Pi^E != E^Pi    ➡️     True",
                "fullTitle": "Pi^E != E^Pi    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b034f4a2-0704-4961-a332-5a201dee65ab",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare two exact numeric expressions; a numeric test may suffice to prove unequality:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Sqrt[2] + Sqrt[3] != Sqrt[5 + 2*Sqrt[6]]    ➡️     False",
                "fullTitle": "Sqrt[2] + Sqrt[3] != Sqrt[5 + 2*Sqrt[6]]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "44fb5228-5b1d-4da3-a798-511c03366a9b",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# Proving equality requires symbolic methods:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4]    ➡️     Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 + #1^4 & , 4]",
                "fullTitle": "Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4]    ➡️     Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 + #1^4 & , 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "56cbc357-c252-47d0-9612-cb5162231991",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# Symbolic methods used by RefLink[Unequal,paclet:ref/Unequal] are insufficient to prove this RefLink[False,paclet:ref/False]:\\n\\n\\ndata: \\n  got:              2     4\\n  expect:           Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 +\\n  expect_evaluated: 2     4\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2     4",
                    "expected": "Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 +"
                }
            },
            {
                "title": "RootReduce[%]    ➡️     False",
                "fullTitle": "RootReduce[%]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f5be1a95-ed06-490e-97b3-dc88bd1d171e",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": true,
                "isHook": false,
                "context": "\"#! Sqrt[2] + Sqrt[3] != Root[1 - 10 #1  + #1  & , 4]\\n#! Sqrt[2] + Sqrt[3] != Root[1 - 10 #1  + #1  & , 4]\\n# Use RefLink[RootReduce,paclet:ref/RootReduce] to decide whether two algebraic numbers are unequal:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)    ➡️     Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 + #1^4 & , 4]",
                "fullTitle": "Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)    ➡️     Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 + #1^4 & , 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3650ac8b-0a40-4a66-b489-55c73662245b",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numeric methods used by RefLink[Unequal,paclet:ref/Unequal] do not use sufficient precision to prove this unequality:\\n\\n\\ndata: \\n  got:              1                                                                   2     4\\n  expect:           Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\\n  expect_evaluated: 1                                                                   2     4\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "1                                                                   2     4",
                    "expected": "Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +"
                }
            },
            {
                "title": "RootReduce[%]    ➡️     True",
                "fullTitle": "RootReduce[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fed5a7f1-923a-46f2-97b0-21c6cf53b9ab",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": true,
                "isHook": false,
                "context": "\"#! Sqrt[2] + Sqrt[3] != ----------------------------------------------------------------------------------------------------- + Root[1 - 10 #1  + #1  & , 4]\\n#!                      10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\n#! Sqrt[2] + Sqrt[3] != ----------------------------------------------------------------------------------------------------- + Root[1 - 10 #1  + #1  & , 4]\\n#!                      10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\n# RefLink[RootReduce,paclet:ref/RootReduce] proves that the two algebraic numbers are not equal:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Block[{$MaxExtraPrecision = 100}, Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)]    ➡️     True",
                "fullTitle": "Block[{$MaxExtraPrecision = 100}, Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "71144b49-a1fe-4029-ba8b-c3053f98fc9b",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# Increasing RefLink[$MaxExtraPrecision,paclet:ref/$MaxExtraPrecision] may also prove unequality:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x != x    ➡️     False",
                "fullTitle": "x != x    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "20abdd7d-27ab-45e7-b70f-cb8a9f4a7b22",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# This symbolic unequality is always RefLink[False,paclet:ref/False]:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "(x + 1)^2 - x^2 - 2*x != 0    ➡️     -2*x - x^2 + (1 + x)^2 != 0",
                "fullTitle": "(x + 1)^2 - x^2 - 2*x != 0    ➡️     -2*x - x^2 + (1 + x)^2 != 0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "70bee19b-52c2-41fe-a279-8bb0bc79ad8a",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Unequal,paclet:ref/Unequal] does not automatically prove this unequality:\\n\\n\\ndata: \\n  got:              2          2\\n  expect:           -2*x - x^2 + (1 + x)^2 != 0\\n  expect_evaluated: 2          2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2          2",
                    "expected": "-2*x - x^2 + (1 + x)^2 != 0"
                }
            },
            {
                "title": "Expand[%]    ➡️     True",
                "fullTitle": "Expand[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "dfea1fb7-ea16-40cd-bf79-7bf8f91fb6e4",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": true,
                "isHook": false,
                "context": "\"#! -2 x - x  + (1 + x)  != 0\\n#! -2 x - x  + (1 + x)  != 0\\n# Use RefLink[Expand,paclet:ref/Expand] to prove it:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "3 != 4 != 5    ➡️     True",
                "fullTitle": "3 != 4 != 5    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5fd33c7e-3a84-459c-99aa-0a24bcade5df",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare more than two expressions:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x != y != z != t    ➡️     x != y != z != t",
                "fullTitle": "x != y != z != t    ➡️     x != y != z != t",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b7ebc324-a8e5-4fd0-b48f-81711e334330",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              x != y != z != t\\n  expect:           x != y != z != t\\n  expect_evaluated: x != y != z != t\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x != y != z != t",
                    "expected": "x != y != z != t"
                }
            },
            {
                "title": "{1, 2} != {1, 2}    ➡️     False",
                "fullTitle": "{1, 2} != {1, 2}    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bf876acd-12e1-4bce-8586-c327ee0b4586",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare lists:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "{a, b, c} != {d, e}    ➡️     True",
                "fullTitle": "{a, b, c} != {d, e}    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3087d0a4-fb8b-4415-a8e5-7d1a8a23f3a7",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "\"abc\" != \"ABC\"    ➡️     True",
                "fullTitle": "\"abc\" != \"ABC\"    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fb9de2da-2fc6-4a18-9666-5542673ebdc1",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare strings:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "!x != y    ➡️     x == y",
                "fullTitle": "!x != y    ➡️     x == y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "86088c2a-cd9d-4a1f-a5a4-a7e741121352",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of two-argument RefLink[Unequal,paclet:ref/Unequal] is RefLink[Equal,paclet:ref/Equal]:\\n\\n\\ndata: \\n  got:              x == y\\n  expect:           x == y\\n  expect_evaluated: x == y\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x == y",
                    "expected": "x == y"
                }
            },
            {
                "title": "!x != y != z    ➡️      !x != y != z",
                "fullTitle": "!x != y != z    ➡️      !x != y != z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d953a513-c2f3-47e8-a12e-d2aa9bf7dc4c",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of three-argument RefLink[Unequal,paclet:ref/Unequal] does not simplify automatically:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[%]    ➡️     y == x || z == x || z == y",
                "fullTitle": "LogicalExpand[%]    ➡️     y == x || z == x || z == y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9621a59e-ffff-4930-b62a-7e204f2715b7",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[LogicalExpand,paclet:ref/LogicalExpand] to express it in terms of two-argument RefLink[Equal,paclet:ref/Equal]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[x == y == z]    ➡️     y == x && z == x",
                "fullTitle": "LogicalExpand[x == y == z]    ➡️     y == x && z == x",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "17f8d76e-0ccf-48db-867c-97365c0dbada",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of three-argument RefLink[Unequal,paclet:ref/Unequal] is not equivalent to three-argument RefLink[Equal,paclet:ref/Equal]:\\n\\n\\ndata: \\n  got:              y == x && z == x\\n  expect:           y == x && z == x\\n  expect_evaluated: y == x && z == x\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "y == x && z == x",
                    "expected": "y == x && z == x"
                }
            },
            {
                "title": "{x != x, x != y, Sqrt[2] + Sqrt[3] != Sqrt[5 + 2*Sqrt[6]], Pi != N[Pi]}    ➡️     {False, x != y, False, False}",
                "fullTitle": "{x != x, x != y, Sqrt[2] + Sqrt[3] != Sqrt[5 + 2*Sqrt[6]], Pi != N[Pi]}    ➡️     {False, x != y, False, False}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9ab56e0a-43d9-47ed-a2cb-2a49db06241c",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Unequal,paclet:ref/Unequal] tests mathematical unequality of objects represented by expressions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{x =!= x, x =!= y, Sqrt[2] + Sqrt[3] =!= Sqrt[5 + 2*Sqrt[6]], Pi =!= N[Pi]}    ➡️     {False, True, True, True}",
                "fullTitle": "{x =!= x, x =!= y, Sqrt[2] + Sqrt[3] =!= Sqrt[5 + 2*Sqrt[6]], Pi =!= N[Pi]}    ➡️     {False, True, True, True}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "11f725ad-7b4f-4da6-a91e-177fd0a32d07",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[UnsameQ,paclet:ref/UnsameQ] tests syntactic unequality of expressions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "a = Log[Sqrt[2] + Sqrt[3]]; b = Log[5 + 2*Sqrt[6]]/2; a != b    ➡️     Log[Sqrt[2] + Sqrt[3]] != (1/2)*Log[5 + 2*Sqrt[6]]",
                "fullTitle": "a = Log[Sqrt[2] + Sqrt[3]]; b = Log[5 + 2*Sqrt[6]]/2; a != b    ➡️     Log[Sqrt[2] + Sqrt[3]] != (1/2)*Log[5 + 2*Sqrt[6]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f2d93751-293b-4ec6-83e0-fb4dc21fde25",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# When RefLink[Unequal,paclet:ref/Unequal] cannot decide whether two numeric expressions are equal it returns unchanged:\\n\\n\\ndata: \\n  got:              Log[5 + 2 Sqrt[6]]\\n  expect:           Log[Sqrt[2] + Sqrt[3]] != (1/2)*Log[5 + 2*Sqrt[6]]\\n  expect_evaluated: Log[5 + 2 Sqrt[6]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Log[5 + 2 Sqrt[6]]",
                    "expected": "Log[Sqrt[2] + Sqrt[3]] != (1/2)*Log[5 + 2*Sqrt[6]]"
                }
            },
            {
                "title": "FullSimplify[a != b]    ➡️     False",
                "fullTitle": "FullSimplify[a != b]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c781d562-973f-4638-be01-92a3ab4d751e",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"#! Log[Sqrt[2] + Sqrt[3]] != ------------------\\n#!                                   2\\n#! Log[Sqrt[2] + Sqrt[3]] != ------------------\\n#!                                   2\\n# RefLink[FullSimplify,paclet:ref/FullSimplify] uses exact symbolic transformations to disprove the unequality:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "PossibleZeroQ[a - b]    ➡️     True",
                "fullTitle": "PossibleZeroQ[a - b]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d986a08a-4ff2-48ef-8f06-83666d496104",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] uses numeric and symbolic heuristics to decide whether an expression is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[a - b + 10^(-100)]    ➡️     True",
                "fullTitle": "PossibleZeroQ[a - b + 10^(-100)]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "70d724d6-e947-461b-b4c8-e19f0148c204",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numeric methods used by RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] may incorrectly decide that a number is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "2.00006 - 2.00005 != 0.00001    ➡️     True",
                "fullTitle": "2.00006 - 2.00005 != 0.00001    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e32a90df-3aec-4718-a062-bf5de30baa28",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# Unequality for machine-precision approximate numbers can be subtle: \\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "InputForm[2.00006 - 2.00005]    ➡️     0.000010000000000065512",
                "fullTitle": "InputForm[2.00006 - 2.00005]    ➡️     0.000010000000000065512",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5612f1cc-60db-4763-a727-b348d41deb4d",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": true,
                "isHook": false,
                "context": "\"# The extra digits disrupt equality:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "2.00006`16. - 2.00005000000000000000000000001`16. != 1.`16.*^-5    ➡️     False",
                "fullTitle": "2.00006`16. - 2.00005000000000000000000000001`16. != 1.`16.*^-5    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ea0acc85-d269-4128-b0cc-63bf06a4d329",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# Arbitrary-precision approximate numbers do not have this problem:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Precision[2.00006`16. - 2.00005000000000000000000000001`16.]    ➡️     10.3979",
                "fullTitle": "Precision[2.00006`16. - 2.00005000000000000000000000001`16.]    ➡️     10.3979",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "571e79ed-4c7c-4d4f-9bb1-e83ed1ce79f8",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# Thanks to automatic-precision tracking, RefLink[Unequal,paclet:ref/Unequal] knows to look only at the first 10 digits:\\n\\n\\ndata: \\n  got:              10.3979\\n  expect:           10.3979\\n  expect_evaluated: 10.3979\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 10.3979,
                    "expected": 10.3979
                }
            },
            {
                "title": "2.6 - 2.5 != 0.1    ➡️     False",
                "fullTitle": "2.6 - 2.5 != 0.1    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1f53fc96-a275-4961-a85d-07cb1e3af7e9",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": false,
                "isHook": false,
                "context": "\"# In this case, the unequality test for machine numbers gives the expected result:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "InputForm[2.6 - 2.5]    ➡️     0.10000000000000009",
                "fullTitle": "InputForm[2.6 - 2.5]    ➡️     0.10000000000000009",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "df05385b-9f55-48a3-8000-c27192ec99f5",
                "parentUUID": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
                "skipped": true,
                "isHook": false,
                "context": "\"# The extra digits in this case are ignored by RefLink[Unequal,paclet:ref/Unequal]:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "9d1f26ba-967f-4835-812a-45896c623042",
            "2842df9d-63fc-4eea-a032-930ada6aa63f",
            "9f107adf-9cf7-4e61-b20a-0dc52d5b6599",
            "c99161ed-c615-47a2-b41a-229fe0eac697",
            "54d6f91f-dcea-468c-b643-8790205b3806",
            "129ba982-9e00-4346-ae4b-71b7e787070a",
            "15e7eed1-ea8c-49a6-8c55-89997549bec7",
            "b034f4a2-0704-4961-a332-5a201dee65ab",
            "44fb5228-5b1d-4da3-a798-511c03366a9b",
            "56cbc357-c252-47d0-9612-cb5162231991",
            "f5be1a95-ed06-490e-97b3-dc88bd1d171e",
            "3650ac8b-0a40-4a66-b489-55c73662245b",
            "fed5a7f1-923a-46f2-97b0-21c6cf53b9ab",
            "71144b49-a1fe-4029-ba8b-c3053f98fc9b",
            "20abdd7d-27ab-45e7-b70f-cb8a9f4a7b22",
            "70bee19b-52c2-41fe-a279-8bb0bc79ad8a",
            "dfea1fb7-ea16-40cd-bf79-7bf8f91fb6e4",
            "5fd33c7e-3a84-459c-99aa-0a24bcade5df",
            "b7ebc324-a8e5-4fd0-b48f-81711e334330",
            "bf876acd-12e1-4bce-8586-c327ee0b4586",
            "3087d0a4-fb8b-4415-a8e5-7d1a8a23f3a7",
            "fb9de2da-2fc6-4a18-9666-5542673ebdc1",
            "86088c2a-cd9d-4a1f-a5a4-a7e741121352",
            "d953a513-c2f3-47e8-a12e-d2aa9bf7dc4c",
            "9621a59e-ffff-4930-b62a-7e204f2715b7",
            "17f8d76e-0ccf-48db-867c-97365c0dbada",
            "9ab56e0a-43d9-47ed-a2cb-2a49db06241c",
            "11f725ad-7b4f-4da6-a91e-177fd0a32d07",
            "f2d93751-293b-4ec6-83e0-fb4dc21fde25",
            "c781d562-973f-4638-be01-92a3ab4d751e",
            "d986a08a-4ff2-48ef-8f06-83666d496104",
            "70d724d6-e947-461b-b4c8-e19f0148c204",
            "e32a90df-3aec-4718-a062-bf5de30baa28",
            "5612f1cc-60db-4763-a727-b348d41deb4d",
            "ea0acc85-d269-4128-b0cc-63bf06a4d329",
            "571e79ed-4c7c-4d4f-9bb1-e83ed1ce79f8",
            "1f53fc96-a275-4961-a85d-07cb1e3af7e9",
            "df05385b-9f55-48a3-8000-c27192ec99f5"
        ],
        "failures": [],
        "skipped": [
            "f5be1a95-ed06-490e-97b3-dc88bd1d171e",
            "fed5a7f1-923a-46f2-97b0-21c6cf53b9ab",
            "dfea1fb7-ea16-40cd-bf79-7bf8f91fb6e4",
            "9621a59e-ffff-4930-b62a-7e204f2715b7",
            "5612f1cc-60db-4763-a727-b348d41deb4d",
            "df05385b-9f55-48a3-8000-c27192ec99f5"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "8e68306d-5f3c-4ea9-8914-e7c41af90099",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
