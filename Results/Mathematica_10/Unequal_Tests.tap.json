{
    "stats": {
        "suites": 0,
        "tests": 38,
        "passes": 38,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-02T19:35:53.915Z",
        "end": "2018-06-02T19:35:53.915Z",
        "duration": 0,
        "testsRegistered": 38,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "a != b    ➡️     a != b",
                "fullTitle": "a != b    ➡️     a != b",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3015c9e6-80f7-4f76-9f06-6bf26d23c5d7",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# SYSTEM: Mathematica_10\\n# TEST: Unequal_Tests\\n# OUTPUT: output/Results/Mathematica_10/Unequal_Tests.json\\n# Returns RefLink[True,paclet:ref/True] if elements are guaranteed unequal, and otherwise stays unevaluated:\\n\\n\\ndata: \\n  got:              a != b\\n  expect:           a != b\\n  expect_evaluated: a != b\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a != b",
                    "expected": "a != b"
                }
            },
            {
                "title": "1 != 2    ➡️     True",
                "fullTitle": "1 != 2    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "da0b7c58-db64-4d35-9c12-de4f37adec9b",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter as !=\\\\[ThinSpace] or as Esc\\\\[ThinSpace]\\\\[ThinSpace]!=\\\\[ThinSpace]\\\\[ThinSpace]Esc:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "3/2 != 5/3    ➡️     True",
                "fullTitle": "3/2 != 5/3    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "442952f9-cd51-43c7-8e04-66878fb20f69",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test unequality of numbers:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "1. != 1. + 2^7/10^16    ➡️     False",
                "fullTitle": "1. != 1. + 2^7/10^16    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e9cf0cf8-7ca4-45b1-9820-38c550989c77",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# Approximate numbers that differ in at most their last eight binary digits are considered equal:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "1. != 1. + 2^8/10^16    ➡️     True",
                "fullTitle": "1. != 1. + 2^8/10^16    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a63b2b79-e808-458d-a490-46552ca80ffb",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "N[Pi, 20] != Pi    ➡️     False",
                "fullTitle": "N[Pi, 20] != Pi    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e50b16ee-5976-45c8-a3ae-eb85e0c77de3",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare an exact numeric expression and an approximate number:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "N[Pi, 20] != Pi*(1 + 2^8/10^20)    ➡️     True",
                "fullTitle": "N[Pi, 20] != Pi*(1 + 2^8/10^20)    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0b93c6c4-e42c-4f63-b51e-3333b5c7db6d",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Pi^E != E^Pi    ➡️     True",
                "fullTitle": "Pi^E != E^Pi    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d9e1d28d-1b26-4d80-9f62-d6fb34f21cae",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare two exact numeric expressions; a numeric test may suffice to prove unequality:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Sqrt[2] + Sqrt[3] != Sqrt[5 + 2*Sqrt[6]]    ➡️     False",
                "fullTitle": "Sqrt[2] + Sqrt[3] != Sqrt[5 + 2*Sqrt[6]]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "be1f66b4-b658-4d59-9dab-c1501d32ac0a",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# Proving equality requires symbolic methods:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4]    ➡️     Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 + #1^4 & , 4]",
                "fullTitle": "Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4]    ➡️     Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 + #1^4 & , 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6ee6ff4e-e9cb-4fb2-b393-06adfeb12036",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# Symbolic methods used by RefLink[Unequal,paclet:ref/Unequal] are insufficient to prove this RefLink[False,paclet:ref/False]:\\n\\n\\ndata: \\n  got:              Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 +\\n  expect:           Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 +\\n  expect_evaluated: Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 +\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 +",
                    "expected": "Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 +"
                }
            },
            {
                "title": "RootReduce[%]    ➡️     False",
                "fullTitle": "RootReduce[%]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f5e437ce-afb7-49dd-8a62-3af6dc0338c4",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[RootReduce,paclet:ref/RootReduce] to decide whether two algebraic numbers are unequal:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)    ➡️     Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 + #1^4 & , 4]",
                "fullTitle": "Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)    ➡️     Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 + #1^4 & , 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b1d7d43f-b8c7-434d-b5ab-ac08988730eb",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numeric methods used by RefLink[Unequal,paclet:ref/Unequal] do not use sufficient precision to prove this unequality:\\n\\n\\ndata: \\n  got:              Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\\n  expect:           Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\\n  expect_evaluated: Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +",
                    "expected": "Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +"
                }
            },
            {
                "title": "RootReduce[%]    ➡️     True",
                "fullTitle": "RootReduce[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "483651f8-a985-4b67-b7d0-4e1df3ebc678",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[RootReduce,paclet:ref/RootReduce] proves that the two algebraic numbers are not equal:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Block[{$MaxExtraPrecision = 100}, Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)]    ➡️     True",
                "fullTitle": "Block[{$MaxExtraPrecision = 100}, Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b7b8b486-0b9e-40b6-8742-11ea2d235adf",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# Increasing RefLink[$MaxExtraPrecision,paclet:ref/$MaxExtraPrecision] may also prove unequality:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x != x    ➡️     False",
                "fullTitle": "x != x    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "22b20175-66a2-4a4e-9087-c3ed22efa440",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# This symbolic unequality is always RefLink[False,paclet:ref/False]:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "(x + 1)^2 - x^2 - 2*x != 0    ➡️     -2*x - x^2 + (1 + x)^2 != 0",
                "fullTitle": "(x + 1)^2 - x^2 - 2*x != 0    ➡️     -2*x - x^2 + (1 + x)^2 != 0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5e496bda-50e5-400d-82d0-05612a418596",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Unequal,paclet:ref/Unequal] does not automatically prove this unequality:\\n\\n\\ndata: \\n  got:              -2*x - x^2 + (1 + x)^2 != 0\\n  expect:           -2*x - x^2 + (1 + x)^2 != 0\\n  expect_evaluated: -2*x - x^2 + (1 + x)^2 != 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "-2*x - x^2 + (1 + x)^2 != 0",
                    "expected": "-2*x - x^2 + (1 + x)^2 != 0"
                }
            },
            {
                "title": "Expand[%]    ➡️     True",
                "fullTitle": "Expand[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9112a711-7b1b-468b-b470-35df01ce3d28",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[Expand,paclet:ref/Expand] to prove it:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "3 != 4 != 5    ➡️     True",
                "fullTitle": "3 != 4 != 5    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "acfd2af4-2829-4edc-a72e-224e3319d653",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare more than two expressions:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x != y != z != t    ➡️     x != y != z != t",
                "fullTitle": "x != y != z != t    ➡️     x != y != z != t",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d63a4dff-838c-443b-8a38-0404f4ec33a4",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              x != y != z != t\\n  expect:           x != y != z != t\\n  expect_evaluated: x != y != z != t\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x != y != z != t",
                    "expected": "x != y != z != t"
                }
            },
            {
                "title": "{1, 2} != {1, 2}    ➡️     False",
                "fullTitle": "{1, 2} != {1, 2}    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "44643629-c811-45ff-8c6f-3a605c66ba44",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare lists:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "{a, b, c} != {d, e}    ➡️     True",
                "fullTitle": "{a, b, c} != {d, e}    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c9245d0a-176e-4503-b8ad-dd684ccbb1ae",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "\"abc\" != \"ABC\"    ➡️     True",
                "fullTitle": "\"abc\" != \"ABC\"    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5f4f8143-e7d1-4cf5-bf61-e761aa634dd8",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare strings:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "!x != y    ➡️     x == y",
                "fullTitle": "!x != y    ➡️     x == y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "17f0a138-9ce7-4ee5-941c-dbe6a78a89cc",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of two-argument RefLink[Unequal,paclet:ref/Unequal] is RefLink[Equal,paclet:ref/Equal]:\\n\\n\\ndata: \\n  got:              x == y\\n  expect:           x == y\\n  expect_evaluated: x == y\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x == y",
                    "expected": "x == y"
                }
            },
            {
                "title": "!x != y != z    ➡️      !x != y != z",
                "fullTitle": "!x != y != z    ➡️      !x != y != z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c2f5844e-fd8c-4b49-8616-0a79b351adf6",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of three-argument RefLink[Unequal,paclet:ref/Unequal] does not simplify automatically:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[%]    ➡️     y == x || z == x || z == y",
                "fullTitle": "LogicalExpand[%]    ➡️     y == x || z == x || z == y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fa690bc8-f69c-4a76-9b2a-1afc8fe73310",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[LogicalExpand,paclet:ref/LogicalExpand] to express it in terms of two-argument RefLink[Equal,paclet:ref/Equal]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[x == y == z]    ➡️     y == x && z == x",
                "fullTitle": "LogicalExpand[x == y == z]    ➡️     y == x && z == x",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f24aa27f-6c97-4483-a175-e2c8ae05941b",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of three-argument RefLink[Unequal,paclet:ref/Unequal] is not equivalent to three-argument RefLink[Equal,paclet:ref/Equal]:\\n\\n\\ndata: \\n  got:              y == x && z == x\\n  expect:           y == x && z == x\\n  expect_evaluated: y == x && z == x\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "y == x && z == x",
                    "expected": "y == x && z == x"
                }
            },
            {
                "title": "{x != x, x != y, Sqrt[2] + Sqrt[3] != Sqrt[5 + 2*Sqrt[6]], Pi != N[Pi]}    ➡️     {False, x != y, False, False}",
                "fullTitle": "{x != x, x != y, Sqrt[2] + Sqrt[3] != Sqrt[5 + 2*Sqrt[6]], Pi != N[Pi]}    ➡️     {False, x != y, False, False}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7e4fad3c-6838-4a28-b201-9f050c1cc546",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Unequal,paclet:ref/Unequal] tests mathematical unequality of objects represented by expressions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{x =!= x, x =!= y, Sqrt[2] + Sqrt[3] =!= Sqrt[5 + 2*Sqrt[6]], Pi =!= N[Pi]}    ➡️     {False, True, True, True}",
                "fullTitle": "{x =!= x, x =!= y, Sqrt[2] + Sqrt[3] =!= Sqrt[5 + 2*Sqrt[6]], Pi =!= N[Pi]}    ➡️     {False, True, True, True}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9f32e9d6-4c72-4db2-86f1-6f261eed0c77",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[UnsameQ,paclet:ref/UnsameQ] tests syntactic unequality of expressions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "a = Log[Sqrt[2] + Sqrt[3]]; b = Log[5 + 2*Sqrt[6]]/2; a != b    ➡️     Log[Sqrt[2] + Sqrt[3]] != (1/2)*Log[5 + 2*Sqrt[6]]",
                "fullTitle": "a = Log[Sqrt[2] + Sqrt[3]]; b = Log[5 + 2*Sqrt[6]]/2; a != b    ➡️     Log[Sqrt[2] + Sqrt[3]] != (1/2)*Log[5 + 2*Sqrt[6]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c15890d2-5edb-4585-a908-1c311f0e9b18",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# When RefLink[Unequal,paclet:ref/Unequal] cannot decide whether two numeric expressions are equal it returns unchanged:\\n\\n\\ndata: \\n  got:              Log[Sqrt[2] + Sqrt[3]] != Log[5 + 2*Sqrt[6]]/2\\n  expect:           Log[Sqrt[2] + Sqrt[3]] != (1/2)*Log[5 + 2*Sqrt[6]]\\n  expect_evaluated: Log[Sqrt[2] + Sqrt[3]] != Log[5 + 2*Sqrt[6]]/2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Log[Sqrt[2] + Sqrt[3]] != Log[5 + 2*Sqrt[6]]/2",
                    "expected": "Log[Sqrt[2] + Sqrt[3]] != (1/2)*Log[5 + 2*Sqrt[6]]"
                }
            },
            {
                "title": "FullSimplify[a != b]    ➡️     False",
                "fullTitle": "FullSimplify[a != b]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2d614b9c-f2f7-432f-9ce6-d212f58eb85f",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[FullSimplify,paclet:ref/FullSimplify] uses exact symbolic transformations to disprove the unequality:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "PossibleZeroQ[a - b]    ➡️     True",
                "fullTitle": "PossibleZeroQ[a - b]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "90d0edaf-057d-4caf-8487-65b65331b798",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] uses numeric and symbolic heuristics to decide whether an expression is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[a - b + 10^(-100)]    ➡️     True",
                "fullTitle": "PossibleZeroQ[a - b + 10^(-100)]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3f6f9355-019e-4f07-b85d-9de7e862e832",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numeric methods used by RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] may incorrectly decide that a number is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "2.00006 - 2.00005 != 0.00001    ➡️     True",
                "fullTitle": "2.00006 - 2.00005 != 0.00001    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b7f6f303-98bb-4152-bea6-1bd9dd35ff72",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# Unequality for machine-precision approximate numbers can be subtle: \\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "InputForm[2.00006 - 2.00005]    ➡️     0.000010000000000065512",
                "fullTitle": "InputForm[2.00006 - 2.00005]    ➡️     0.000010000000000065512",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "946378a6-6231-4770-82aa-5c417b71bfd9",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": true,
                "isHook": false,
                "context": "\"# The extra digits disrupt equality:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "2.00006`16. - 2.00005000000000000000000000001`16. != 1.`16.*^-5    ➡️     False",
                "fullTitle": "2.00006`16. - 2.00005000000000000000000000001`16. != 1.`16.*^-5    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b9c2dea4-5af9-4ac2-98f4-8ed55f66ad4c",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# Arbitrary-precision approximate numbers do not have this problem:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Precision[2.00006`16. - 2.00005000000000000000000000001`16.]    ➡️     10.3979",
                "fullTitle": "Precision[2.00006`16. - 2.00005000000000000000000000001`16.]    ➡️     10.3979",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9c938e19-2a8b-4575-b83a-a87421ee796d",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": true,
                "isHook": false,
                "context": "\"# Thanks to automatic-precision tracking, RefLink[Unequal,paclet:ref/Unequal] knows to look only at the first 10 digits:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "2.6 - 2.5 != 0.1    ➡️     False",
                "fullTitle": "2.6 - 2.5 != 0.1    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0dfd2097-a5d3-42c0-a9e8-84d6e6f6f263",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": false,
                "isHook": false,
                "context": "\"# In this case, the unequality test for machine numbers gives the expected result:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "InputForm[2.6 - 2.5]    ➡️     0.10000000000000009",
                "fullTitle": "InputForm[2.6 - 2.5]    ➡️     0.10000000000000009",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3e1d5246-df87-4cec-83b9-1a976e8bcf1f",
                "parentUUID": "ac3bad57-5841-47a1-ac3a-708f909a9893",
                "skipped": true,
                "isHook": false,
                "context": "\"# The extra digits in this case are ignored by RefLink[Unequal,paclet:ref/Unequal]:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "3015c9e6-80f7-4f76-9f06-6bf26d23c5d7",
            "da0b7c58-db64-4d35-9c12-de4f37adec9b",
            "442952f9-cd51-43c7-8e04-66878fb20f69",
            "e9cf0cf8-7ca4-45b1-9820-38c550989c77",
            "a63b2b79-e808-458d-a490-46552ca80ffb",
            "e50b16ee-5976-45c8-a3ae-eb85e0c77de3",
            "0b93c6c4-e42c-4f63-b51e-3333b5c7db6d",
            "d9e1d28d-1b26-4d80-9f62-d6fb34f21cae",
            "be1f66b4-b658-4d59-9dab-c1501d32ac0a",
            "6ee6ff4e-e9cb-4fb2-b393-06adfeb12036",
            "f5e437ce-afb7-49dd-8a62-3af6dc0338c4",
            "b1d7d43f-b8c7-434d-b5ab-ac08988730eb",
            "483651f8-a985-4b67-b7d0-4e1df3ebc678",
            "b7b8b486-0b9e-40b6-8742-11ea2d235adf",
            "22b20175-66a2-4a4e-9087-c3ed22efa440",
            "5e496bda-50e5-400d-82d0-05612a418596",
            "9112a711-7b1b-468b-b470-35df01ce3d28",
            "acfd2af4-2829-4edc-a72e-224e3319d653",
            "d63a4dff-838c-443b-8a38-0404f4ec33a4",
            "44643629-c811-45ff-8c6f-3a605c66ba44",
            "c9245d0a-176e-4503-b8ad-dd684ccbb1ae",
            "5f4f8143-e7d1-4cf5-bf61-e761aa634dd8",
            "17f0a138-9ce7-4ee5-941c-dbe6a78a89cc",
            "c2f5844e-fd8c-4b49-8616-0a79b351adf6",
            "fa690bc8-f69c-4a76-9b2a-1afc8fe73310",
            "f24aa27f-6c97-4483-a175-e2c8ae05941b",
            "7e4fad3c-6838-4a28-b201-9f050c1cc546",
            "9f32e9d6-4c72-4db2-86f1-6f261eed0c77",
            "c15890d2-5edb-4585-a908-1c311f0e9b18",
            "2d614b9c-f2f7-432f-9ce6-d212f58eb85f",
            "90d0edaf-057d-4caf-8487-65b65331b798",
            "3f6f9355-019e-4f07-b85d-9de7e862e832",
            "b7f6f303-98bb-4152-bea6-1bd9dd35ff72",
            "946378a6-6231-4770-82aa-5c417b71bfd9",
            "b9c2dea4-5af9-4ac2-98f4-8ed55f66ad4c",
            "9c938e19-2a8b-4575-b83a-a87421ee796d",
            "0dfd2097-a5d3-42c0-a9e8-84d6e6f6f263",
            "3e1d5246-df87-4cec-83b9-1a976e8bcf1f"
        ],
        "failures": [],
        "skipped": [
            "f5e437ce-afb7-49dd-8a62-3af6dc0338c4",
            "483651f8-a985-4b67-b7d0-4e1df3ebc678",
            "9112a711-7b1b-468b-b470-35df01ce3d28",
            "fa690bc8-f69c-4a76-9b2a-1afc8fe73310",
            "946378a6-6231-4770-82aa-5c417b71bfd9",
            "9c938e19-2a8b-4575-b83a-a87421ee796d",
            "3e1d5246-df87-4cec-83b9-1a976e8bcf1f"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "ac3bad57-5841-47a1-ac3a-708f909a9893",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
