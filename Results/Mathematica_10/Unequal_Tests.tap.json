{
    "stats": {
        "suites": 0,
        "tests": 38,
        "passes": 38,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T12:21:12.458Z",
        "end": "2018-06-03T12:21:12.458Z",
        "duration": 0,
        "testsRegistered": 38,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "a != b    ➡️     a != b",
                "fullTitle": "a != b    ➡️     a != b",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c7d1e161-f5ae-4f10-8ee0-5c82f8d6e890",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/Unequal_Tests.m\\n#! TextForm[ColonForm[MessageName[PossibleZeroQ, ztest1], StringForm[Unable to decide whether numeric quantity `1` is equal to zero. Assuming it is., Short[HoldForm[Log[Sqrt[2] + Sqrt[3]] - Log[5 + 2*Sqrt[6]]/2], 3]]]]\\n#! TextForm[ColonForm[MessageName[PossibleZeroQ, ztest1], StringForm[Unable to decide whether numeric quantity `1` is equal to zero. Assuming it is., Short[HoldForm[1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Log[Sqrt[2] + Sqrt[3]] - Log[5 + 2*Sqrt[6]]/2], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: Unequal_Tests\\n# Returns RefLink[True,paclet:ref/True] if elements are guaranteed unequal, and otherwise stays unevaluated:\\n\\n\\ndata: \\n  got:              a != b\\n  expect:           a != b\\n  expect_evaluated: a != b\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a != b",
                    "expected": "a != b"
                }
            },
            {
                "title": "1 != 2    ➡️     True",
                "fullTitle": "1 != 2    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e4525e73-f36f-412b-a7e7-502fbbba8b1f",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter as !=\\\\[ThinSpace] or as Esc\\\\[ThinSpace]\\\\[ThinSpace]!=\\\\[ThinSpace]\\\\[ThinSpace]Esc:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "3/2 != 5/3    ➡️     True",
                "fullTitle": "3/2 != 5/3    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f41f0097-a46a-4889-86a2-b99868a73cc0",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test unequality of numbers:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "1. != 1. + 2^7/10^16    ➡️     False",
                "fullTitle": "1. != 1. + 2^7/10^16    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9e09ae04-0b7c-469f-bb10-584891430ce2",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Approximate numbers that differ in at most their last eight binary digits are considered equal:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "1. != 1. + 2^8/10^16    ➡️     True",
                "fullTitle": "1. != 1. + 2^8/10^16    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fc466a1b-3325-4ff4-9bcc-00ab56759fd7",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "N[Pi, 20] != Pi    ➡️     False",
                "fullTitle": "N[Pi, 20] != Pi    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "80879e1b-a4d4-4c9e-9cf6-2fac14d32dd3",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare an exact numeric expression and an approximate number:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "N[Pi, 20] != Pi*(1 + 2^8/10^20)    ➡️     True",
                "fullTitle": "N[Pi, 20] != Pi*(1 + 2^8/10^20)    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "43b6f03a-bb9e-495c-860f-e3cd27d90159",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Pi^E != E^Pi    ➡️     True",
                "fullTitle": "Pi^E != E^Pi    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1ec591f8-be61-4773-bb99-e80d583cce3b",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare two exact numeric expressions; a numeric test may suffice to prove unequality:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Sqrt[2] + Sqrt[3] != Sqrt[5 + 2*Sqrt[6]]    ➡️     False",
                "fullTitle": "Sqrt[2] + Sqrt[3] != Sqrt[5 + 2*Sqrt[6]]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "780e8375-83d5-4d2e-b201-786381d14086",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Proving equality requires symbolic methods:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4]    ➡️     Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 + #1^4 & , 4]",
                "fullTitle": "Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4]    ➡️     Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 + #1^4 & , 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "20642e02-533a-4590-bfe3-7f2403480635",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Symbolic methods used by RefLink[Unequal,paclet:ref/Unequal] are insufficient to prove this RefLink[False,paclet:ref/False]:\\n\\n\\ndata: \\n  got:              Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 +\\n  expect:           Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 +\\n  expect_evaluated: Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 +\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 +",
                    "expected": "Sqrt[2] + Sqrt[3] != Root[1 - 10*#1^2 +"
                }
            },
            {
                "title": "RootReduce[%]    ➡️     False",
                "fullTitle": "RootReduce[%]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "88b03256-67b3-46df-92e4-a2aa8ed453bf",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[RootReduce,paclet:ref/RootReduce] to decide whether two algebraic numbers are unequal:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)    ➡️     Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 + #1^4 & , 4]",
                "fullTitle": "Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)    ➡️     Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 + #1^4 & , 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "03dc94fc-2fbc-4aa5-a008-8b38970f97bd",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numeric methods used by RefLink[Unequal,paclet:ref/Unequal] do not use sufficient precision to prove this unequality:\\n\\n\\ndata: \\n  got:              Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\\n  expect:           Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\\n  expect_evaluated: Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +",
                    "expected": "Sqrt[2] + Sqrt[3] != 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +"
                }
            },
            {
                "title": "RootReduce[%]    ➡️     True",
                "fullTitle": "RootReduce[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "172dfcad-e56a-4884-919d-a07f8233318e",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[RootReduce,paclet:ref/RootReduce] proves that the two algebraic numbers are not equal:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Block[{$MaxExtraPrecision = 100}, Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)]    ➡️     True",
                "fullTitle": "Block[{$MaxExtraPrecision = 100}, Sqrt[2] + Sqrt[3] != Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3f653c18-ccf7-48d6-988f-b2fc1f8b2a41",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Increasing RefLink[$MaxExtraPrecision,paclet:ref/$MaxExtraPrecision] may also prove unequality:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x != x    ➡️     False",
                "fullTitle": "x != x    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "92217b25-a482-4cdd-8eb5-c7483b841b9e",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# This symbolic unequality is always RefLink[False,paclet:ref/False]:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "(x + 1)^2 - x^2 - 2*x != 0    ➡️     -2*x - x^2 + (1 + x)^2 != 0",
                "fullTitle": "(x + 1)^2 - x^2 - 2*x != 0    ➡️     -2*x - x^2 + (1 + x)^2 != 0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5834e26a-4199-497d-a8ae-841279e26955",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Unequal,paclet:ref/Unequal] does not automatically prove this unequality:\\n\\n\\ndata: \\n  got:              -2*x - x^2 + (1 + x)^2 != 0\\n  expect:           -2*x - x^2 + (1 + x)^2 != 0\\n  expect_evaluated: -2*x - x^2 + (1 + x)^2 != 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "-2*x - x^2 + (1 + x)^2 != 0",
                    "expected": "-2*x - x^2 + (1 + x)^2 != 0"
                }
            },
            {
                "title": "Expand[%]    ➡️     True",
                "fullTitle": "Expand[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1673589a-1492-434b-a9e3-48e61df4c770",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[Expand,paclet:ref/Expand] to prove it:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "3 != 4 != 5    ➡️     True",
                "fullTitle": "3 != 4 != 5    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ef289744-aea1-4b15-85a2-07a94d156c08",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare more than two expressions:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x != y != z != t    ➡️     x != y != z != t",
                "fullTitle": "x != y != z != t    ➡️     x != y != z != t",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "56b4b84f-1b56-48eb-b7cc-a541ca34631c",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              x != y != z != t\\n  expect:           x != y != z != t\\n  expect_evaluated: x != y != z != t\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x != y != z != t",
                    "expected": "x != y != z != t"
                }
            },
            {
                "title": "{1, 2} != {1, 2}    ➡️     False",
                "fullTitle": "{1, 2} != {1, 2}    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "88a2db2e-16ef-4592-940d-7a7afee06305",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare lists:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "{a, b, c} != {d, e}    ➡️     True",
                "fullTitle": "{a, b, c} != {d, e}    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8992b9de-f02e-450e-9b1f-8c23c42ebf83",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "\"abc\" != \"ABC\"    ➡️     True",
                "fullTitle": "\"abc\" != \"ABC\"    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0a2df394-13e1-4326-8b4c-4885405d155b",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare strings:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "!x != y    ➡️     x == y",
                "fullTitle": "!x != y    ➡️     x == y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0c7f5869-f14f-4762-9d77-3ccdc94de313",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of two-argument RefLink[Unequal,paclet:ref/Unequal] is RefLink[Equal,paclet:ref/Equal]:\\n\\n\\ndata: \\n  got:              x == y\\n  expect:           x == y\\n  expect_evaluated: x == y\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x == y",
                    "expected": "x == y"
                }
            },
            {
                "title": "!x != y != z    ➡️      !x != y != z",
                "fullTitle": "!x != y != z    ➡️      !x != y != z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "acd8bd84-cfb2-43ba-99a2-d479ef17bbcf",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of three-argument RefLink[Unequal,paclet:ref/Unequal] does not simplify automatically:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[%]    ➡️     y == x || z == x || z == y",
                "fullTitle": "LogicalExpand[%]    ➡️     y == x || z == x || z == y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3e8bd504-3488-42d7-9ef0-0a67af1880fa",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[LogicalExpand,paclet:ref/LogicalExpand] to express it in terms of two-argument RefLink[Equal,paclet:ref/Equal]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[x == y == z]    ➡️     y == x && z == x",
                "fullTitle": "LogicalExpand[x == y == z]    ➡️     y == x && z == x",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "73630a27-2716-4824-9226-4f25fad4119d",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of three-argument RefLink[Unequal,paclet:ref/Unequal] is not equivalent to three-argument RefLink[Equal,paclet:ref/Equal]:\\n\\n\\ndata: \\n  got:              y == x && z == x\\n  expect:           y == x && z == x\\n  expect_evaluated: y == x && z == x\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "y == x && z == x",
                    "expected": "y == x && z == x"
                }
            },
            {
                "title": "{x != x, x != y, Sqrt[2] + Sqrt[3] != Sqrt[5 + 2*Sqrt[6]], Pi != N[Pi]}    ➡️     {False, x != y, False, False}",
                "fullTitle": "{x != x, x != y, Sqrt[2] + Sqrt[3] != Sqrt[5 + 2*Sqrt[6]], Pi != N[Pi]}    ➡️     {False, x != y, False, False}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "324c8949-df66-45e0-a33a-eb62df61bdfc",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Unequal,paclet:ref/Unequal] tests mathematical unequality of objects represented by expressions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{x =!= x, x =!= y, Sqrt[2] + Sqrt[3] =!= Sqrt[5 + 2*Sqrt[6]], Pi =!= N[Pi]}    ➡️     {False, True, True, True}",
                "fullTitle": "{x =!= x, x =!= y, Sqrt[2] + Sqrt[3] =!= Sqrt[5 + 2*Sqrt[6]], Pi =!= N[Pi]}    ➡️     {False, True, True, True}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "aeaa8368-fcd4-4821-9c12-b2d7bc69a309",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[UnsameQ,paclet:ref/UnsameQ] tests syntactic unequality of expressions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "a = Log[Sqrt[2] + Sqrt[3]]; b = Log[5 + 2*Sqrt[6]]/2; a != b    ➡️     Log[Sqrt[2] + Sqrt[3]] != (1/2)*Log[5 + 2*Sqrt[6]]",
                "fullTitle": "a = Log[Sqrt[2] + Sqrt[3]]; b = Log[5 + 2*Sqrt[6]]/2; a != b    ➡️     Log[Sqrt[2] + Sqrt[3]] != (1/2)*Log[5 + 2*Sqrt[6]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c785ca2c-074c-4d2a-b699-06e838045553",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# When RefLink[Unequal,paclet:ref/Unequal] cannot decide whether two numeric expressions are equal it returns unchanged:\\n\\n\\ndata: \\n  got:              Log[Sqrt[2] + Sqrt[3]] != Log[5 + 2*Sqrt[6]]/2\\n  expect:           Log[Sqrt[2] + Sqrt[3]] != (1/2)*Log[5 + 2*Sqrt[6]]\\n  expect_evaluated: Log[Sqrt[2] + Sqrt[3]] != Log[5 + 2*Sqrt[6]]/2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Log[Sqrt[2] + Sqrt[3]] != Log[5 + 2*Sqrt[6]]/2",
                    "expected": "Log[Sqrt[2] + Sqrt[3]] != (1/2)*Log[5 + 2*Sqrt[6]]"
                }
            },
            {
                "title": "FullSimplify[a != b]    ➡️     False",
                "fullTitle": "FullSimplify[a != b]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0ed5c7fb-9f2b-44f0-bc13-980457cf9844",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[FullSimplify,paclet:ref/FullSimplify] uses exact symbolic transformations to disprove the unequality:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "PossibleZeroQ[a - b]    ➡️     True",
                "fullTitle": "PossibleZeroQ[a - b]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "316586f5-e8fb-4127-84ed-c6849a4beb3c",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] uses numeric and symbolic heuristics to decide whether an expression is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[a - b + 10^(-100)]    ➡️     True",
                "fullTitle": "PossibleZeroQ[a - b + 10^(-100)]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4a9b9c1d-6588-420a-9109-07f05ba882f7",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numeric methods used by RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] may incorrectly decide that a number is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "2.00006 - 2.00005 != 0.00001    ➡️     True",
                "fullTitle": "2.00006 - 2.00005 != 0.00001    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ca2c569e-ea83-4668-a5b9-ec40dcb50e51",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Unequality for machine-precision approximate numbers can be subtle: \\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "InputForm[2.00006 - 2.00005]    ➡️     0.000010000000000065512",
                "fullTitle": "InputForm[2.00006 - 2.00005]    ➡️     0.000010000000000065512",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8dc1ef50-84e5-41ea-85c8-4a991d61260f",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": true,
                "isHook": false,
                "context": "\"# The extra digits disrupt equality:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "2.00006`16. - 2.00005000000000000000000000001`16. != 1.`16.*^-5    ➡️     False",
                "fullTitle": "2.00006`16. - 2.00005000000000000000000000001`16. != 1.`16.*^-5    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "acb6ab5d-26c8-4015-b102-9df3ec852fb1",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Arbitrary-precision approximate numbers do not have this problem:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Precision[2.00006`16. - 2.00005000000000000000000000001`16.]    ➡️     10.3979",
                "fullTitle": "Precision[2.00006`16. - 2.00005000000000000000000000001`16.]    ➡️     10.3979",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b7e4168b-0175-4da0-a55f-2c739dbfe25f",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": true,
                "isHook": false,
                "context": "\"# Thanks to automatic-precision tracking, RefLink[Unequal,paclet:ref/Unequal] knows to look only at the first 10 digits:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "2.6 - 2.5 != 0.1    ➡️     False",
                "fullTitle": "2.6 - 2.5 != 0.1    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b0157d43-e428-483b-9fb2-9ab198d099a1",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": false,
                "isHook": false,
                "context": "\"# In this case, the unequality test for machine numbers gives the expected result:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "InputForm[2.6 - 2.5]    ➡️     0.10000000000000009",
                "fullTitle": "InputForm[2.6 - 2.5]    ➡️     0.10000000000000009",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2f2b4955-4ca9-4ff6-97b4-80dddeadd7e3",
                "parentUUID": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
                "skipped": true,
                "isHook": false,
                "context": "\"# The extra digits in this case are ignored by RefLink[Unequal,paclet:ref/Unequal]:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "c7d1e161-f5ae-4f10-8ee0-5c82f8d6e890",
            "e4525e73-f36f-412b-a7e7-502fbbba8b1f",
            "f41f0097-a46a-4889-86a2-b99868a73cc0",
            "9e09ae04-0b7c-469f-bb10-584891430ce2",
            "fc466a1b-3325-4ff4-9bcc-00ab56759fd7",
            "80879e1b-a4d4-4c9e-9cf6-2fac14d32dd3",
            "43b6f03a-bb9e-495c-860f-e3cd27d90159",
            "1ec591f8-be61-4773-bb99-e80d583cce3b",
            "780e8375-83d5-4d2e-b201-786381d14086",
            "20642e02-533a-4590-bfe3-7f2403480635",
            "88b03256-67b3-46df-92e4-a2aa8ed453bf",
            "03dc94fc-2fbc-4aa5-a008-8b38970f97bd",
            "172dfcad-e56a-4884-919d-a07f8233318e",
            "3f653c18-ccf7-48d6-988f-b2fc1f8b2a41",
            "92217b25-a482-4cdd-8eb5-c7483b841b9e",
            "5834e26a-4199-497d-a8ae-841279e26955",
            "1673589a-1492-434b-a9e3-48e61df4c770",
            "ef289744-aea1-4b15-85a2-07a94d156c08",
            "56b4b84f-1b56-48eb-b7cc-a541ca34631c",
            "88a2db2e-16ef-4592-940d-7a7afee06305",
            "8992b9de-f02e-450e-9b1f-8c23c42ebf83",
            "0a2df394-13e1-4326-8b4c-4885405d155b",
            "0c7f5869-f14f-4762-9d77-3ccdc94de313",
            "acd8bd84-cfb2-43ba-99a2-d479ef17bbcf",
            "3e8bd504-3488-42d7-9ef0-0a67af1880fa",
            "73630a27-2716-4824-9226-4f25fad4119d",
            "324c8949-df66-45e0-a33a-eb62df61bdfc",
            "aeaa8368-fcd4-4821-9c12-b2d7bc69a309",
            "c785ca2c-074c-4d2a-b699-06e838045553",
            "0ed5c7fb-9f2b-44f0-bc13-980457cf9844",
            "316586f5-e8fb-4127-84ed-c6849a4beb3c",
            "4a9b9c1d-6588-420a-9109-07f05ba882f7",
            "ca2c569e-ea83-4668-a5b9-ec40dcb50e51",
            "8dc1ef50-84e5-41ea-85c8-4a991d61260f",
            "acb6ab5d-26c8-4015-b102-9df3ec852fb1",
            "b7e4168b-0175-4da0-a55f-2c739dbfe25f",
            "b0157d43-e428-483b-9fb2-9ab198d099a1",
            "2f2b4955-4ca9-4ff6-97b4-80dddeadd7e3"
        ],
        "failures": [],
        "skipped": [
            "88b03256-67b3-46df-92e4-a2aa8ed453bf",
            "172dfcad-e56a-4884-919d-a07f8233318e",
            "1673589a-1492-434b-a9e3-48e61df4c770",
            "3e8bd504-3488-42d7-9ef0-0a67af1880fa",
            "8dc1ef50-84e5-41ea-85c8-4a991d61260f",
            "b7e4168b-0175-4da0-a55f-2c739dbfe25f",
            "2f2b4955-4ca9-4ff6-97b4-80dddeadd7e3"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "95bdde21-c736-4a1a-93ed-4d4af0ad037d",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
