{
    "stats": {
        "suites": 0,
        "tests": 34,
        "passes": 34,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-11T04:14:34.477Z",
        "end": "2018-06-11T04:14:34.477Z",
        "duration": 0,
        "testsRegistered": 34,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "Sort[{d, b, c, a}]    ➡️     {a, b, c, d}",
                "fullTitle": "Sort[{d, b, c, a}]    ➡️     {a, b, c, d}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "de3746de-bb65-4aaa-a811-d50ce790a6ea",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/Sort_Tests.m\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Sort, normal], StringForm[Nonatomic expression expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[Sort[Raw[Association, 887eddee807d0fedf0139ef218f0a8f2a8a8fdf1c8950fef30a8fdf120e252eec0a8fdf1]]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Sort, normal], StringForm[Nonatomic expression expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[Sort[Raw[Association, 985623ed807d0fedf0139ef218f0a8f2a8a8fdf1c8950fef30a8fdf120e252eec0a8fdf1], Greater]], 3]]]]\\n#! {4, 1}\\n#! {3, 2}\\n#! {1, 3}\\n#! {4, 3}\\n#! {1, 2}\\n#! TextForm[ColonForm[MessageName[Sort, normal], StringForm[Nonatomic expression expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[Sort[list]], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[Sort, normal]], 3]]]]\\n#! TextForm[ColonForm[MessageName[$RecursionLimit, reclim], StringForm[Recursion depth of `1` exceeded., Short[HoldForm[1024], 3]]]]\\n#! TextForm[ColonForm[MessageName[$RecursionLimit, reclim], StringForm[Recursion depth of `1` exceeded., Short[HoldForm[1024], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: Sort_Tests\\n# Sort a list:\\n\\n\\ndata: \\n  got: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n  expect: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n  expect_evaluated: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null
                    },
                    "expected": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null
                    }
                }
            },
            {
                "title": "Sort[{4, 1, 3, 2, 2}, Greater]    ➡️     {4, 3, 2, 2, 1}",
                "fullTitle": "Sort[{4, 1, 3, 2, 2}, Greater]    ➡️     {4, 3, 2, 2, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5737b347-6159-4005-b55c-ff7dd59c2927",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Sort using RefLink[Greater,paclet:ref/Greater] as the ordering function:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sort[{4, 1, 3, 2, 2}, #1 > #2 & ]    ➡️     {4, 3, 2, 2, 1}",
                "fullTitle": "Sort[{4, 1, 3, 2, 2}, #1 > #2 & ]    ➡️     {4, 3, 2, 2, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "40e2c217-9bc8-4afc-a197-c54e1466a311",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sort[{{a, 2}, {c, 1}, {d, 3}}, #1[[2]] < #2[[2]] & ]    ➡️     {{c, 1}, {a, 2}, {d, 3}}",
                "fullTitle": "Sort[{{a, 2}, {c, 1}, {d, 3}}, #1[[2]] < #2[[2]] & ]    ➡️     {{c, 1}, {a, 2}, {d, 3}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "47d3d015-39ab-41ad-a6da-3a0bc65710af",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Sort by comparing the second part of each element:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[Sort[<| a -> 4, b -> 1, c -> 3, d -> 2, e -> 2 |>]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[Sort[<| a -> 4, b -> 1, c -> 3, d -> 2, e -> 2 |>]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e7e0ed62-dddb-4839-945c-4ebe4ba42342",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": true,
                "isHook": false,
                "context": "\"# Sort elements in an RefLink[Association,paclet:ref/Association] according to their values:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[Sort[<| a -> 4, b -> 1, c -> 3, d -> 2, e -> 2 |>, Greater]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[Sort[<| a -> 4, b -> 1, c -> 3, d -> 2, e -> 2 |>, Greater]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8586c660-bab8-4345-b987-462a485ae4d0",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": true,
                "isHook": false,
                "context": "\"# Sort RefLink[Association,paclet:ref/Association] in reverse order:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sort[{y, x^2, x + y, y^3}]    ➡️     {x^2, y, y^3, x + y}",
                "fullTitle": "Sort[{y, x^2, x + y, y^3}]    ➡️     {x^2, y, y^3, x + y}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1d29b993-fc2b-4f44-a924-954799e80120",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Sort any expressions:\\n\\n\\ndata: \\n  got:              2      3\\n  expect: \\n    x^2:   null\\n    y:     null\\n    y^3:   null\\n    x + y: null\\n  expect_evaluated: 2      3\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2      3",
                    "expected": {
                        "x^2": null,
                        "y": null,
                        "y^3": null,
                        "x + y": null
                    }
                }
            },
            {
                "title": "Sort[{\"cat\", \"fish\", \"catfish\", \"Cat\"}]    ➡️     {cat, Cat, catfish, fish}",
                "fullTitle": "Sort[{\"cat\", \"fish\", \"catfish\", \"Cat\"}]    ➡️     {cat, Cat, catfish, fish}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4c4bdc97-66bc-4bea-9a03-d2af7b7254d0",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"#! {x , y, y , x + y}\\n#! {x , y, y , x + y}\\n# Sort strings into dictionary order:\\n\\n\\ndata: \\n  got: \\n    cat:     null\\n    Cat:     null\\n    catfish: null\\n    fish:    null\\n  expect: \\n    cat:     null\\n    Cat:     null\\n    catfish: null\\n    fish:    null\\n  expect_evaluated: \\n    cat:     null\\n    Cat:     null\\n    catfish: null\\n    fish:    null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "cat": null,
                        "Cat": null,
                        "catfish": null,
                        "fish": null
                    },
                    "expected": {
                        "cat": null,
                        "Cat": null,
                        "catfish": null,
                        "fish": null
                    }
                }
            },
            {
                "title": "Sort[{Pi, E, 2, 3, 1, Sqrt[2]}]    ➡️     {1, 2, 3, Sqrt[2], E, Pi}",
                "fullTitle": "Sort[{Pi, E, 2, 3, 1, Sqrt[2]}]    ➡️     {1, 2, 3, Sqrt[2], E, Pi}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "616fd99b-e247-4855-bc80-ae1f745a343f",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Sort by structure:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sort[{Pi, E, 2, 3, 1, Sqrt[2]}, Less]    ➡️     {1, Sqrt[2], 2, E, 3, Pi}",
                "fullTitle": "Sort[{Pi, E, 2, 3, 1, Sqrt[2]}, Less]    ➡️     {1, Sqrt[2], 2, E, 3, Pi}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "801248cf-1607-4a52-9f04-81243740d39f",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Sort by numerical value:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sort[f[4, 2, 1, 3]]    ➡️     f[1, 2, 3, 4]",
                "fullTitle": "Sort[f[4, 2, 1, 3]]    ➡️     f[1, 2, 3, 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3d096bd5-7cf0-4575-8bd2-6b1def5329be",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Sort expressions with any head:\\n\\n\\ndata: \\n  got:              f[1, 2, 3, 4]\\n  expect:           f[1, 2, 3, 4]\\n  expect_evaluated: f[1, 2, 3, 4]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[1, 2, 3, 4]",
                    "expected": "f[1, 2, 3, 4]"
                }
            },
            {
                "title": "Sort[b . c . d . a]    ➡️     a . b . c . d",
                "fullTitle": "Sort[b . c . d . a]    ➡️     a . b . c . d",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "526d19d4-da8b-4102-9d17-ce0376c78d1e",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              a . b . c . d\\n  expect:           a . b . c . d\\n  expect_evaluated: a . b . c . d\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a . b . c . d",
                    "expected": "a . b . c . d"
                }
            },
            {
                "title": "Sort[{-11, 10, 2, 1, -4}]    ➡️     {-11, -4, 1, 2, 10}",
                "fullTitle": "Sort[{-11, 10, 2, 1, -4}]    ➡️     {-11, -4, 1, 2, 10}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e6701b4c-d297-49b2-a02f-c0ee98f9ef40",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Sort integers by magnitude:\\n\\n\\ndata: \\n  got: \\n    1:   null\\n    2:   null\\n    10:  null\\n    -11: null\\n    -4:  null\\n  expect: \\n    1:   null\\n    2:   null\\n    10:  null\\n    -11: null\\n    -4:  null\\n  expect_evaluated: \\n    1:   null\\n    2:   null\\n    10:  null\\n    -11: null\\n    -4:  null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "10": null,
                        "-11": null,
                        "-4": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "10": null,
                        "-11": null,
                        "-4": null
                    }
                }
            },
            {
                "title": "Sort[{-11, 10, 2, 1, -4}, Abs[#1] < Abs[#2] & ]    ➡️     {1, 2, -4, 10, -11}",
                "fullTitle": "Sort[{-11, 10, 2, 1, -4}, Abs[#1] < Abs[#2] & ]    ➡️     {1, 2, -4, 10, -11}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b02eccdd-cd58-4661-bdb0-84b35d103d94",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Sort by absolute value:\\n\\n\\ndata: \\n  got: \\n    1:   null\\n    2:   null\\n    10:  null\\n    -4:  null\\n    -11: null\\n  expect: \\n    1:   null\\n    2:   null\\n    10:  null\\n    -4:  null\\n    -11: null\\n  expect_evaluated: \\n    1:   null\\n    2:   null\\n    10:  null\\n    -4:  null\\n    -11: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "10": null,
                        "-4": null,
                        "-11": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "10": null,
                        "-4": null,
                        "-11": null
                    }
                }
            },
            {
                "title": "Sort[Join[Log[Range[10]], Sqrt[Range[10]]]]    ➡️     {0, 1, 2, 3, Sqrt[2], 2*Sqrt[2], Sqrt[3], Sqrt[5], Sqrt[6], Sqrt[7], Sqrt[10], Log[2], Log[3], Log[4], Log[5], Log[6], Log[7], Log[8], Log[9], Log[10]}",
                "fullTitle": "Sort[Join[Log[Range[10]], Sqrt[Range[10]]]]    ➡️     {0, 1, 2, 3, Sqrt[2], 2*Sqrt[2], Sqrt[3], Sqrt[5], Sqrt[6], Sqrt[7], Sqrt[10], Log[2], Log[3], Log[4], Log[5], Log[6], Log[7], Log[8], Log[9], Log[10]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "440625d8-7013-4f57-8ad2-f4bdaabc7954",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Sort by structure:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sort[Join[Log[Range[10]], Sqrt[Range[10]]], Less]    ➡️     {0, Log[2], 1, Log[3], Log[4], Sqrt[2], Log[5], Sqrt[3], Log[6], Log[7], 2, Log[8], Log[9], Sqrt[5], Log[10], Sqrt[6], Sqrt[7], 2*Sqrt[2], 3, Sqrt[10]}",
                "fullTitle": "Sort[Join[Log[Range[10]], Sqrt[Range[10]]], Less]    ➡️     {0, Log[2], 1, Log[3], Log[4], Sqrt[2], Log[5], Sqrt[3], Log[6], Log[7], 2, Log[8], Log[9], Sqrt[5], Log[10], Sqrt[6], Sqrt[7], 2*Sqrt[2], 3, Sqrt[10]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "aa21c2ca-d423-4fb6-9d94-43ee4b2ba02f",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Sort by numerical value:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sort[{\"aa\", \"abb\", \"ba\", \"b\", \"aaa\"}]    ➡️     {aa, aaa, abb, b, ba}",
                "fullTitle": "Sort[{\"aa\", \"abb\", \"ba\", \"b\", \"aaa\"}]    ➡️     {aa, aaa, abb, b, ba}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4fd33c72-278b-4aa3-939a-1c67ec299d7a",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Sort strings by dictionary order:\\n\\n\\ndata: \\n  got: \\n    aa:  null\\n    aaa: null\\n    abb: null\\n    b:   null\\n    ba:  null\\n  expect: \\n    aa:  null\\n    aaa: null\\n    abb: null\\n    b:   null\\n    ba:  null\\n  expect_evaluated: \\n    aa:  null\\n    aaa: null\\n    abb: null\\n    b:   null\\n    ba:  null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "aa": null,
                        "aaa": null,
                        "abb": null,
                        "b": null,
                        "ba": null
                    },
                    "expected": {
                        "aa": null,
                        "aaa": null,
                        "abb": null,
                        "b": null,
                        "ba": null
                    }
                }
            },
            {
                "title": "Sort[{\"aa\", \"abb\", \"ba\", \"b\", \"aaa\"}, StringLength[#1] < StringLength[#2] & ]    ➡️     {b, ba, aa, aaa, abb}",
                "fullTitle": "Sort[{\"aa\", \"abb\", \"ba\", \"b\", \"aaa\"}, StringLength[#1] < StringLength[#2] & ]    ➡️     {b, ba, aa, aaa, abb}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "45a30690-38f8-4915-8434-326a7972a61f",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Sort strings by length:\\n\\n\\ndata: \\n  got: \\n    b:   null\\n    ba:  null\\n    aa:  null\\n    aaa: null\\n    abb: null\\n  expect: \\n    b:   null\\n    ba:  null\\n    aa:  null\\n    aaa: null\\n    abb: null\\n  expect_evaluated: \\n    b:   null\\n    ba:  null\\n    aa:  null\\n    aaa: null\\n    abb: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "b": null,
                        "ba": null,
                        "aa": null,
                        "aaa": null,
                        "abb": null
                    },
                    "expected": {
                        "b": null,
                        "ba": null,
                        "aa": null,
                        "aaa": null,
                        "abb": null
                    }
                }
            },
            {
                "title": "RandomInteger[{-5, 5}, {10, 3}]    ➡️     {{3, 1, 4}, {5, -3, -3}, {-4, 4, 3}, {5, 2, -3}, {3, 3, -1}, {2, -4, 4}, {0, 3, 5}, {-5, 5, -4}, {1, 0, 0}, {-2, -1, -3}}",
                "fullTitle": "RandomInteger[{-5, 5}, {10, 3}]    ➡️     {{3, 1, 4}, {5, -3, -3}, {-4, 4, 3}, {5, 2, -3}, {3, 3, -1}, {2, -4, 4}, {0, 3, 5}, {-5, 5, -4}, {1, 0, 0}, {-2, -1, -3}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d009e152-d14a-48c3-b7aa-e79afd58a7be",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": true,
                "isHook": false,
                "context": "\"# Sort by norm:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sort[%, Norm[#1] < Norm[#2] & ]    ➡️     {{1, 0, 0}, {-2, -1, -3}, {3, 3, -1}, {3, 1, 4}, {0, 3, 5}, {2, -4, 4}, {5, 2, -3}, {-4, 4, 3}, {5, -3, -3}, {-5, 5, -4}} # skip",
                "fullTitle": "Sort[%, Norm[#1] < Norm[#2] & ]    ➡️     {{1, 0, 0}, {-2, -1, -3}, {3, 3, -1}, {3, 1, 4}, {0, 3, 5}, {2, -4, 4}, {5, 2, -3}, {-4, 4, 3}, {5, -3, -3}, {-5, 5, -4}} # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6760dd6b-d4b0-4d31-af89-6e2cf8476dda",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sort[{I, 1 + I, 1 - I, 2 + 3*I}, Re[#1] < Re[#2] & ]    ➡️     {I, 1 - I, 1 + I, 2 + 3*I}",
                "fullTitle": "Sort[{I, 1 + I, 1 - I, 2 + 3*I}, Re[#1] < Re[#2] & ]    ➡️     {I, 1 - I, 1 + I, 2 + 3*I}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ae79dfcb-a62d-4f05-9e30-4917c6428ade",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Sort by real part:\\n\\n\\ndata: \\n  got: \\n    I:       null\\n    1 - I:   null\\n    1 + I:   null\\n    2 + 3 I: null\\n  expect: \\n    I:       null\\n    1 - I:   null\\n    1 + I:   null\\n    2 + 3*I: null\\n  expect_evaluated: \\n    I:       null\\n    1 - I:   null\\n    1 + I:   null\\n    2 + 3 I: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "I": null,
                        "1 - I": null,
                        "1 + I": null,
                        "2 + 3 I": null
                    },
                    "expected": {
                        "I": null,
                        "1 - I": null,
                        "1 + I": null,
                        "2 + 3*I": null
                    }
                }
            },
            {
                "title": "Sort[{a + b + c, a + b, a + c}]    ➡️     {a + b, a + c, a + b + c}",
                "fullTitle": "Sort[{a + b + c, a + b, a + c}]    ➡️     {a + b, a + c, a + b + c}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "003af7e4-35e8-4184-88c8-9d87e8167d24",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Shorter expressions are sorted before longer ones:\\n\\n\\ndata: \\n  got: \\n    a + b:     null\\n    a + c:     null\\n    a + b + c: null\\n  expect: \\n    a + b:     null\\n    a + c:     null\\n    a + b + c: null\\n  expect_evaluated: \\n    a + b:     null\\n    a + c:     null\\n    a + b + c: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "a + b": null,
                        "a + c": null,
                        "a + b + c": null
                    },
                    "expected": {
                        "a + b": null,
                        "a + c": null,
                        "a + b + c": null
                    }
                }
            },
            {
                "title": "Sort[{5.6, 5, 2.3, -1, 4/3, 1}]    ➡️     {-1, 1, 4/3, 2.3, 5, 5.6}",
                "fullTitle": "Sort[{5.6, 5, 2.3, -1, 4/3, 1}]    ➡️     {-1, 1, 4/3, 2.3, 5, 5.6}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2885a3c1-43a8-490f-a5c9-742f3d03f9a1",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Explicit numbers are sorted in numerical order:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sort[{a + b + c, a + b, a + c}, OrderedQ[{#2, #1}] & ]    ➡️     {a + b + c, a + c, a + b}",
                "fullTitle": "Sort[{a + b + c, a + b, a + c}, OrderedQ[{#2, #1}] & ]    ➡️     {a + b + c, a + c, a + b}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c08aa8c7-6de9-4d7a-b998-d527a8b57138",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"#! {-1, 1, -, 2.3, 5, 5.6}\\n#! {-1, 1, -, 2.3, 5, 5.6}\\n# Sort in reverse order:\\n\\n\\ndata: \\n  got: \\n    a + b + c: null\\n    a + c:     null\\n    a + b:     null\\n  expect: \\n    a + b + c: null\\n    a + c:     null\\n    a + b:     null\\n  expect_evaluated: \\n    a + b + c: null\\n    a + c:     null\\n    a + b:     null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "a + b + c": null,
                        "a + c": null,
                        "a + b": null
                    },
                    "expected": {
                        "a + b + c": null,
                        "a + c": null,
                        "a + b": null
                    }
                }
            },
            {
                "title": "(a + b + c)*(a + b)*(a + c)    ➡️     (a + b)*(a + c)*(a + b + c)",
                "fullTitle": "(a + b + c)*(a + b)*(a + c)    ➡️     (a + b)*(a + c)*(a + b + c)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d7da0617-95b2-4596-8e9d-e7373274d9fa",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Orderless functions sort in the same order as RefLink[Sort,paclet:ref/Sort]:\\n\\n\\ndata: \\n  got:              (a + b) (a + c) (a + b + c)\\n  expect:           (a + b)*(a + c)*(a + b + c)\\n  expect_evaluated: (a + b) (a + c) (a + b + c)\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(a + b) (a + c) (a + b + c)",
                    "expected": "(a + b)*(a + c)*(a + b + c)"
                }
            },
            {
                "title": "Sort[{4, 1, 3, 2}, (Print[{#1, #2}]; #1 > #2) & ]    ➡️     {4, 3, 2, 1}",
                "fullTitle": "Sort[{4, 1, 3, 2}, (Print[{#1, #2}]; #1 > #2) & ]    ➡️     {4, 3, 2, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1d49dbab-fa43-4525-956f-28b92df24b22",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Print each comparison done:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    2: null\\n    3: null\\n    4: null\\n  expect: \\n    1: null\\n    2: null\\n    3: null\\n    4: null\\n  expect_evaluated: \\n    1: null\\n    2: null\\n    3: null\\n    4: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "4": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "4": null
                    }
                }
            },
            {
                "title": "Reap[Sort[{4, 1, 3, 2}, (Sow[{#1, #2}]; #1 > #2) & ]]    ➡️     {{4, 3, 2, 1}, {{{4, 1}, {1, 3}, {4, 1}, {3, 2}, {4, 3}, {1, 3}, {1, 2}}}} # skip",
                "fullTitle": "Reap[Sort[{4, 1, 3, 2}, (Sow[{#1, #2}]; #1 > #2) & ]]    ➡️     {{4, 3, 2, 1}, {{{4, 1}, {1, 3}, {4, 1}, {3, 2}, {4, 3}, {1, 3}, {1, 2}}}} # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "314a3408-a0fd-48b2-9276-2e9c7be50fc5",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Collect a list of the comparisons done:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "list = RandomInteger[10, 10] ;; Sort[list]    ➡️     {0, 0, 1, 3, 3, 6, 6, 7, 8, 10}",
                "fullTitle": "list = RandomInteger[10, 10] ;; Sort[list]    ➡️     {0, 0, 1, 3, 3, 6, 6, 7, 8, 10}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2ba3a7c5-4a65-48a2-828b-857b254568d4",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Sort,paclet:ref/Sort][list] is equivalent to list[[RefLink[Ordering,paclet:ref/Ordering][list]]]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "list[[Ordering[list]]]    ➡️     {0, 0, 1, 3, 3, 6, 6, 7, 8, 10}",
                "fullTitle": "list[[Ordering[list]]]    ➡️     {0, 0, 1, 3, 3, 6, 6, 7, 8, 10}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "29c7f9b8-252b-4266-be1a-26f5119318dd",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sort[{Infinity, Sqrt[2], 1, 2, -Infinity, 1/Sqrt[2]}]    ➡️     {1, 2, 1/Sqrt[2], Sqrt[2], -Infinity, Infinity}",
                "fullTitle": "Sort[{Infinity, Sqrt[2], 1, 2, -Infinity, 1/Sqrt[2]}]    ➡️     {1, 2, 1/Sqrt[2], Sqrt[2], -Infinity, Infinity}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a066b36d-0cf6-4cba-ba33-734975789c6c",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numeric expressions are sorted by structure as well as numerical value:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sort[{Infinity, Sqrt[2], 1, 2, -Infinity, 1/Sqrt[2]}, Less]    ➡️     {-Infinity, 1/Sqrt[2], 1, Sqrt[2], 2, Infinity}",
                "fullTitle": "Sort[{Infinity, Sqrt[2], 1, 2, -Infinity, 1/Sqrt[2]}, Less]    ➡️     {-Infinity, 1/Sqrt[2], 1, Sqrt[2], 2, Infinity}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "492f88cc-a8e8-428e-9bf6-f57f17767705",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"#! {1, 2, -------, Sqrt[2], -Infinity, Infinity}\\n#! {1, 2, -------, Sqrt[2], -Infinity, Infinity}\\n# Sort by numerical value only:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sort[{4, 1, 3, 7, 9}, #1 > 3 & ]    ➡️     {4, 7, 9, 3, 1}",
                "fullTitle": "Sort[{4, 1, 3, 7, 9}, #1 > 3 & ]    ➡️     {4, 7, 9, 3, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "302752d5-4198-43b6-a6a7-05397deb24af",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"#! {-Infinity, -------, 1, Sqrt[2], 2, Infinity}\\n#!             Sqrt[2]\\n#! {-Infinity, -------, 1, Sqrt[2], 2, Infinity}\\n#!             Sqrt[2]\\n# Elements whose order is not determined by the ordering function may not be kept in order:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    3: null\\n    4: null\\n    7: null\\n    9: null\\n  expect: \\n    1: null\\n    3: null\\n    4: null\\n    7: null\\n    9: null\\n  expect_evaluated: \\n    1: null\\n    3: null\\n    4: null\\n    7: null\\n    9: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "3": null,
                        "4": null,
                        "7": null,
                        "9": null
                    },
                    "expected": {
                        "1": null,
                        "3": null,
                        "4": null,
                        "7": null,
                        "9": null
                    }
                }
            },
            {
                "title": "Sort[{4, 3, 1, 7, 9}, #1 > 3 & ]    ➡️     {4, 7, 9, 1, 3}",
                "fullTitle": "Sort[{4, 3, 1, 7, 9}, #1 > 3 & ]    ➡️     {4, 7, 9, 1, 3}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a538c4fd-cf59-4115-80ff-e88b41153426",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got: \\n    1: null\\n    3: null\\n    4: null\\n    7: null\\n    9: null\\n  expect: \\n    1: null\\n    3: null\\n    4: null\\n    7: null\\n    9: null\\n  expect_evaluated: \\n    1: null\\n    3: null\\n    4: null\\n    7: null\\n    9: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "3": null,
                        "4": null,
                        "7": null,
                        "9": null
                    },
                    "expected": {
                        "1": null,
                        "3": null,
                        "4": null,
                        "7": null,
                        "9": null
                    }
                }
            },
            {
                "title": "HoldComplete[ListPlot[Reap[Sort[Table[Round[10*Sin[t]], {t, 0, 50}], (Sow[#1]; #1 > #2) & ]][[2,1]]]]    ➡️     $Failed # skip",
                "fullTitle": "HoldComplete[ListPlot[Reap[Sort[Table[Round[10*Sin[t]], {t, 0, 50}], (Sow[#1]; #1 > #2) & ]][[2,1]]]]    ➡️     $Failed # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2dfa507b-7d9e-4aba-a095-7d4ba3ca4959",
                "parentUUID": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
                "skipped": false,
                "isHook": false,
                "context": "\"# Show comparisons made in doing a sort:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "de3746de-bb65-4aaa-a811-d50ce790a6ea",
            "5737b347-6159-4005-b55c-ff7dd59c2927",
            "40e2c217-9bc8-4afc-a197-c54e1466a311",
            "47d3d015-39ab-41ad-a6da-3a0bc65710af",
            "e7e0ed62-dddb-4839-945c-4ebe4ba42342",
            "8586c660-bab8-4345-b987-462a485ae4d0",
            "1d29b993-fc2b-4f44-a924-954799e80120",
            "4c4bdc97-66bc-4bea-9a03-d2af7b7254d0",
            "616fd99b-e247-4855-bc80-ae1f745a343f",
            "801248cf-1607-4a52-9f04-81243740d39f",
            "3d096bd5-7cf0-4575-8bd2-6b1def5329be",
            "526d19d4-da8b-4102-9d17-ce0376c78d1e",
            "e6701b4c-d297-49b2-a02f-c0ee98f9ef40",
            "b02eccdd-cd58-4661-bdb0-84b35d103d94",
            "440625d8-7013-4f57-8ad2-f4bdaabc7954",
            "aa21c2ca-d423-4fb6-9d94-43ee4b2ba02f",
            "4fd33c72-278b-4aa3-939a-1c67ec299d7a",
            "45a30690-38f8-4915-8434-326a7972a61f",
            "d009e152-d14a-48c3-b7aa-e79afd58a7be",
            "6760dd6b-d4b0-4d31-af89-6e2cf8476dda",
            "ae79dfcb-a62d-4f05-9e30-4917c6428ade",
            "003af7e4-35e8-4184-88c8-9d87e8167d24",
            "2885a3c1-43a8-490f-a5c9-742f3d03f9a1",
            "c08aa8c7-6de9-4d7a-b998-d527a8b57138",
            "d7da0617-95b2-4596-8e9d-e7373274d9fa",
            "1d49dbab-fa43-4525-956f-28b92df24b22",
            "314a3408-a0fd-48b2-9276-2e9c7be50fc5",
            "2ba3a7c5-4a65-48a2-828b-857b254568d4",
            "29c7f9b8-252b-4266-be1a-26f5119318dd",
            "a066b36d-0cf6-4cba-ba33-734975789c6c",
            "492f88cc-a8e8-428e-9bf6-f57f17767705",
            "302752d5-4198-43b6-a6a7-05397deb24af",
            "a538c4fd-cf59-4115-80ff-e88b41153426",
            "2dfa507b-7d9e-4aba-a095-7d4ba3ca4959"
        ],
        "failures": [],
        "skipped": [
            "e7e0ed62-dddb-4839-945c-4ebe4ba42342",
            "8586c660-bab8-4345-b987-462a485ae4d0",
            "d009e152-d14a-48c3-b7aa-e79afd58a7be",
            "2ba3a7c5-4a65-48a2-828b-857b254568d4",
            "29c7f9b8-252b-4266-be1a-26f5119318dd"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "4d04c725-929c-4657-8ddd-6b74769cc1a8",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
