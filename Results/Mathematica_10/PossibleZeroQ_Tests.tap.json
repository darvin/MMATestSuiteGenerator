{
    "stats": {
        "suites": 0,
        "tests": 23,
        "passes": 23,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-11T04:14:20.063Z",
        "end": "2018-06-11T04:14:20.063Z",
        "duration": 0,
        "testsRegistered": 23,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "PossibleZeroQ[E^(I*(Pi/4)) - (-1)^(1/4)]    ➡️     True",
                "fullTitle": "PossibleZeroQ[E^(I*(Pi/4)) - (-1)^(1/4)]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f4e27d55-de80-4dc5-8470-cb1044d5a62f",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/PossibleZeroQ_Tests.m\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n#! TextForm[ColonForm[MessageName[PossibleZeroQ, ztest1], StringForm[Unable to decide whether numeric quantity `1` is equal to zero. Assuming it is., Short[HoldForm[Sqrt[2] + Sqrt[3] - Root[1 - 10*#1^2 + #1^4 & , 4, 0]], 3]]]]\\n#! TextForm[ColonForm[MessageName[PossibleZeroQ, ztest1], StringForm[Unable to decide whether numeric quantity `1` is equal to zero. Assuming it is., Short[HoldForm[1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Sqrt[2] + Sqrt[3] - Root[1 - 10*#1^2 + #1^4 & , 4, 0]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Power, infy], StringForm[Infinite expression `1` encountered., Short[HoldForm[0^(-1)], 3]]]]\\n#! TextForm[ColonForm[MessageName[$RecursionLimit, reclim], StringForm[Recursion depth of `1` exceeded., Short[HoldForm[1024], 3]]]]\\n#! TextForm[ColonForm[MessageName[$RecursionLimit, reclim], StringForm[Recursion depth of `1` exceeded., Short[HoldForm[1024], 3]]]]\\n#! TextForm[ColonForm[MessageName[$RecursionLimit, reclim], StringForm[Recursion depth of `1` exceeded., Short[HoldForm[1024], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$RecursionLimit, reclim]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: PossibleZeroQ_Tests\\n# Test whether a numeric expression is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[(x + 1)*(x - 1) - x^2 + 1]    ➡️     True",
                "fullTitle": "PossibleZeroQ[(x + 1)*(x - 1) - x^2 + 1]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f52f52aa-b8de-451f-8397-9b7d9aae95ad",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test whether a symbolic expression is likely to be identically zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[(E + Pi)^2 - E^2 - Pi^2 - 2*E*Pi]    ➡️     True",
                "fullTitle": "PossibleZeroQ[(E + Pi)^2 - E^2 - Pi^2 - 2*E*Pi]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "18ee2e97-129b-4451-9d79-86f0bca57ec8",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": false,
                "isHook": false,
                "context": "\"# Show that a numeric expression is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[E^Pi - Pi^E]    ➡️     False",
                "fullTitle": "PossibleZeroQ[E^Pi - Pi^E]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "131f78bd-3ea9-494c-8e55-023582b27c28",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": false,
                "isHook": false,
                "context": "\"# Show that a numeric expression is nonzero: \\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "PossibleZeroQ[2^(2*I) - 2^(-2*I) - 2*I*Sin[Log[4]]]    ➡️     True",
                "fullTitle": "PossibleZeroQ[2^(2*I) - 2^(-2*I) - 2*I*Sin[Log[4]]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5c37788a-a989-4eb1-9b79-5368f9a67665",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": false,
                "isHook": false,
                "context": "\"# Decide that a numeric expression is zero based on approximate computations:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[1/x + 1/y - (x + y)/(x*y)]    ➡️     True",
                "fullTitle": "PossibleZeroQ[1/x + 1/y - (x + y)/(x*y)]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8f2a1b23-cea8-42c2-a200-29a74c1eb571",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test whether symbolic expressions are likely to be identically zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[Sqrt[x^2] - x]    ➡️     False",
                "fullTitle": "PossibleZeroQ[Sqrt[x^2] - x]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "02303122-4bf8-4bcc-95c9-3b7ffa3e10e3",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "f = Sqrt[x^2] - x ;; PossibleZeroQ[f]    ➡️     False",
                "fullTitle": "f = Sqrt[x^2] - x ;; PossibleZeroQ[f]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "24584419-59af-4b58-a3eb-10b8e24dd014",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": true,
                "isHook": false,
                "context": "\"# For arbitrary complex x, f is not identically zero:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PossibleZeroQ[f, Assumptions -> Re[x] > 0]    ➡️     True",
                "fullTitle": "PossibleZeroQ[f, Assumptions -> Re[x] > 0]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ffc114f3-f4d4-49e7-ba9e-aeffa2f136a1",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": true,
                "isHook": false,
                "context": "\"# When RefLink[Re,paclet:ref/Re][x]>0, f is identically zero:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "zero = Sqrt[2] + Sqrt[3] - RootReduce[Sqrt[2] + Sqrt[3]]    ➡️     Sqrt[2] + Sqrt[3] - Root[1 - 10*#1^2 + #1^4 & , 4]",
                "fullTitle": "zero = Sqrt[2] + Sqrt[3] - RootReduce[Sqrt[2] + Sqrt[3]]    ➡️     Sqrt[2] + Sqrt[3] - Root[1 - 10*#1^2 + #1^4 & , 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5e7e0d04-2c86-48ca-9d23-ad9e5c540320",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": false,
                "isHook": false,
                "context": "\"# By default, numeric approximations may be used to decide that an algebraic number is zero:\\n\\n\\ndata: \\n  got:              2     4\\n  expect:           Sqrt[2] + Sqrt[3] - Root[1 - 10*#1^2 +\\n  expect_evaluated: 2     4\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2     4",
                    "expected": "Sqrt[2] + Sqrt[3] - Root[1 - 10*#1^2 +"
                }
            },
            {
                "title": "PossibleZeroQ[zero]    ➡️     True",
                "fullTitle": "PossibleZeroQ[zero]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6210ebe6-d97c-48e2-8b43-39afb6dadea7",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": false,
                "isHook": false,
                "context": "\"#! Sqrt[2] + Sqrt[3] - Root[1 - 10 #1  + #1  & , 4]\\n#! Sqrt[2] + Sqrt[3] - Root[1 - 10 #1  + #1  & , 4]\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[zero + 10^(-100)]    ➡️     True",
                "fullTitle": "PossibleZeroQ[zero + 10^(-100)]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "158ed5ca-37bd-4335-998c-dfd8e3d276d1",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": false,
                "isHook": false,
                "context": "\"# Approximate methods may give incorrect positive answers:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[zero, Method -> \"ExactAlgebraics\"]    ➡️     True",
                "fullTitle": "PossibleZeroQ[zero, Method -> \"ExactAlgebraics\"]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "30b9384d-46c9-4bdb-9076-2b4f950d56c3",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": false,
                "isHook": false,
                "context": "\"# With RefLink[Method,paclet:ref/Method]->\\\"ExactAlgebraics\\\" exact methods are used for explicit algebraic numbers:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[zero + 10^(-100), Method -> \"ExactAlgebraics\"]    ➡️     False",
                "fullTitle": "PossibleZeroQ[zero + 10^(-100), Method -> \"ExactAlgebraics\"]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5b07a8a6-c530-4e10-8306-739fd01820f6",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": false,
                "isHook": false,
                "context": "\"# For explicit algebraic numbers the answer is provably correct:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "QuadraticRoots[eq_, x_] := Module[{a, b, c, \\[CapitalDelta]}, {c, b, a} = CoefficientList[Subtract @@ eq, x]; If[ !PossibleZeroQ[a], \\[CapitalDelta] = b^2 - 4*a*c; x == (-b - Sqrt[\\[CapitalDelta]])/(2*a) || x == (-b + Sqrt[\\[CapitalDelta]])/(2*a), If[ !PossibleZeroQ[b], x == -(c/b), PossibleZeroQ[c]]]]; QuadraticRoots[2*Log[2]*x^2 - Log[4]*x^2 + x - 1 == 0, x]    ➡️     x == 1",
                "fullTitle": "QuadraticRoots[eq_, x_] := Module[{a, b, c, \\[CapitalDelta]}, {c, b, a} = CoefficientList[Subtract @@ eq, x]; If[ !PossibleZeroQ[a], \\[CapitalDelta] = b^2 - 4*a*c; x == (-b - Sqrt[\\[CapitalDelta]])/(2*a) || x == (-b + Sqrt[\\[CapitalDelta]])/(2*a), If[ !PossibleZeroQ[b], x == -(c/b), PossibleZeroQ[c]]]]; QuadraticRoots[2*Log[2]*x^2 - Log[4]*x^2 + x - 1 == 0, x]    ➡️     x == 1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fb969746-dea9-4749-8ef5-f629e9489a78",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": false,
                "isHook": false,
                "context": "\"# Solving polynomial equations requires deciding whether coefficients are zero:\\n\\n\\ndata: \\n  got:              x == 1\\n  expect:           x == 1\\n  expect_evaluated: x == 1\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x == 1",
                    "expected": "x == 1"
                }
            },
            {
                "title": "Reduce[2*Log[2]*x^2 - Log[4]*x^2 + x - 1 == 0, x]    ➡️     x == 1",
                "fullTitle": "Reduce[2*Log[2]*x^2 - Log[4]*x^2 + x - 1 == 0, x]    ➡️     x == 1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4aa0f3e2-d10c-4a56-9e33-22fc96351e9c",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": true,
                "isHook": false,
                "context": "\"# Wolfram Language equation solvers use zero testing automatically:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "e = (E + Pi)^2 - E^2 - Pi^2 - 2*E*Pi ;; e === 0    ➡️     False",
                "fullTitle": "e = (E + Pi)^2 - E^2 - Pi^2 - 2*E*Pi ;; e === 0    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d832460a-e59b-40ef-82c7-1728ddc46a13",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[SameQ,paclet:ref/SameQ][e,0] returns RefLink[True,paclet:ref/True] only if e is explicitly identical to zero:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "e == 0    ➡️     True",
                "fullTitle": "e == 0    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5eb0cb2f-b2d9-4fc5-aea0-de3aa77e15e1",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Equal,paclet:ref/Equal][e,0] uses simple tests to decide whether e is zero:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "ee = Log[4] + 2*Log[Sin[Pi/8]] - Log[2 - Sqrt[2]] ;; ee == 0    ➡️     Log[4] - Log[2 - Sqrt[2]] + 2*Log[Sin[Pi/8]] == 0",
                "fullTitle": "ee = Log[4] + 2*Log[Sin[Pi/8]] - Log[2 - Sqrt[2]] ;; ee == 0    ➡️     Log[4] - Log[2 - Sqrt[2]] + 2*Log[Sin[Pi/8]] == 0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "54277ddf-e94f-4f98-a554-679828680721",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": true,
                "isHook": false,
                "context": "\"# When RefLink[Equal,paclet:ref/Equal] cannot decide whether an expression is zero it returns unchanged:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PossibleZeroQ[ee]    ➡️     True",
                "fullTitle": "PossibleZeroQ[ee]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bd50203e-d2ed-4df2-a2ac-4d60cd9af570",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] uses numeric methods to test whether ee is zero:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "FullSimplify[ee]    ➡️     0",
                "fullTitle": "FullSimplify[ee]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3ea32d84-53f5-4f23-8ba3-3659200448c1",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[FullSimplify,paclet:ref/FullSimplify] proves symbolically that ee is zero:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "e = Sqrt[2] + Sqrt[3] - RootReduce[Sqrt[2] + Sqrt[3]] + 10^(-100) ;; PossibleZeroQ[e]    ➡️     True",
                "fullTitle": "e = Sqrt[2] + Sqrt[3] - RootReduce[Sqrt[2] + Sqrt[3]] + 10^(-100) ;; PossibleZeroQ[e]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3a205648-effb-4f83-8d1f-68670c319740",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] may return RefLink[True,paclet:ref/True] for nonzero numeric expressions that are close to zero:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "FullSimplify[e]    ➡️     1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "fullTitle": "FullSimplify[e]    ➡️     1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a831aa05-24f4-46e1-997d-07e1a66d9616",
                "parentUUID": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "f4e27d55-de80-4dc5-8470-cb1044d5a62f",
            "f52f52aa-b8de-451f-8397-9b7d9aae95ad",
            "18ee2e97-129b-4451-9d79-86f0bca57ec8",
            "131f78bd-3ea9-494c-8e55-023582b27c28",
            "5c37788a-a989-4eb1-9b79-5368f9a67665",
            "8f2a1b23-cea8-42c2-a200-29a74c1eb571",
            "02303122-4bf8-4bcc-95c9-3b7ffa3e10e3",
            "24584419-59af-4b58-a3eb-10b8e24dd014",
            "ffc114f3-f4d4-49e7-ba9e-aeffa2f136a1",
            "5e7e0d04-2c86-48ca-9d23-ad9e5c540320",
            "6210ebe6-d97c-48e2-8b43-39afb6dadea7",
            "158ed5ca-37bd-4335-998c-dfd8e3d276d1",
            "30b9384d-46c9-4bdb-9076-2b4f950d56c3",
            "5b07a8a6-c530-4e10-8306-739fd01820f6",
            "fb969746-dea9-4749-8ef5-f629e9489a78",
            "4aa0f3e2-d10c-4a56-9e33-22fc96351e9c",
            "d832460a-e59b-40ef-82c7-1728ddc46a13",
            "5eb0cb2f-b2d9-4fc5-aea0-de3aa77e15e1",
            "54277ddf-e94f-4f98-a554-679828680721",
            "bd50203e-d2ed-4df2-a2ac-4d60cd9af570",
            "3ea32d84-53f5-4f23-8ba3-3659200448c1",
            "3a205648-effb-4f83-8d1f-68670c319740",
            "a831aa05-24f4-46e1-997d-07e1a66d9616"
        ],
        "failures": [],
        "skipped": [
            "24584419-59af-4b58-a3eb-10b8e24dd014",
            "ffc114f3-f4d4-49e7-ba9e-aeffa2f136a1",
            "4aa0f3e2-d10c-4a56-9e33-22fc96351e9c",
            "5eb0cb2f-b2d9-4fc5-aea0-de3aa77e15e1",
            "54277ddf-e94f-4f98-a554-679828680721",
            "bd50203e-d2ed-4df2-a2ac-4d60cd9af570",
            "3ea32d84-53f5-4f23-8ba3-3659200448c1",
            "3a205648-effb-4f83-8d1f-68670c319740",
            "a831aa05-24f4-46e1-997d-07e1a66d9616"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "71a5c210-b8c0-454b-8b02-0d7858f265d6",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
