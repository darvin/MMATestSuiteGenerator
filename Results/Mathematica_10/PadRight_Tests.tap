#! DOCKER > wolfram -script output/Tests/PadRight_Tests.m
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
# SYSTEM: Mathematica_10
# TEST: PadRight_Tests
# Pad with 0 to make the list be of length 10:
ok  PadRight[{a, b, c}, 10]    ==>     {a, b, c, 0, 0, 0, 0, 0, 0, 0}
    ---
    data:
        got: {a, b, c, 0, 0, 0, 0, 0, 0, 0}
        expect: {a, b, c, 0, 0, 0, 0, 0, 0, 0}
        expect_evaluated: {a, b, c, 0, 0, 0, 0, 0, 0, 0}
    ...
# Pad with x:
ok  PadRight[{a, b, c}, 10, x]    ==>     {a, b, c, x, x, x, x, x, x, x}
    ---
    data:
        got: {a, b, c, x, x, x, x, x, x, x}
        expect: {a, b, c, x, x, x, x, x, x, x}
        expect_evaluated: {a, b, c, x, x, x, x, x, x, x}
    ...
# Pad by repeating {x,y,z}:
ok  PadRight[{a, b, c}, 10, {x, y, z}]    ==>     {a, b, c, x, y, z, x, y, z, x}
    ---
    data:
        got: {a, b, c, x, y, z, x, y, z, x}
        expect: {a, b, c, x, y, z, x, y, z, x}
        expect_evaluated: {a, b, c, x, y, z, x, y, z, x}
    ...
# Leave margin 2 on the left:
ok  PadRight[{a, b, c}, 10, x, 2]    ==>     {x, x, a, b, c, x, x, x, x, x}
    ---
    data:
        got: {x, x, a, b, c, x, x, x, x, x}
        expect: {x, x, a, b, c, x, x, x, x, x}
        expect_evaluated: {x, x, a, b, c, x, x, x, x, x}
    ...
# Pad to make a 3*4 array:
ok  TableForm[PadRight[{{a, b}, {c}}, {3, 4}]]    ==>     a*b*0*0*c*0*0*0*0*0*0*0 # skip
# Pad to make a full array:
ok  TableForm[PadRight[{{a, b, c}, {d, e}, {f}}]]    ==>     a*b*c*d*e*0*f*0*0 # skip
# Negative length specifications pad on the left:
ok  PadRight[{a, b, c}, -10]    ==>     {0, 0, 0, 0, 0, 0, 0, a, b, c}
    ---
    data:
        got: {0, 0, 0, 0, 0, 0, 0, a, b, c}
        expect: {0, 0, 0, 0, 0, 0, 0, a, b, c}
        expect_evaluated: {0, 0, 0, 0, 0, 0, 0, a, b, c}
    ...
# Lay down repetitions of the padding, then superimpose the original array:
ok  TableForm[PadRight[{{aa, bb}, {cc}}, {4, 4}, {{x, y}, {z}}]]    ==>     aa*bb*x*y*cc*z*z*z*x*y*x*y*z*z*z*z # skip
# Use different margins for rows and columns:
ok  TableForm[PadRight[{{aa, bb}, {cc}}, {5, 5}, {{x, y}, {z}}, {1, 2}]]    ==>     z*z*z*z*z*x*y*aa*bb*x*z*z*cc*z*z*x*y*x*y*x*z*z*z*z*z # skip
# Use a head other than RefLink[List,paclet:ref/List]:
ok  PadRight[f[a, b, c], 8, x]    ==>     f[a, b, c, x, x, x, x, x]
    ---
    data:
        got: f[a, b, c, x, x, x, x, x]
        expect: f[a, b, c, x, x, x, x, x]
        expect_evaluated: f[a, b, c, x, x, x, x, x]
    ...
# Put a 1 at the center of a list of 0s:
ok  PadRight[{1}, 19, 0, 9]    ==>     {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    ---
    data:
        got: {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        expect: {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}
        expect_evaluated: {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    ...
# Lay out an array of tiles:
not ok  HoldComplete[ArrayPlot[PadRight[{{}}, {15, 15}, {{1, 0, 1}, {0, 1, 1}, {1, 0, 0}}], Mesh -> True]]    ==>     $Failed
    ---
    data:
        got: -Graphics-
        expect: $Failed
        expect_evaluated: $Failed
    ...
# RefLink[PadLeft,paclet:ref/PadLeft][list,n] and RefLink[PadRight,paclet:ref/PadRight][list,n] pad to make a list of length n:
ok  PadLeft[{1, 2, 3}, 5]    ==>     {0, 0, 1, 2, 3}
    ---
    data:
        got: {0, 0, 1, 2, 3}
        expect: {0, 0, 1, 2, 3}
        expect_evaluated: {0, 0, 1, 2, 3}
    ...
ok  PadRight[{1, 2, 3}, 5]    ==>     {1, 2, 3, 0, 0}
    ---
    data:
        got: {1, 2, 3, 0, 0}
        expect: {1, 2, 3, 0, 0}
        expect_evaluated: {1, 2, 3, 0, 0}
    ...
# RefLink[ArrayPad,paclet:ref/ArrayPad][list,n] pads with n additional elements on each side:
ok  ArrayPad[{1, 2, 3}, 5]    ==>     {0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0}
    ---
    data:
        got: {0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0}
        expect: {0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0}
        expect_evaluated: {0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 0}
    ...
# Pad with an element that is itself a list:
ok  PadRight[{a, b, c}, 7, {{u, v}}]    ==>     {a, b, c, {u, v}, {u, v}, {u, v}, {u, v}}
    ---
    data:
        got: {a, b, c, {u, v}, {u, v}, {u, v}, {u, v}}
        expect: {a, b, c, {u, v}, {u, v}, {u, v}, {u, v}}
        expect_evaluated: {a, b, c, {u, v}, {u, v}, {u, v}, {u, v}}
    ...
ok  PadRight[{a, b, c}, 7, {u, v}]    ==>     {a, b, c, v, u, v, u}
    ---
    data:
        got: {a, b, c, v, u, v, u}
        expect: {a, b, c, v, u, v, u}
        expect_evaluated: {a, b, c, v, u, v, u}
    ...
