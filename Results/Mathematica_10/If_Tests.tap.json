{
    "stats": {
        "suites": 0,
        "tests": 20,
        "passes": 20,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-02T19:35:10.697Z",
        "end": "2018-06-02T19:35:10.697Z",
        "duration": 0,
        "testsRegistered": 20,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "abs /@ {-1, 0, 1}    ➡️     {1, 0, 1}",
                "fullTitle": "abs /@ {-1, 0, 1}    ➡️     {1, 0, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2d0ffd0f-1f15-4cf1-97f7-228dd476ddec",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": true,
                "isHook": false,
                "context": "\"# SYSTEM: Mathematica_10\\n# TEST: If_Tests\\n# OUTPUT: output/Results/Mathematica_10/If_Tests.json\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "If[a < b, 1, 0]    ➡️     If[a < b, 1, 0]",
                "fullTitle": "If[a < b, 1, 0]    ➡️     If[a < b, 1, 0]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "32e28520-a190-458b-a822-9ca0f05dd71e",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": false,
                "isHook": false,
                "context": "\"# If the condition is neither RefLink[True,paclet:ref/True] nor RefLink[False,paclet:ref/False], RefLink[If,paclet:ref/If] remains unevaluated:\\n\\n\\ndata: \\n  got:              If[a < b, 1, 0]\\n  expect:           If[a < b, 1, 0]\\n  expect_evaluated: If[a < b, 1, 0]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "If[a < b, 1, 0]",
                    "expected": "If[a < b, 1, 0]"
                }
            },
            {
                "title": "If[a < b, 1, 0, Indeterminate]    ➡️     Indeterminate",
                "fullTitle": "If[a < b, 1, 0, Indeterminate]    ➡️     Indeterminate",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9e319dce-3c9f-4dfd-9dad-128ebab2304d",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": false,
                "isHook": false,
                "context": "\"# The form with an explicit case for an undetermined condition evaluates in any case:\\n\\n\\ndata: \\n  got:              Indeterminate\\n  expect:           Indeterminate\\n  expect_evaluated: Indeterminate\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Indeterminate",
                    "expected": "Indeterminate"
                }
            },
            {
                "title": "If[TrueQ[a < b], 1, 0]    ➡️     0",
                "fullTitle": "If[TrueQ[a < b], 1, 0]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "23b1160b-ffb4-4ef8-b433-d97423e105c4",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[TrueQ,paclet:ref/TrueQ] to force the condition to always return a Boolean value:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "f = If[Round[x] > x, x, -x]    ➡️     If[Round[x] > x, x, -x]",
                "fullTitle": "f = If[Round[x] > x, x, -x]    ➡️     If[Round[x] > x, x, -x]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9b6f5909-a27a-4168-9612-492eadc05ccd",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Define a piecewise function with both RefLink[If,paclet:ref/If] and RefLink[Round,paclet:ref/Round] as piecewise elements:\\n\\n\\ndata: \\n  got:              If[Round[x] > x, x, -x]\\n  expect:           If[Round[x] > x, x, -x]\\n  expect_evaluated: If[Round[x] > x, x, -x]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "If[Round[x] > x, x, -x]",
                    "expected": "If[Round[x] > x, x, -x]"
                }
            },
            {
                "title": "PiecewiseExpand[f, 0 < x < 5]    ➡️     Inequality[Piecewise[-x]*1, LessEqual, x, Less, 3/2] || 2 <= x <= 5/2 || Inequality[3, LessEqual, x, Less, 7/2] || 4 <= x <= 9/2 || x <= (1/2)*x*True",
                "fullTitle": "PiecewiseExpand[f, 0 < x < 5]    ➡️     Inequality[Piecewise[-x]*1, LessEqual, x, Less, 3/2] || 2 <= x <= 5/2 || Inequality[3, LessEqual, x, Less, 7/2] || 4 <= x <= 9/2 || x <= (1/2)*x*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "af679723-a6f9-47aa-b41a-38aa2045fb30",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[PiecewiseExpand,paclet:ref/PiecewiseExpand] to get it into piecewise normal form: \\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[f < 5 && 0 < x < 10, x, Reals]    ➡️     0 < x < 11/2 || 6 <= x <= 13/2 || Inequality[7, LessEqual, x, Less, 15/2] || 8 <= x <= 17/2 || Inequality[9, LessEqual, x, Less, 19/2]",
                "fullTitle": "Reduce[f < 5 && 0 < x < 10, x, Reals]    ➡️     0 < x < 11/2 || 6 <= x <= 13/2 || Inequality[7, LessEqual, x, Less, 15/2] || 8 <= x <= 17/2 || Inequality[9, LessEqual, x, Less, 19/2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bc23a0c9-a4ad-4608-82ee-3b0725759d9a",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": true,
                "isHook": false,
                "context": "\"# Perform several different symbolic operations: \\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Integrate[f, {x, 0, 10}]    ➡️     5/2",
                "fullTitle": "Integrate[f, {x, 0, 10}]    ➡️     5/2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "55315c8f-046f-4087-9a54-0349cde7f4c3",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              5/2\\n  expect:           5/2\\n  expect_evaluated: 5/2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "5/2",
                    "expected": "5/2"
                }
            },
            {
                "title": "D[f, x]    ➡️     If[Round[x] > x, 1, -1]",
                "fullTitle": "D[f, x]    ➡️     If[Round[x] > x, 1, -1]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1408a1df-d43d-4833-944f-4b5b46ca068d",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              If[Round[x] > x, 1, -1]\\n  expect:           If[Round[x] > x, 1, -1]\\n  expect_evaluated: If[Round[x] > x, 1, -1]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "If[Round[x] > x, 1, -1]",
                    "expected": "If[Round[x] > x, 1, -1]"
                }
            },
            {
                "title": "HoldComplete[Plot[f, {x, -2, 2}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[Plot[f, {x, -2, 2}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c228aadd-53f3-454b-afdc-e7108a5d21cf",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x = -2; If[x < 0, y = -x, y = x]; y    ➡️     2",
                "fullTitle": "x = -2; If[x < 0, y = -x, y = x]; y    ➡️     2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c8b7c697-1e86-4a75-a079-e547fed9b1f3",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[If,paclet:ref/If] can be used as a statement:\\n\\n\\ndata: \\n  got:              2\\n  expect:           2\\n  expect_evaluated: 2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 2,
                    "expected": 2
                }
            },
            {
                "title": "y = If[x < 0, -x, x]    ➡️     2",
                "fullTitle": "y = If[x < 0, -x, x]    ➡️     2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2482494a-5309-4f28-b991-490a0e1d993e",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": false,
                "isHook": false,
                "context": "\"# It can also be used as an expression returning a value:\\n\\n\\ndata: \\n  got:              2\\n  expect:           2\\n  expect_evaluated: 2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 2,
                    "expected": 2
                }
            },
            {
                "title": "x = 1; If[x != 0, 1/x, Indeterminate]    ➡️     1",
                "fullTitle": "x = 1; If[x != 0, 1/x, Indeterminate]    ➡️     1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ce77f9f9-ddeb-4381-b8c0-1f22fa554ca7",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Only the branch actually taken is evaluated:\\n\\n\\ndata: \\n  got:              1\\n  expect:           1\\n  expect_evaluated: 1\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1,
                    "expected": 1
                }
            },
            {
                "title": "sign /@ {-1, 0, 1, I}    ➡️     {-1, 1, 1, If[I < 0, -1, 1]}",
                "fullTitle": "sign /@ {-1, 0, 1, I}    ➡️     {-1, 1, 1, If[I < 0, -1, 1]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c3daf66a-18b0-400a-9978-36195950b2d5",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "sign2 /@ {-1, 0, 1, I}    ➡️     {-1, 0, 1, sign2[I]}",
                "fullTitle": "sign2 /@ {-1, 0, 1, I}    ➡️     {-1, 0, 1, sign2[I]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c52d153b-cd11-4e57-8b6e-03a9e6a794b5",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "cut /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "fullTitle": "cut /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2743125e-dc91-492b-8b2a-d4479e0046a3",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "cut2 /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "fullTitle": "cut2 /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b83e6af9-b9be-4fae-979e-d02d4673e43c",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PiecewiseExpand[If[c, a, b]]    ➡️     Piecewise[a]*c*b*True",
                "fullTitle": "PiecewiseExpand[If[c, a, b]]    ➡️     Piecewise[a]*c*b*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "afe47477-52c6-41c5-9c79-06d7914c2595",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[PiecewiseExpand,paclet:ref/PiecewiseExpand] to convert RefLink[If,paclet:ref/If] to RefLink[Piecewise,paclet:ref/Piecewise]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PiecewiseExpand[If[If[c1, a1, b1], a, b]]    ➡️     Piecewise[a]*(a1 && c1) || (b1 &&  !c1)*b*True",
                "fullTitle": "PiecewiseExpand[If[If[c1, a1, b1], a, b]]    ➡️     Piecewise[a]*(a1 && c1) || (b1 &&  !c1)*b*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "35226885-fa08-41b7-bb43-2ab336e20ea4",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PiecewiseExpand[If[c, If[c2, a2, b2], b]]    ➡️     Piecewise[a2]*c && c2*b!*c*b2*True",
                "fullTitle": "PiecewiseExpand[If[c, If[c2, a2, b2], b]]    ➡️     Piecewise[a2]*c && c2*b!*c*b2*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b465ae8e-adec-4a6d-894d-657f84e824aa",
                "parentUUID": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "2d0ffd0f-1f15-4cf1-97f7-228dd476ddec",
            "32e28520-a190-458b-a822-9ca0f05dd71e",
            "9e319dce-3c9f-4dfd-9dad-128ebab2304d",
            "23b1160b-ffb4-4ef8-b433-d97423e105c4",
            "9b6f5909-a27a-4168-9612-492eadc05ccd",
            "af679723-a6f9-47aa-b41a-38aa2045fb30",
            "bc23a0c9-a4ad-4608-82ee-3b0725759d9a",
            "55315c8f-046f-4087-9a54-0349cde7f4c3",
            "1408a1df-d43d-4833-944f-4b5b46ca068d",
            "c228aadd-53f3-454b-afdc-e7108a5d21cf",
            "c8b7c697-1e86-4a75-a079-e547fed9b1f3",
            "2482494a-5309-4f28-b991-490a0e1d993e",
            "ce77f9f9-ddeb-4381-b8c0-1f22fa554ca7",
            "c3daf66a-18b0-400a-9978-36195950b2d5",
            "c52d153b-cd11-4e57-8b6e-03a9e6a794b5",
            "2743125e-dc91-492b-8b2a-d4479e0046a3",
            "b83e6af9-b9be-4fae-979e-d02d4673e43c",
            "afe47477-52c6-41c5-9c79-06d7914c2595",
            "35226885-fa08-41b7-bb43-2ab336e20ea4",
            "b465ae8e-adec-4a6d-894d-657f84e824aa"
        ],
        "failures": [],
        "skipped": [
            "2d0ffd0f-1f15-4cf1-97f7-228dd476ddec",
            "af679723-a6f9-47aa-b41a-38aa2045fb30",
            "bc23a0c9-a4ad-4608-82ee-3b0725759d9a",
            "c228aadd-53f3-454b-afdc-e7108a5d21cf",
            "c3daf66a-18b0-400a-9978-36195950b2d5",
            "c52d153b-cd11-4e57-8b6e-03a9e6a794b5",
            "2743125e-dc91-492b-8b2a-d4479e0046a3",
            "b83e6af9-b9be-4fae-979e-d02d4673e43c",
            "afe47477-52c6-41c5-9c79-06d7914c2595",
            "35226885-fa08-41b7-bb43-2ab336e20ea4",
            "b465ae8e-adec-4a6d-894d-657f84e824aa"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "ff00c23d-a9aa-451b-b93c-f5fb063f351d",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
