{
    "stats": {
        "suites": 0,
        "tests": 20,
        "passes": 20,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T12:20:32.711Z",
        "end": "2018-06-03T12:20:32.711Z",
        "duration": 0,
        "testsRegistered": 20,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "abs /@ {-1, 0, 1}    ➡️     {1, 0, 1}",
                "fullTitle": "abs /@ {-1, 0, 1}    ➡️     {1, 0, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "550b87c6-6641-464d-8f5e-fb5bf91a3801",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": true,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/If_Tests.m\\n# SYSTEM: Mathematica_10\\n# TEST: If_Tests\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "If[a < b, 1, 0]    ➡️     If[a < b, 1, 0]",
                "fullTitle": "If[a < b, 1, 0]    ➡️     If[a < b, 1, 0]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8c1040c0-bd9f-4a53-9077-ae52c545a8ee",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": false,
                "isHook": false,
                "context": "\"# If the condition is neither RefLink[True,paclet:ref/True] nor RefLink[False,paclet:ref/False], RefLink[If,paclet:ref/If] remains unevaluated:\\n\\n\\ndata: \\n  got:              If[a < b, 1, 0]\\n  expect:           If[a < b, 1, 0]\\n  expect_evaluated: If[a < b, 1, 0]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "If[a < b, 1, 0]",
                    "expected": "If[a < b, 1, 0]"
                }
            },
            {
                "title": "If[a < b, 1, 0, Indeterminate]    ➡️     Indeterminate",
                "fullTitle": "If[a < b, 1, 0, Indeterminate]    ➡️     Indeterminate",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "388e8a44-278d-4a0e-b97a-dc4c97780edc",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": false,
                "isHook": false,
                "context": "\"# The form with an explicit case for an undetermined condition evaluates in any case:\\n\\n\\ndata: \\n  got:              Indeterminate\\n  expect:           Indeterminate\\n  expect_evaluated: Indeterminate\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Indeterminate",
                    "expected": "Indeterminate"
                }
            },
            {
                "title": "If[TrueQ[a < b], 1, 0]    ➡️     0",
                "fullTitle": "If[TrueQ[a < b], 1, 0]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1d1e383c-7b4f-4200-a2c0-583071ed8c19",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[TrueQ,paclet:ref/TrueQ] to force the condition to always return a Boolean value:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "f = If[Round[x] > x, x, -x]    ➡️     If[Round[x] > x, x, -x]",
                "fullTitle": "f = If[Round[x] > x, x, -x]    ➡️     If[Round[x] > x, x, -x]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6b64fd6e-aed7-4339-b5d8-c779060dc04a",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": false,
                "isHook": false,
                "context": "\"# Define a piecewise function with both RefLink[If,paclet:ref/If] and RefLink[Round,paclet:ref/Round] as piecewise elements:\\n\\n\\ndata: \\n  got:              If[Round[x] > x, x, -x]\\n  expect:           If[Round[x] > x, x, -x]\\n  expect_evaluated: If[Round[x] > x, x, -x]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "If[Round[x] > x, x, -x]",
                    "expected": "If[Round[x] > x, x, -x]"
                }
            },
            {
                "title": "PiecewiseExpand[f, 0 < x < 5]    ➡️     Inequality[Piecewise[-x]*1, LessEqual, x, Less, 3/2] || 2 <= x <= 5/2 || Inequality[3, LessEqual, x, Less, 7/2] || 4 <= x <= 9/2 || x <= (1/2)*x*True",
                "fullTitle": "PiecewiseExpand[f, 0 < x < 5]    ➡️     Inequality[Piecewise[-x]*1, LessEqual, x, Less, 3/2] || 2 <= x <= 5/2 || Inequality[3, LessEqual, x, Less, 7/2] || 4 <= x <= 9/2 || x <= (1/2)*x*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "edec6676-3e0c-4abc-aed4-9de34a884304",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[PiecewiseExpand,paclet:ref/PiecewiseExpand] to get it into piecewise normal form: \\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[f < 5 && 0 < x < 10, x, Reals]    ➡️     0 < x < 11/2 || 6 <= x <= 13/2 || Inequality[7, LessEqual, x, Less, 15/2] || 8 <= x <= 17/2 || Inequality[9, LessEqual, x, Less, 19/2]",
                "fullTitle": "Reduce[f < 5 && 0 < x < 10, x, Reals]    ➡️     0 < x < 11/2 || 6 <= x <= 13/2 || Inequality[7, LessEqual, x, Less, 15/2] || 8 <= x <= 17/2 || Inequality[9, LessEqual, x, Less, 19/2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "458e77b2-33de-47fa-8d24-0ff26192ce2e",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": true,
                "isHook": false,
                "context": "\"# Perform several different symbolic operations: \\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Integrate[f, {x, 0, 10}]    ➡️     5/2",
                "fullTitle": "Integrate[f, {x, 0, 10}]    ➡️     5/2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6617636d-71d4-4097-921f-5f813008903a",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              5/2\\n  expect:           5/2\\n  expect_evaluated: 5/2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "5/2",
                    "expected": "5/2"
                }
            },
            {
                "title": "D[f, x]    ➡️     If[Round[x] > x, 1, -1]",
                "fullTitle": "D[f, x]    ➡️     If[Round[x] > x, 1, -1]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "492bd7a2-56b7-4139-8faf-be14c4d59ea4",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              If[Round[x] > x, 1, -1]\\n  expect:           If[Round[x] > x, 1, -1]\\n  expect_evaluated: If[Round[x] > x, 1, -1]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "If[Round[x] > x, 1, -1]",
                    "expected": "If[Round[x] > x, 1, -1]"
                }
            },
            {
                "title": "HoldComplete[Plot[f, {x, -2, 2}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[Plot[f, {x, -2, 2}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1b3e3da2-bb82-4e06-a7af-3c4c4cafd701",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x = -2; If[x < 0, y = -x, y = x]; y    ➡️     2",
                "fullTitle": "x = -2; If[x < 0, y = -x, y = x]; y    ➡️     2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "98a31700-ce37-4a70-9d00-8f49cb075773",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[If,paclet:ref/If] can be used as a statement:\\n\\n\\ndata: \\n  got:              2\\n  expect:           2\\n  expect_evaluated: 2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 2,
                    "expected": 2
                }
            },
            {
                "title": "y = If[x < 0, -x, x]    ➡️     2",
                "fullTitle": "y = If[x < 0, -x, x]    ➡️     2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "73bc3d8f-e2b5-4e92-abe7-72cbf2257a6c",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": false,
                "isHook": false,
                "context": "\"# It can also be used as an expression returning a value:\\n\\n\\ndata: \\n  got:              2\\n  expect:           2\\n  expect_evaluated: 2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 2,
                    "expected": 2
                }
            },
            {
                "title": "x = 1; If[x != 0, 1/x, Indeterminate]    ➡️     1",
                "fullTitle": "x = 1; If[x != 0, 1/x, Indeterminate]    ➡️     1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "57ab7e67-f0c9-4240-b3ec-8c7f4787b375",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": false,
                "isHook": false,
                "context": "\"# Only the branch actually taken is evaluated:\\n\\n\\ndata: \\n  got:              1\\n  expect:           1\\n  expect_evaluated: 1\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1,
                    "expected": 1
                }
            },
            {
                "title": "sign /@ {-1, 0, 1, I}    ➡️     {-1, 1, 1, If[I < 0, -1, 1]}",
                "fullTitle": "sign /@ {-1, 0, 1, I}    ➡️     {-1, 1, 1, If[I < 0, -1, 1]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0483051f-8e47-4688-8b37-524415cca584",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "sign2 /@ {-1, 0, 1, I}    ➡️     {-1, 0, 1, sign2[I]}",
                "fullTitle": "sign2 /@ {-1, 0, 1, I}    ➡️     {-1, 0, 1, sign2[I]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b904259a-11d3-4f21-b4b6-b30c4edb3274",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "cut /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "fullTitle": "cut /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "91a3d291-d252-47bb-9fc3-a3f731f7d350",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "cut2 /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "fullTitle": "cut2 /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "27462486-2567-40cb-9b29-5790e859ee75",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PiecewiseExpand[If[c, a, b]]    ➡️     Piecewise[a]*c*b*True",
                "fullTitle": "PiecewiseExpand[If[c, a, b]]    ➡️     Piecewise[a]*c*b*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "93c94dd1-ee66-453c-a0ef-0c3908012b8b",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[PiecewiseExpand,paclet:ref/PiecewiseExpand] to convert RefLink[If,paclet:ref/If] to RefLink[Piecewise,paclet:ref/Piecewise]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PiecewiseExpand[If[If[c1, a1, b1], a, b]]    ➡️     Piecewise[a]*(a1 && c1) || (b1 &&  !c1)*b*True",
                "fullTitle": "PiecewiseExpand[If[If[c1, a1, b1], a, b]]    ➡️     Piecewise[a]*(a1 && c1) || (b1 &&  !c1)*b*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "032c4faa-dd09-4521-8c29-8aa15679f551",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PiecewiseExpand[If[c, If[c2, a2, b2], b]]    ➡️     Piecewise[a2]*c && c2*b!*c*b2*True",
                "fullTitle": "PiecewiseExpand[If[c, If[c2, a2, b2], b]]    ➡️     Piecewise[a2]*c && c2*b!*c*b2*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fbc2e4c8-0c7e-43a4-9909-903a461ded8e",
                "parentUUID": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "550b87c6-6641-464d-8f5e-fb5bf91a3801",
            "8c1040c0-bd9f-4a53-9077-ae52c545a8ee",
            "388e8a44-278d-4a0e-b97a-dc4c97780edc",
            "1d1e383c-7b4f-4200-a2c0-583071ed8c19",
            "6b64fd6e-aed7-4339-b5d8-c779060dc04a",
            "edec6676-3e0c-4abc-aed4-9de34a884304",
            "458e77b2-33de-47fa-8d24-0ff26192ce2e",
            "6617636d-71d4-4097-921f-5f813008903a",
            "492bd7a2-56b7-4139-8faf-be14c4d59ea4",
            "1b3e3da2-bb82-4e06-a7af-3c4c4cafd701",
            "98a31700-ce37-4a70-9d00-8f49cb075773",
            "73bc3d8f-e2b5-4e92-abe7-72cbf2257a6c",
            "57ab7e67-f0c9-4240-b3ec-8c7f4787b375",
            "0483051f-8e47-4688-8b37-524415cca584",
            "b904259a-11d3-4f21-b4b6-b30c4edb3274",
            "91a3d291-d252-47bb-9fc3-a3f731f7d350",
            "27462486-2567-40cb-9b29-5790e859ee75",
            "93c94dd1-ee66-453c-a0ef-0c3908012b8b",
            "032c4faa-dd09-4521-8c29-8aa15679f551",
            "fbc2e4c8-0c7e-43a4-9909-903a461ded8e"
        ],
        "failures": [],
        "skipped": [
            "550b87c6-6641-464d-8f5e-fb5bf91a3801",
            "edec6676-3e0c-4abc-aed4-9de34a884304",
            "458e77b2-33de-47fa-8d24-0ff26192ce2e",
            "1b3e3da2-bb82-4e06-a7af-3c4c4cafd701",
            "0483051f-8e47-4688-8b37-524415cca584",
            "b904259a-11d3-4f21-b4b6-b30c4edb3274",
            "91a3d291-d252-47bb-9fc3-a3f731f7d350",
            "27462486-2567-40cb-9b29-5790e859ee75",
            "93c94dd1-ee66-453c-a0ef-0c3908012b8b",
            "032c4faa-dd09-4521-8c29-8aa15679f551",
            "fbc2e4c8-0c7e-43a4-9909-903a461ded8e"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "19264c5f-5ad7-4c6a-a2dc-05e517d5a708",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
