{
    "stats": {
        "suites": 0,
        "tests": 20,
        "passes": 20,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T23:01:52.026Z",
        "end": "2018-06-03T23:01:52.026Z",
        "duration": 0,
        "testsRegistered": 20,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "abs /@ {-1, 0, 1}    ➡️     {1, 0, 1}",
                "fullTitle": "abs /@ {-1, 0, 1}    ➡️     {1, 0, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "46fb8da4-5d36-482b-9304-d63d518dc499",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": true,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/If_Tests.m\\n# SYSTEM: Mathematica_10\\n# TEST: If_Tests\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "If[a < b, 1, 0]    ➡️     If[a < b, 1, 0]",
                "fullTitle": "If[a < b, 1, 0]    ➡️     If[a < b, 1, 0]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f47f755f-6725-4095-9b30-a2955310453a",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": false,
                "isHook": false,
                "context": "\"# If the condition is neither RefLink[True,paclet:ref/True] nor RefLink[False,paclet:ref/False], RefLink[If,paclet:ref/If] remains unevaluated:\\n\\n\\ndata: \\n  got:              If[a < b, 1, 0]\\n  expect:           If[a < b, 1, 0]\\n  expect_evaluated: If[a < b, 1, 0]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "If[a < b, 1, 0]",
                    "expected": "If[a < b, 1, 0]"
                }
            },
            {
                "title": "If[a < b, 1, 0, Indeterminate]    ➡️     Indeterminate",
                "fullTitle": "If[a < b, 1, 0, Indeterminate]    ➡️     Indeterminate",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "65277243-faca-44fc-841a-d7818a11e883",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": false,
                "isHook": false,
                "context": "\"# The form with an explicit case for an undetermined condition evaluates in any case:\\n\\n\\ndata: \\n  got:              Indeterminate\\n  expect:           Indeterminate\\n  expect_evaluated: Indeterminate\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Indeterminate",
                    "expected": "Indeterminate"
                }
            },
            {
                "title": "If[TrueQ[a < b], 1, 0]    ➡️     0",
                "fullTitle": "If[TrueQ[a < b], 1, 0]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a69269e7-1f04-4a2a-a14f-c44b037172e4",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[TrueQ,paclet:ref/TrueQ] to force the condition to always return a Boolean value:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "f = If[Round[x] > x, x, -x]    ➡️     If[Round[x] > x, x, -x]",
                "fullTitle": "f = If[Round[x] > x, x, -x]    ➡️     If[Round[x] > x, x, -x]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8f1c955d-b7f4-4d2f-a6a5-eb54aadad48c",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": false,
                "isHook": false,
                "context": "\"# Define a piecewise function with both RefLink[If,paclet:ref/If] and RefLink[Round,paclet:ref/Round] as piecewise elements:\\n\\n\\ndata: \\n  got:              If[Round[x] > x, x, -x]\\n  expect:           If[Round[x] > x, x, -x]\\n  expect_evaluated: If[Round[x] > x, x, -x]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "If[Round[x] > x, x, -x]",
                    "expected": "If[Round[x] > x, x, -x]"
                }
            },
            {
                "title": "PiecewiseExpand[f, 0 < x < 5]    ➡️     Inequality[Piecewise[-x]*1, LessEqual, x, Less, 3/2] || 2 <= x <= 5/2 || Inequality[3, LessEqual, x, Less, 7/2] || 4 <= x <= 9/2 || x <= (1/2)*x*True",
                "fullTitle": "PiecewiseExpand[f, 0 < x < 5]    ➡️     Inequality[Piecewise[-x]*1, LessEqual, x, Less, 3/2] || 2 <= x <= 5/2 || Inequality[3, LessEqual, x, Less, 7/2] || 4 <= x <= 9/2 || x <= (1/2)*x*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ae249144-9374-4737-84a1-6bb2ab869861",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[PiecewiseExpand,paclet:ref/PiecewiseExpand] to get it into piecewise normal form: \\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[f < 5 && 0 < x < 10, x, Reals]    ➡️     0 < x < 11/2 || 6 <= x <= 13/2 || Inequality[7, LessEqual, x, Less, 15/2] || 8 <= x <= 17/2 || Inequality[9, LessEqual, x, Less, 19/2]",
                "fullTitle": "Reduce[f < 5 && 0 < x < 10, x, Reals]    ➡️     0 < x < 11/2 || 6 <= x <= 13/2 || Inequality[7, LessEqual, x, Less, 15/2] || 8 <= x <= 17/2 || Inequality[9, LessEqual, x, Less, 19/2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "34d9dfa9-6182-4a85-93a8-e4285bb9c05e",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": true,
                "isHook": false,
                "context": "\"# Perform several different symbolic operations: \\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Integrate[f, {x, 0, 10}]    ➡️     5/2",
                "fullTitle": "Integrate[f, {x, 0, 10}]    ➡️     5/2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "db390ce5-b1a7-4669-8f37-fcbfd769f76b",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              5/2\\n  expect:           5/2\\n  expect_evaluated: 5/2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "5/2",
                    "expected": "5/2"
                }
            },
            {
                "title": "D[f, x]    ➡️     If[Round[x] > x, 1, -1]",
                "fullTitle": "D[f, x]    ➡️     If[Round[x] > x, 1, -1]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "45295747-9c0b-4507-a345-ee844c255b22",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              If[Round[x] > x, 1, -1]\\n  expect:           If[Round[x] > x, 1, -1]\\n  expect_evaluated: If[Round[x] > x, 1, -1]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "If[Round[x] > x, 1, -1]",
                    "expected": "If[Round[x] > x, 1, -1]"
                }
            },
            {
                "title": "HoldComplete[Plot[f, {x, -2, 2}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[Plot[f, {x, -2, 2}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c2d6002b-4da5-4369-96b6-a8c598518ac7",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x = -2; If[x < 0, y = -x, y = x]; y    ➡️     2",
                "fullTitle": "x = -2; If[x < 0, y = -x, y = x]; y    ➡️     2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "80d29038-fcaa-4edf-a800-615240a6375f",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[If,paclet:ref/If] can be used as a statement:\\n\\n\\ndata: \\n  got:              2\\n  expect:           2\\n  expect_evaluated: 2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 2,
                    "expected": 2
                }
            },
            {
                "title": "y = If[x < 0, -x, x]    ➡️     2",
                "fullTitle": "y = If[x < 0, -x, x]    ➡️     2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "30cdf4a6-2909-4ac6-811c-2982e5d95499",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": false,
                "isHook": false,
                "context": "\"# It can also be used as an expression returning a value:\\n\\n\\ndata: \\n  got:              2\\n  expect:           2\\n  expect_evaluated: 2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 2,
                    "expected": 2
                }
            },
            {
                "title": "x = 1; If[x != 0, 1/x, Indeterminate]    ➡️     1",
                "fullTitle": "x = 1; If[x != 0, 1/x, Indeterminate]    ➡️     1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "52b4d54f-69bf-4ceb-8971-28be5bc54500",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": false,
                "isHook": false,
                "context": "\"# Only the branch actually taken is evaluated:\\n\\n\\ndata: \\n  got:              1\\n  expect:           1\\n  expect_evaluated: 1\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1,
                    "expected": 1
                }
            },
            {
                "title": "sign /@ {-1, 0, 1, I}    ➡️     {-1, 1, 1, If[I < 0, -1, 1]}",
                "fullTitle": "sign /@ {-1, 0, 1, I}    ➡️     {-1, 1, 1, If[I < 0, -1, 1]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b20c2cfe-25a0-49ea-bd1c-876da86d8029",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "sign2 /@ {-1, 0, 1, I}    ➡️     {-1, 0, 1, sign2[I]}",
                "fullTitle": "sign2 /@ {-1, 0, 1, I}    ➡️     {-1, 0, 1, sign2[I]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7b481843-92c3-4619-9491-2d449534ed24",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "cut /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "fullTitle": "cut /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6a98224a-754f-47a3-a280-2cecdabc4dbe",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "cut2 /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "fullTitle": "cut2 /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ca2ea9b1-c13a-4d1e-92cb-5c3f88697aa6",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PiecewiseExpand[If[c, a, b]]    ➡️     Piecewise[a]*c*b*True",
                "fullTitle": "PiecewiseExpand[If[c, a, b]]    ➡️     Piecewise[a]*c*b*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "91a83b1a-f418-428e-81cb-a93aa9ca1d8d",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[PiecewiseExpand,paclet:ref/PiecewiseExpand] to convert RefLink[If,paclet:ref/If] to RefLink[Piecewise,paclet:ref/Piecewise]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PiecewiseExpand[If[If[c1, a1, b1], a, b]]    ➡️     Piecewise[a]*(a1 && c1) || (b1 &&  !c1)*b*True",
                "fullTitle": "PiecewiseExpand[If[If[c1, a1, b1], a, b]]    ➡️     Piecewise[a]*(a1 && c1) || (b1 &&  !c1)*b*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2327bbd6-2fa3-4cea-a19b-ed6a73d224f1",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PiecewiseExpand[If[c, If[c2, a2, b2], b]]    ➡️     Piecewise[a2]*c && c2*b!*c*b2*True",
                "fullTitle": "PiecewiseExpand[If[c, If[c2, a2, b2], b]]    ➡️     Piecewise[a2]*c && c2*b!*c*b2*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b5c6344a-d174-4bfb-8cba-e2ef63b72500",
                "parentUUID": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "46fb8da4-5d36-482b-9304-d63d518dc499",
            "f47f755f-6725-4095-9b30-a2955310453a",
            "65277243-faca-44fc-841a-d7818a11e883",
            "a69269e7-1f04-4a2a-a14f-c44b037172e4",
            "8f1c955d-b7f4-4d2f-a6a5-eb54aadad48c",
            "ae249144-9374-4737-84a1-6bb2ab869861",
            "34d9dfa9-6182-4a85-93a8-e4285bb9c05e",
            "db390ce5-b1a7-4669-8f37-fcbfd769f76b",
            "45295747-9c0b-4507-a345-ee844c255b22",
            "c2d6002b-4da5-4369-96b6-a8c598518ac7",
            "80d29038-fcaa-4edf-a800-615240a6375f",
            "30cdf4a6-2909-4ac6-811c-2982e5d95499",
            "52b4d54f-69bf-4ceb-8971-28be5bc54500",
            "b20c2cfe-25a0-49ea-bd1c-876da86d8029",
            "7b481843-92c3-4619-9491-2d449534ed24",
            "6a98224a-754f-47a3-a280-2cecdabc4dbe",
            "ca2ea9b1-c13a-4d1e-92cb-5c3f88697aa6",
            "91a83b1a-f418-428e-81cb-a93aa9ca1d8d",
            "2327bbd6-2fa3-4cea-a19b-ed6a73d224f1",
            "b5c6344a-d174-4bfb-8cba-e2ef63b72500"
        ],
        "failures": [],
        "skipped": [
            "46fb8da4-5d36-482b-9304-d63d518dc499",
            "ae249144-9374-4737-84a1-6bb2ab869861",
            "34d9dfa9-6182-4a85-93a8-e4285bb9c05e",
            "c2d6002b-4da5-4369-96b6-a8c598518ac7",
            "b20c2cfe-25a0-49ea-bd1c-876da86d8029",
            "7b481843-92c3-4619-9491-2d449534ed24",
            "6a98224a-754f-47a3-a280-2cecdabc4dbe",
            "ca2ea9b1-c13a-4d1e-92cb-5c3f88697aa6",
            "91a83b1a-f418-428e-81cb-a93aa9ca1d8d",
            "2327bbd6-2fa3-4cea-a19b-ed6a73d224f1",
            "b5c6344a-d174-4bfb-8cba-e2ef63b72500"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "dee6cdd7-05ce-49e9-a9d0-b9fc369d7a18",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
