{
    "stats": {
        "suites": 0,
        "tests": 20,
        "passes": 19,
        "pending": 0,
        "failures": 1,
        "start": "2018-06-11T04:13:58.698Z",
        "end": "2018-06-11T04:13:58.698Z",
        "duration": 0,
        "testsRegistered": 20,
        "passPercent": 95,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "$Failed    ➡️     HoldComplete[{1, 0, 1}]",
                "fullTitle": "$Failed    ➡️     HoldComplete[{1, 0, 1}]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "becf13e6-cf62-4f52-9192-7b3259a3c467",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": true,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/If_Tests.m\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Piecewise, pairs], StringForm[The first argument `1` of Piecewise is not a list of pairs., Short[HoldForm[-x], 3]]]]\\n#! TextForm[ColonForm[MessageName[Less, nord], StringForm[Invalid comparison with `1` attempted., Short[HoldForm[I], 3]]]]\\n#! TextForm[ColonForm[MessageName[Less, nord], StringForm[Invalid comparison with `1` attempted., Short[HoldForm[I], 3]]]]\\n#! TextForm[ColonForm[MessageName[RuleDelayed, rhs], StringForm[Pattern `1` appears on the right-hand side of rule `2`., Short[HoldForm[x_], 3], Short[HoldForm[sign2[x_ /; x < 0] :> (-sign2[x_ /; x >= 0] := x)], 3]]]]\\n#! TextForm[ColonForm[MessageName[SetDelayed, write], StringForm[Tag `1` in `2` is Protected., Short[HoldForm[Times], 3], Short[HoldForm[-sign2[Pattern[-1, _] /; -1 >= 0]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Less, nord], StringForm[Invalid comparison with `1` attempted., Short[HoldForm[I], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[Less, nord]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Piecewise, pairs], StringForm[The first argument `1` of Piecewise is not a list of pairs., Short[HoldForm[a], 3]]]]\\n#! TextForm[ColonForm[MessageName[Piecewise, pairs], StringForm[The first argument `1` of Piecewise is not a list of pairs., Short[HoldForm[a], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[Piecewise, pairs]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: If_Tests\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "If[a < b, 1, 0]    ➡️     If[a < b, 1, 0]",
                "fullTitle": "If[a < b, 1, 0]    ➡️     If[a < b, 1, 0]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c216b70d-752a-4b4c-8d7a-42c201de2049",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": false,
                "isHook": false,
                "context": "\"# If the condition is neither RefLink[True,paclet:ref/True] nor RefLink[False,paclet:ref/False], RefLink[If,paclet:ref/If] remains unevaluated:\\n\\n\\ndata: \\n  got:              If[a < b, 1, 0]\\n  expect:           If[a < b, 1, 0]\\n  expect_evaluated: If[a < b, 1, 0]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "If[a < b, 1, 0]",
                    "expected": "If[a < b, 1, 0]"
                }
            },
            {
                "title": "If[a < b, 1, 0, Indeterminate]    ➡️     Indeterminate",
                "fullTitle": "If[a < b, 1, 0, Indeterminate]    ➡️     Indeterminate",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8845bd1d-a35c-4990-8942-83901add22b7",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": false,
                "isHook": false,
                "context": "\"# The form with an explicit case for an undetermined condition evaluates in any case:\\n\\n\\ndata: \\n  got:              Indeterminate\\n  expect:           Indeterminate\\n  expect_evaluated: Indeterminate\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Indeterminate",
                    "expected": "Indeterminate"
                }
            },
            {
                "title": "If[TrueQ[a < b], 1, 0]    ➡️     0",
                "fullTitle": "If[TrueQ[a < b], 1, 0]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a0374603-fc86-491d-9e87-f8b9e0d7f3d8",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[TrueQ,paclet:ref/TrueQ] to force the condition to always return a Boolean value:\\n\\n\\ndata: \\n  got:              0\\n  expect:           0\\n  expect_evaluated: 0\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": 0
                }
            },
            {
                "title": "f = If[Round[x] > x, x, -x]    ➡️     If[Round[x] > x, x, -x]",
                "fullTitle": "f = If[Round[x] > x, x, -x]    ➡️     If[Round[x] > x, x, -x]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c591e5ef-a5e9-406a-ad63-b0df138fcd78",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": false,
                "isHook": false,
                "context": "\"# Define a piecewise function with both RefLink[If,paclet:ref/If] and RefLink[Round,paclet:ref/Round] as piecewise elements:\\n\\n\\ndata: \\n  got:              If[Round[x] > x, x, -x]\\n  expect:           If[Round[x] > x, x, -x]\\n  expect_evaluated: If[Round[x] > x, x, -x]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "If[Round[x] > x, x, -x]",
                    "expected": "If[Round[x] > x, x, -x]"
                }
            },
            {
                "title": "PiecewiseExpand[f, 0 < x < 5]    ➡️     Inequality[Piecewise[-x]*1, LessEqual, x, Less, 3/2] || 2 <= x <= 5/2 || Inequality[3, LessEqual, x, Less, 7/2] || 4 <= x <= 9/2 || x <= (1/2)*x*True",
                "fullTitle": "PiecewiseExpand[f, 0 < x < 5]    ➡️     Inequality[Piecewise[-x]*1, LessEqual, x, Less, 3/2] || 2 <= x <= 5/2 || Inequality[3, LessEqual, x, Less, 7/2] || 4 <= x <= 9/2 || x <= (1/2)*x*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "404beabb-e235-4d70-b26e-7f80b2734450",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[PiecewiseExpand,paclet:ref/PiecewiseExpand] to get it into piecewise normal form: \\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[f < 5 && 0 < x < 10, x, Reals]    ➡️     0 < x < 11/2 || 6 <= x <= 13/2 || Inequality[7, LessEqual, x, Less, 15/2] || 8 <= x <= 17/2 || Inequality[9, LessEqual, x, Less, 19/2]",
                "fullTitle": "Reduce[f < 5 && 0 < x < 10, x, Reals]    ➡️     0 < x < 11/2 || 6 <= x <= 13/2 || Inequality[7, LessEqual, x, Less, 15/2] || 8 <= x <= 17/2 || Inequality[9, LessEqual, x, Less, 19/2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "79c5cc65-033f-4261-a7c4-48b27199f167",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": false,
                "isHook": false,
                "context": "\"# Perform several different symbolic operations: \\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Integrate[f, {x, 0, 10}]    ➡️     5/2",
                "fullTitle": "Integrate[f, {x, 0, 10}]    ➡️     5/2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "79fa1674-2245-4ceb-a3b0-7207ec58e16f",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": false,
                "isHook": false,
                "context": "\"#! 0 < x < -- || 6 <= x <= -- || 7 <= x < -- || 8 <= x <= -- || 9 <= x < --\\n#! 0 < x < -- || 6 <= x <= -- || 7 <= x < -- || 8 <= x <= -- || 9 <= x < --\\n\\n\\ndata: \\n  got:              5\\n  expect:           5/2\\n  expect_evaluated: 5\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 5,
                    "expected": "5/2"
                }
            },
            {
                "title": "D[f, x]    ➡️     If[Round[x] > x, 1, -1]",
                "fullTitle": "D[f, x]    ➡️     If[Round[x] > x, 1, -1]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "aa45d12e-59a2-423f-89dd-4bf65324dc01",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": false,
                "isHook": false,
                "context": "\"#! -\\n#! 2\\n#! -\\n#! 2\\n\\n\\ndata: \\n  got:              If[Round[x] > x, 1, -1]\\n  expect:           If[Round[x] > x, 1, -1]\\n  expect_evaluated: If[Round[x] > x, 1, -1]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "If[Round[x] > x, 1, -1]",
                    "expected": "If[Round[x] > x, 1, -1]"
                }
            },
            {
                "title": "HoldComplete[Plot[f, {x, -2, 2}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[Plot[f, {x, -2, 2}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b0afbac2-a958-4705-86bb-9d6a67359da4",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x = -2; If[x < 0, y = -x, y = x]; y    ➡️     2",
                "fullTitle": "x = -2; If[x < 0, y = -x, y = x]; y    ➡️     2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c0c7da0d-6d04-4a9d-96fb-39720f3a9e7c",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[If,paclet:ref/If] can be used as a statement:\\n\\n\\ndata: \\n  got:              2\\n  expect:           2\\n  expect_evaluated: 2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 2,
                    "expected": 2
                }
            },
            {
                "title": "y = If[x < 0, -x, x]    ➡️     2",
                "fullTitle": "y = If[x < 0, -x, x]    ➡️     2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f6407d26-e54c-4c79-bb52-aaec9e7db049",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": false,
                "isHook": false,
                "context": "\"# It can also be used as an expression returning a value:\\n\\n\\ndata: \\n  got:              2\\n  expect:           2\\n  expect_evaluated: 2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 2,
                    "expected": 2
                }
            },
            {
                "title": "x = 1; If[x != 0, 1/x, Indeterminate]    ➡️     1",
                "fullTitle": "x = 1; If[x != 0, 1/x, Indeterminate]    ➡️     1",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "530fba07-6c44-4d16-bd8e-1d0082226133",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": false,
                "isHook": false,
                "context": "\"# Only the branch actually taken is evaluated:\\n\\n\\ndata: \\n  got:              1\\n  expect:           1\\n  expect_evaluated: 1\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 1,
                    "expected": 1
                }
            },
            {
                "title": "sign[x_] := If[x < 0, -1, 1]; sign /@ {-1, 0, 1, I}    ➡️     {-1, 1, 1, If[I < 0, -1, 1]}",
                "fullTitle": "sign[x_] := If[x < 0, -1, 1]; sign /@ {-1, 0, 1, I}    ➡️     {-1, 1, 1, If[I < 0, -1, 1]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2659909b-0390-44e1-9466-f7daa4292e30",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": false,
                "isHook": false,
                "context": "\"# Define a function by cases:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "sign2[x_ /; x < 0] := -sign2[x_ /; x >= 0] := x; sign2 /@ {-1, 0, 1, I}    ➡️     {-1, 0, 1, sign2[I]}",
                "fullTitle": "sign2[x_ /; x < 0] := -sign2[x_ /; x >= 0] := x; sign2 /@ {-1, 0, 1, I}    ➡️     {-1, 0, 1, sign2[I]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e1eaea4e-93ea-4dc3-be4d-c87d5b74b6a4",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": false,
                "isHook": false,
                "context": "\"# Alternatively, use several conditional definitions:\\n\"",
                "state": "failed",
                "err": {}
            },
            {
                "title": "cut[x_] := If[x < -1, -1, If[x < 1, x, 1]]; cut /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "fullTitle": "cut[x_] := If[x < -1, -1, If[x < 1, x, 1]]; cut /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bebc3336-2cb2-455f-9d00-3d0803338521",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Which,paclet:ref/Which] rather than a nested if-then-elsif chain:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "cut2[x_] := Which[x < -1, -1, x < 1, x, True, 1]; cut2 /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "fullTitle": "cut2[x_] := Which[x < -1, -1, x < 1, x, True, 1]; cut2 /@ {-2, -1, 0, 1, 2}    ➡️     {-1, -1, 0, 1, 1}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f83362ce-f447-4028-9ecf-3f0a494d8ecd",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PiecewiseExpand[If[c, a, b]]    ➡️     Piecewise[a]*c*b*True",
                "fullTitle": "PiecewiseExpand[If[c, a, b]]    ➡️     Piecewise[a]*c*b*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ec94ab1b-c376-47c8-9560-61ce84891294",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[PiecewiseExpand,paclet:ref/PiecewiseExpand] to convert RefLink[If,paclet:ref/If] to RefLink[Piecewise,paclet:ref/Piecewise]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PiecewiseExpand[If[If[c1, a1, b1], a, b]]    ➡️     Piecewise[a]*(a1 && c1) || (b1 &&  !c1)*b*True",
                "fullTitle": "PiecewiseExpand[If[If[c1, a1, b1], a, b]]    ➡️     Piecewise[a]*(a1 && c1) || (b1 &&  !c1)*b*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "50b05caf-c888-4378-b6be-5b988bdbcc45",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PiecewiseExpand[If[c, If[c2, a2, b2], b]]    ➡️     Piecewise[a2]*c && c2*b!*c*b2*True",
                "fullTitle": "PiecewiseExpand[If[c, If[c2, a2, b2], b]]    ➡️     Piecewise[a2]*c && c2*b!*c*b2*True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "263677e5-3691-4d6f-8c1b-c797172e7d5f",
                "parentUUID": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "becf13e6-cf62-4f52-9192-7b3259a3c467",
            "c216b70d-752a-4b4c-8d7a-42c201de2049",
            "8845bd1d-a35c-4990-8942-83901add22b7",
            "a0374603-fc86-491d-9e87-f8b9e0d7f3d8",
            "c591e5ef-a5e9-406a-ad63-b0df138fcd78",
            "404beabb-e235-4d70-b26e-7f80b2734450",
            "79c5cc65-033f-4261-a7c4-48b27199f167",
            "79fa1674-2245-4ceb-a3b0-7207ec58e16f",
            "aa45d12e-59a2-423f-89dd-4bf65324dc01",
            "b0afbac2-a958-4705-86bb-9d6a67359da4",
            "c0c7da0d-6d04-4a9d-96fb-39720f3a9e7c",
            "f6407d26-e54c-4c79-bb52-aaec9e7db049",
            "530fba07-6c44-4d16-bd8e-1d0082226133",
            "2659909b-0390-44e1-9466-f7daa4292e30",
            "bebc3336-2cb2-455f-9d00-3d0803338521",
            "f83362ce-f447-4028-9ecf-3f0a494d8ecd",
            "ec94ab1b-c376-47c8-9560-61ce84891294",
            "50b05caf-c888-4378-b6be-5b988bdbcc45",
            "263677e5-3691-4d6f-8c1b-c797172e7d5f"
        ],
        "failures": [
            "e1eaea4e-93ea-4dc3-be4d-c87d5b74b6a4"
        ],
        "skipped": [
            "becf13e6-cf62-4f52-9192-7b3259a3c467",
            "404beabb-e235-4d70-b26e-7f80b2734450",
            "b0afbac2-a958-4705-86bb-9d6a67359da4",
            "ec94ab1b-c376-47c8-9560-61ce84891294",
            "50b05caf-c888-4378-b6be-5b988bdbcc45",
            "263677e5-3691-4d6f-8c1b-c797172e7d5f"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "6de91a90-376b-47d3-8dfb-41f7fd5a3055",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
