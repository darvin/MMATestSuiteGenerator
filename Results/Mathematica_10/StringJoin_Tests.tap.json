{
    "stats": {
        "suites": 0,
        "tests": 16,
        "passes": 16,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T23:02:25.932Z",
        "end": "2018-06-03T23:02:25.932Z",
        "duration": 0,
        "testsRegistered": 16,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "StringJoin[\"abcd\", \"ABCD\", \"xyz\"]    ➡️     abcdABCDxyz",
                "fullTitle": "StringJoin[\"abcd\", \"ABCD\", \"xyz\"]    ➡️     abcdABCDxyz",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9f34bc87-04ee-447a-a46d-8e803406e8ea",
                "parentUUID": "2b9f3f2c-495e-459b-baec-620f8881a1a5",
                "skipped": true,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/StringJoin_Tests.m\\n# SYSTEM: Mathematica_10\\n# TEST: StringJoin_Tests\\n# Join strings:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "InputForm[%]    ➡️     \"abcdABCDxyz\"",
                "fullTitle": "InputForm[%]    ➡️     \"abcdABCDxyz\"",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e700c9ac-b2fc-44f6-9632-48591514a45a",
                "parentUUID": "2b9f3f2c-495e-459b-baec-620f8881a1a5",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[InputForm,paclet:ref/InputForm] to show string quotes:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[{{\"AB\", \"CD\"}, \"XY\"}]    ➡️     ABCDXY",
                "fullTitle": "StringJoin[{{\"AB\", \"CD\"}, \"XY\"}]    ➡️     ABCDXY",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "643681bc-36b5-431a-a95c-4ad26aa00798",
                "parentUUID": "2b9f3f2c-495e-459b-baec-620f8881a1a5",
                "skipped": true,
                "isHook": false,
                "context": "\"# All lists are ignored:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"\\[Alpha]\\[Beta]\\[Gamma]\", \"(+)(x)\", \" \\[ReturnIndicator]\"]    ➡️     \\[Alpha]\\[Beta]\\[Gamma] (+) (x)\\[ReturnIndicator]",
                "fullTitle": "StringJoin[\"\\[Alpha]\\[Beta]\\[Gamma]\", \"(+)(x)\", \" \\[ReturnIndicator]\"]    ➡️     \\[Alpha]\\[Beta]\\[Gamma] (+) (x)\\[ReturnIndicator]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "91a6586c-9ce5-41fc-9113-d1739f0c13e5",
                "parentUUID": "2b9f3f2c-495e-459b-baec-620f8881a1a5",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[StringJoin,paclet:ref/StringJoin] works with special characters:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"one\", \"\\n\", \"two\"]    ➡️     one*two",
                "fullTitle": "StringJoin[\"one\", \"\\n\", \"two\"]    ➡️     one*two",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8b780156-44e8-45b0-9258-fe8190f182c4",
                "parentUUID": "2b9f3f2c-495e-459b-baec-620f8881a1a5",
                "skipped": true,
                "isHook": false,
                "context": "\"# Join strings, with a newline in between:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"red\", \"blue\"]    ➡️     redblue",
                "fullTitle": "StringJoin[\"red\", \"blue\"]    ➡️     redblue",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ced32d04-9008-4578-9722-49cab1fb60c6",
                "parentUUID": "2b9f3f2c-495e-459b-baec-620f8881a1a5",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[StringJoin,paclet:ref/StringJoin] preserves formatting information embedded in strings:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NestList[StringJoin[#1, StringReverse[#1]] & , \"AB\", 5]    ➡️     {AB, ABBA, ABBAABBA, ABBAABBAABBAABBA, ABBAABBAABBAABBAABBAABBAABBAABBA, ABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBA} # skip",
                "fullTitle": "NestList[StringJoin[#1, StringReverse[#1]] & , \"AB\", 5]    ➡️     {AB, ABBA, ABBAABBA, ABBAABBAABBAABBA, ABBAABBAABBAABBAABBAABBAABBAABBA, ABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBA} # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f3e3a3d1-337f-47d0-b337-4ec7a4f371fc",
                "parentUUID": "2b9f3f2c-495e-459b-baec-620f8881a1a5",
                "skipped": false,
                "isHook": false,
                "context": "\"# Iteratively join a string to its reverse:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "data = Partition[Characters[\"aabcaabc\"], 3, 1]    ➡️     {{a, a, b}, {a, b, c}, {b, c, a}, {c, a, a}, {a, a, b}, {a, b, c}}",
                "fullTitle": "data = Partition[Characters[\"aabcaabc\"], 3, 1]    ➡️     {{a, a, b}, {a, b, c}, {b, c, a}, {c, a, a}, {a, a, b}, {a, b, c}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8b95f6b2-d887-4896-88d2-1d5ae037beea",
                "parentUUID": "2b9f3f2c-495e-459b-baec-620f8881a1a5",
                "skipped": true,
                "isHook": false,
                "context": "\"# Find trigrams in a string:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin /@ data    ➡️     {aab, abc, bca, caa, aab, abc}",
                "fullTitle": "StringJoin /@ data    ➡️     {aab, abc, bca, caa, aab, abc}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f1c79604-7f26-408a-a67f-00e11fab6ed4",
                "parentUUID": "2b9f3f2c-495e-459b-baec-620f8881a1a5",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Riffle[{\"dog\", \"cat\", \"sheep\", \"cow\"}, \" \"]    ➡️     {dog, Null, cat, Null, sheep, Null, cow}",
                "fullTitle": "Riffle[{\"dog\", \"cat\", \"sheep\", \"cow\"}, \" \"]    ➡️     {dog, Null, cat, Null, sheep, Null, cow}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b91f20db-ef16-4fb0-94ec-515078ef9542",
                "parentUUID": "2b9f3f2c-495e-459b-baec-620f8881a1a5",
                "skipped": true,
                "isHook": false,
                "context": "\"# Join a list of words, after inserting spaces in between:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[%]    ➡️     dog*cat*sheep*cow",
                "fullTitle": "StringJoin[%]    ➡️     dog*cat*sheep*cow",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cae4e096-3bbe-425e-8254-6381668a50cd",
                "parentUUID": "2b9f3f2c-495e-459b-baec-620f8881a1a5",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "ToExpression[StringJoin[\"0.\", ToString /@ Range[30]]]    ➡️     0.12345678910111213141516171819202122232425262728293`50.091514977524966",
                "fullTitle": "ToExpression[StringJoin[\"0.\", ToString /@ Range[30]]]    ➡️     0.12345678910111213141516171819202122232425262728293`50.091514977524966",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b2f700fd-4060-401a-96d2-9e2298388d92",
                "parentUUID": "2b9f3f2c-495e-459b-baec-620f8881a1a5",
                "skipped": false,
                "isHook": false,
                "context": "\"# Create a Champernowne number:\\n\\n\\ndata: \\n  got:              0.12345678910111213141516171819202122232425262728293`50.091514977524966\\n  expect:           0.12345678910111213141516171819202122232425262728293`50.091514977524966\\n  expect_evaluated: 0.12345678910111213141516171819202122232425262728293`50.091514977524966\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "0.12345678910111213141516171819202122232425262728293`50.091514977524966",
                    "expected": "0.12345678910111213141516171819202122232425262728293`50.091514977524966"
                }
            },
            {
                "title": "Characters[\"abcdefg\"]    ➡️     {a, b, c, d, e, f, g}",
                "fullTitle": "Characters[\"abcdefg\"]    ➡️     {a, b, c, d, e, f, g}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5ed95bc0-b36b-4d59-a9f0-7363f62e7731",
                "parentUUID": "2b9f3f2c-495e-459b-baec-620f8881a1a5",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[StringJoin,paclet:ref/StringJoin] acts as a kind of inverse to RefLink[Characters,paclet:ref/Characters]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[%]    ➡️     abcdefg",
                "fullTitle": "StringJoin[%]    ➡️     abcdefg",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "82bfd4bb-49fb-42d3-af87-b4d75e862deb",
                "parentUUID": "2b9f3f2c-495e-459b-baec-620f8881a1a5",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"item \", 456]    ➡️     StringJoin[item, 456]",
                "fullTitle": "StringJoin[\"item \", 456]    ➡️     StringJoin[item, 456]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "31d40ff0-86d1-4d4b-8f05-a0f6065bcee0",
                "parentUUID": "2b9f3f2c-495e-459b-baec-620f8881a1a5",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[StringJoin,paclet:ref/StringJoin] works only with explicit strings:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"item \", ToString[456]]    ➡️     item*456",
                "fullTitle": "StringJoin[\"item \", ToString[456]]    ➡️     item*456",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9edf2998-2d1a-47fc-8abb-e2cddd9f6df3",
                "parentUUID": "2b9f3f2c-495e-459b-baec-620f8881a1a5",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[ToString,paclet:ref/ToString] to convert to a string:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "9f34bc87-04ee-447a-a46d-8e803406e8ea",
            "e700c9ac-b2fc-44f6-9632-48591514a45a",
            "643681bc-36b5-431a-a95c-4ad26aa00798",
            "91a6586c-9ce5-41fc-9113-d1739f0c13e5",
            "8b780156-44e8-45b0-9258-fe8190f182c4",
            "ced32d04-9008-4578-9722-49cab1fb60c6",
            "f3e3a3d1-337f-47d0-b337-4ec7a4f371fc",
            "8b95f6b2-d887-4896-88d2-1d5ae037beea",
            "f1c79604-7f26-408a-a67f-00e11fab6ed4",
            "b91f20db-ef16-4fb0-94ec-515078ef9542",
            "cae4e096-3bbe-425e-8254-6381668a50cd",
            "b2f700fd-4060-401a-96d2-9e2298388d92",
            "5ed95bc0-b36b-4d59-a9f0-7363f62e7731",
            "82bfd4bb-49fb-42d3-af87-b4d75e862deb",
            "31d40ff0-86d1-4d4b-8f05-a0f6065bcee0",
            "9edf2998-2d1a-47fc-8abb-e2cddd9f6df3"
        ],
        "failures": [],
        "skipped": [
            "9f34bc87-04ee-447a-a46d-8e803406e8ea",
            "e700c9ac-b2fc-44f6-9632-48591514a45a",
            "643681bc-36b5-431a-a95c-4ad26aa00798",
            "91a6586c-9ce5-41fc-9113-d1739f0c13e5",
            "8b780156-44e8-45b0-9258-fe8190f182c4",
            "ced32d04-9008-4578-9722-49cab1fb60c6",
            "8b95f6b2-d887-4896-88d2-1d5ae037beea",
            "f1c79604-7f26-408a-a67f-00e11fab6ed4",
            "b91f20db-ef16-4fb0-94ec-515078ef9542",
            "cae4e096-3bbe-425e-8254-6381668a50cd",
            "5ed95bc0-b36b-4d59-a9f0-7363f62e7731",
            "82bfd4bb-49fb-42d3-af87-b4d75e862deb",
            "31d40ff0-86d1-4d4b-8f05-a0f6065bcee0",
            "9edf2998-2d1a-47fc-8abb-e2cddd9f6df3"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "2b9f3f2c-495e-459b-baec-620f8881a1a5",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
