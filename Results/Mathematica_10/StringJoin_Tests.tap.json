{
    "stats": {
        "suites": 0,
        "tests": 16,
        "passes": 16,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-02T18:11:06.983Z",
        "end": "2018-06-02T18:11:06.983Z",
        "duration": 0,
        "testsRegistered": 16,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "StringJoin[\"abcd\", \"ABCD\", \"xyz\"]    ➡️     abcdABCDxyz",
                "fullTitle": "StringJoin[\"abcd\", \"ABCD\", \"xyz\"]    ➡️     abcdABCDxyz",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fac530d4-7db0-4e76-aa7f-67977772ccf3",
                "parentUUID": "fe1b0453-c331-42d4-b92d-68e6cdaa03bd",
                "skipped": true,
                "isHook": false,
                "context": "\"# SYSTEM: Mathematica_10\\n# TEST: StringJoin_Tests\\n# OUTPUT: output/Results/Mathematica_10/StringJoin_Tests.json\\n# Join strings:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "InputForm[%]    ➡️     \"abcdABCDxyz\"",
                "fullTitle": "InputForm[%]    ➡️     \"abcdABCDxyz\"",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8b3a39ba-328c-4bac-8f8d-34a92cf95e3d",
                "parentUUID": "fe1b0453-c331-42d4-b92d-68e6cdaa03bd",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[InputForm,paclet:ref/InputForm] to show string quotes:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[{{\"AB\", \"CD\"}, \"XY\"}]    ➡️     ABCDXY",
                "fullTitle": "StringJoin[{{\"AB\", \"CD\"}, \"XY\"}]    ➡️     ABCDXY",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "13cd4250-9688-4ac8-aa1f-b7feeff88616",
                "parentUUID": "fe1b0453-c331-42d4-b92d-68e6cdaa03bd",
                "skipped": true,
                "isHook": false,
                "context": "\"# All lists are ignored:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"\\[Alpha]\\[Beta]\\[Gamma]\", \"(+)(x)\", \" \\[ReturnIndicator]\"]    ➡️     \\[Alpha]\\[Beta]\\[Gamma] (+) (x)\\[ReturnIndicator]",
                "fullTitle": "StringJoin[\"\\[Alpha]\\[Beta]\\[Gamma]\", \"(+)(x)\", \" \\[ReturnIndicator]\"]    ➡️     \\[Alpha]\\[Beta]\\[Gamma] (+) (x)\\[ReturnIndicator]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d05612b5-7f0e-40a5-9a3c-9880fd652bc0",
                "parentUUID": "fe1b0453-c331-42d4-b92d-68e6cdaa03bd",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[StringJoin,paclet:ref/StringJoin] works with special characters:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"one\", \"\\n\", \"two\"]    ➡️     one*two",
                "fullTitle": "StringJoin[\"one\", \"\\n\", \"two\"]    ➡️     one*two",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "080a6ca7-da27-4809-95b3-02abd90b8f82",
                "parentUUID": "fe1b0453-c331-42d4-b92d-68e6cdaa03bd",
                "skipped": true,
                "isHook": false,
                "context": "\"# Join strings, with a newline in between:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"red\", \"blue\"]    ➡️     redblue",
                "fullTitle": "StringJoin[\"red\", \"blue\"]    ➡️     redblue",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7bab8ac4-d1b4-4ab2-b5e7-9ef688dac28c",
                "parentUUID": "fe1b0453-c331-42d4-b92d-68e6cdaa03bd",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[StringJoin,paclet:ref/StringJoin] preserves formatting information embedded in strings:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NestList[StringJoin[#1, StringReverse[#1]] & , \"AB\", 5]    ➡️     {AB, ABBA, ABBAABBA, ABBAABBAABBAABBA, ABBAABBAABBAABBAABBAABBAABBAABBA, ABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBA} # skip",
                "fullTitle": "NestList[StringJoin[#1, StringReverse[#1]] & , \"AB\", 5]    ➡️     {AB, ABBA, ABBAABBA, ABBAABBAABBAABBA, ABBAABBAABBAABBAABBAABBAABBAABBA, ABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBA} # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "dd4d79a2-3054-488b-a47b-926c273577e0",
                "parentUUID": "fe1b0453-c331-42d4-b92d-68e6cdaa03bd",
                "skipped": false,
                "isHook": false,
                "context": "\"# Iteratively join a string to its reverse:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "data = Partition[Characters[\"aabcaabc\"], 3, 1]    ➡️     {{a, a, b}, {a, b, c}, {b, c, a}, {c, a, a}, {a, a, b}, {a, b, c}}",
                "fullTitle": "data = Partition[Characters[\"aabcaabc\"], 3, 1]    ➡️     {{a, a, b}, {a, b, c}, {b, c, a}, {c, a, a}, {a, a, b}, {a, b, c}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "298c27f1-6087-490a-b9f4-6ea653f276e9",
                "parentUUID": "fe1b0453-c331-42d4-b92d-68e6cdaa03bd",
                "skipped": true,
                "isHook": false,
                "context": "\"# Find trigrams in a string:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin /@ data    ➡️     {aab, abc, bca, caa, aab, abc}",
                "fullTitle": "StringJoin /@ data    ➡️     {aab, abc, bca, caa, aab, abc}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a444aa68-7ceb-4e66-bebc-91b7559ce6ee",
                "parentUUID": "fe1b0453-c331-42d4-b92d-68e6cdaa03bd",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Riffle[{\"dog\", \"cat\", \"sheep\", \"cow\"}, \" \"]    ➡️     {dog, Null, cat, Null, sheep, Null, cow}",
                "fullTitle": "Riffle[{\"dog\", \"cat\", \"sheep\", \"cow\"}, \" \"]    ➡️     {dog, Null, cat, Null, sheep, Null, cow}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b31c7a00-8dcb-4af5-9a2f-c2ead6ec546a",
                "parentUUID": "fe1b0453-c331-42d4-b92d-68e6cdaa03bd",
                "skipped": true,
                "isHook": false,
                "context": "\"# Join a list of words, after inserting spaces in between:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[%]    ➡️     dog*cat*sheep*cow",
                "fullTitle": "StringJoin[%]    ➡️     dog*cat*sheep*cow",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "441f80f0-d927-4578-ae24-db2145e1b010",
                "parentUUID": "fe1b0453-c331-42d4-b92d-68e6cdaa03bd",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "ToExpression[StringJoin[\"0.\", ToString /@ Range[30]]]    ➡️     0.12345678910111213141516171819202122232425262728293`50.091514977524966",
                "fullTitle": "ToExpression[StringJoin[\"0.\", ToString /@ Range[30]]]    ➡️     0.12345678910111213141516171819202122232425262728293`50.091514977524966",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "05202f1e-9d49-4a50-af93-adecb6484292",
                "parentUUID": "fe1b0453-c331-42d4-b92d-68e6cdaa03bd",
                "skipped": false,
                "isHook": false,
                "context": "\"# Create a Champernowne number:\\n\\n\\ndata: \\n  got:              0.12345678910111213141516171819202122232425262728293`50.091514977524966\\n  expect:           0.12345678910111213141516171819202122232425262728293`50.091514977524966\\n  expect_evaluated: 0.12345678910111213141516171819202122232425262728293`50.091514977524966\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "0.12345678910111213141516171819202122232425262728293`50.091514977524966",
                    "expected": "0.12345678910111213141516171819202122232425262728293`50.091514977524966"
                }
            },
            {
                "title": "Characters[\"abcdefg\"]    ➡️     {a, b, c, d, e, f, g}",
                "fullTitle": "Characters[\"abcdefg\"]    ➡️     {a, b, c, d, e, f, g}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "034e9fe2-da81-447b-9a26-b5283d5c95dc",
                "parentUUID": "fe1b0453-c331-42d4-b92d-68e6cdaa03bd",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[StringJoin,paclet:ref/StringJoin] acts as a kind of inverse to RefLink[Characters,paclet:ref/Characters]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[%]    ➡️     abcdefg",
                "fullTitle": "StringJoin[%]    ➡️     abcdefg",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "241c07cf-0e37-4dd9-bbb9-211f1e500896",
                "parentUUID": "fe1b0453-c331-42d4-b92d-68e6cdaa03bd",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"item \", 456]    ➡️     StringJoin[item, 456]",
                "fullTitle": "StringJoin[\"item \", 456]    ➡️     StringJoin[item, 456]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7c72b222-221d-4130-8754-389a6283c2eb",
                "parentUUID": "fe1b0453-c331-42d4-b92d-68e6cdaa03bd",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[StringJoin,paclet:ref/StringJoin] works only with explicit strings:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"item \", ToString[456]]    ➡️     item*456",
                "fullTitle": "StringJoin[\"item \", ToString[456]]    ➡️     item*456",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "57ff4263-0103-4406-8771-ef0f41fb5585",
                "parentUUID": "fe1b0453-c331-42d4-b92d-68e6cdaa03bd",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[ToString,paclet:ref/ToString] to convert to a string:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "fac530d4-7db0-4e76-aa7f-67977772ccf3",
            "8b3a39ba-328c-4bac-8f8d-34a92cf95e3d",
            "13cd4250-9688-4ac8-aa1f-b7feeff88616",
            "d05612b5-7f0e-40a5-9a3c-9880fd652bc0",
            "080a6ca7-da27-4809-95b3-02abd90b8f82",
            "7bab8ac4-d1b4-4ab2-b5e7-9ef688dac28c",
            "dd4d79a2-3054-488b-a47b-926c273577e0",
            "298c27f1-6087-490a-b9f4-6ea653f276e9",
            "a444aa68-7ceb-4e66-bebc-91b7559ce6ee",
            "b31c7a00-8dcb-4af5-9a2f-c2ead6ec546a",
            "441f80f0-d927-4578-ae24-db2145e1b010",
            "05202f1e-9d49-4a50-af93-adecb6484292",
            "034e9fe2-da81-447b-9a26-b5283d5c95dc",
            "241c07cf-0e37-4dd9-bbb9-211f1e500896",
            "7c72b222-221d-4130-8754-389a6283c2eb",
            "57ff4263-0103-4406-8771-ef0f41fb5585"
        ],
        "failures": [],
        "skipped": [
            "fac530d4-7db0-4e76-aa7f-67977772ccf3",
            "8b3a39ba-328c-4bac-8f8d-34a92cf95e3d",
            "13cd4250-9688-4ac8-aa1f-b7feeff88616",
            "d05612b5-7f0e-40a5-9a3c-9880fd652bc0",
            "080a6ca7-da27-4809-95b3-02abd90b8f82",
            "7bab8ac4-d1b4-4ab2-b5e7-9ef688dac28c",
            "298c27f1-6087-490a-b9f4-6ea653f276e9",
            "a444aa68-7ceb-4e66-bebc-91b7559ce6ee",
            "b31c7a00-8dcb-4af5-9a2f-c2ead6ec546a",
            "441f80f0-d927-4578-ae24-db2145e1b010",
            "034e9fe2-da81-447b-9a26-b5283d5c95dc",
            "241c07cf-0e37-4dd9-bbb9-211f1e500896",
            "7c72b222-221d-4130-8754-389a6283c2eb",
            "57ff4263-0103-4406-8771-ef0f41fb5585"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "fe1b0453-c331-42d4-b92d-68e6cdaa03bd",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
