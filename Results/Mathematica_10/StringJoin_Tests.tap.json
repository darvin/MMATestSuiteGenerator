{
    "stats": {
        "suites": 0,
        "tests": 16,
        "passes": 16,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T12:21:06.763Z",
        "end": "2018-06-03T12:21:06.763Z",
        "duration": 0,
        "testsRegistered": 16,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "StringJoin[\"abcd\", \"ABCD\", \"xyz\"]    ➡️     abcdABCDxyz",
                "fullTitle": "StringJoin[\"abcd\", \"ABCD\", \"xyz\"]    ➡️     abcdABCDxyz",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a4e886d9-f0b5-4843-b44b-4210d300b8b5",
                "parentUUID": "b5a5f315-e4ad-46fc-914d-ea1c47f5e91e",
                "skipped": true,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/StringJoin_Tests.m\\n# SYSTEM: Mathematica_10\\n# TEST: StringJoin_Tests\\n# Join strings:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "InputForm[%]    ➡️     \"abcdABCDxyz\"",
                "fullTitle": "InputForm[%]    ➡️     \"abcdABCDxyz\"",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e9d75239-e4a4-4c78-8705-21243c2ef273",
                "parentUUID": "b5a5f315-e4ad-46fc-914d-ea1c47f5e91e",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[InputForm,paclet:ref/InputForm] to show string quotes:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[{{\"AB\", \"CD\"}, \"XY\"}]    ➡️     ABCDXY",
                "fullTitle": "StringJoin[{{\"AB\", \"CD\"}, \"XY\"}]    ➡️     ABCDXY",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "65688e63-ce0e-47bc-aaf0-726b932ef01e",
                "parentUUID": "b5a5f315-e4ad-46fc-914d-ea1c47f5e91e",
                "skipped": true,
                "isHook": false,
                "context": "\"# All lists are ignored:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"\\[Alpha]\\[Beta]\\[Gamma]\", \"(+)(x)\", \" \\[ReturnIndicator]\"]    ➡️     \\[Alpha]\\[Beta]\\[Gamma] (+) (x)\\[ReturnIndicator]",
                "fullTitle": "StringJoin[\"\\[Alpha]\\[Beta]\\[Gamma]\", \"(+)(x)\", \" \\[ReturnIndicator]\"]    ➡️     \\[Alpha]\\[Beta]\\[Gamma] (+) (x)\\[ReturnIndicator]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f7f5e93a-ac22-464c-a068-0e27198bcf98",
                "parentUUID": "b5a5f315-e4ad-46fc-914d-ea1c47f5e91e",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[StringJoin,paclet:ref/StringJoin] works with special characters:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"one\", \"\\n\", \"two\"]    ➡️     one*two",
                "fullTitle": "StringJoin[\"one\", \"\\n\", \"two\"]    ➡️     one*two",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ee2ceb31-0646-42d0-bf37-dcc2d543ce64",
                "parentUUID": "b5a5f315-e4ad-46fc-914d-ea1c47f5e91e",
                "skipped": true,
                "isHook": false,
                "context": "\"# Join strings, with a newline in between:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"red\", \"blue\"]    ➡️     redblue",
                "fullTitle": "StringJoin[\"red\", \"blue\"]    ➡️     redblue",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7582eabf-9c0f-46bf-b390-196c3296f7e9",
                "parentUUID": "b5a5f315-e4ad-46fc-914d-ea1c47f5e91e",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[StringJoin,paclet:ref/StringJoin] preserves formatting information embedded in strings:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "NestList[StringJoin[#1, StringReverse[#1]] & , \"AB\", 5]    ➡️     {AB, ABBA, ABBAABBA, ABBAABBAABBAABBA, ABBAABBAABBAABBAABBAABBAABBAABBA, ABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBA} # skip",
                "fullTitle": "NestList[StringJoin[#1, StringReverse[#1]] & , \"AB\", 5]    ➡️     {AB, ABBA, ABBAABBA, ABBAABBAABBAABBA, ABBAABBAABBAABBAABBAABBAABBAABBA, ABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBA} # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5a5344fc-405f-419d-b0a4-eef0a1c391c8",
                "parentUUID": "b5a5f315-e4ad-46fc-914d-ea1c47f5e91e",
                "skipped": false,
                "isHook": false,
                "context": "\"# Iteratively join a string to its reverse:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "data = Partition[Characters[\"aabcaabc\"], 3, 1]    ➡️     {{a, a, b}, {a, b, c}, {b, c, a}, {c, a, a}, {a, a, b}, {a, b, c}}",
                "fullTitle": "data = Partition[Characters[\"aabcaabc\"], 3, 1]    ➡️     {{a, a, b}, {a, b, c}, {b, c, a}, {c, a, a}, {a, a, b}, {a, b, c}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fbd2c7aa-be5c-4aca-93b9-eef802d5030f",
                "parentUUID": "b5a5f315-e4ad-46fc-914d-ea1c47f5e91e",
                "skipped": true,
                "isHook": false,
                "context": "\"# Find trigrams in a string:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin /@ data    ➡️     {aab, abc, bca, caa, aab, abc}",
                "fullTitle": "StringJoin /@ data    ➡️     {aab, abc, bca, caa, aab, abc}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9778a6cd-81db-4017-bc13-b46ab44beaa5",
                "parentUUID": "b5a5f315-e4ad-46fc-914d-ea1c47f5e91e",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Riffle[{\"dog\", \"cat\", \"sheep\", \"cow\"}, \" \"]    ➡️     {dog, Null, cat, Null, sheep, Null, cow}",
                "fullTitle": "Riffle[{\"dog\", \"cat\", \"sheep\", \"cow\"}, \" \"]    ➡️     {dog, Null, cat, Null, sheep, Null, cow}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b1c8b46e-8c89-4d66-976c-492cd1c27e00",
                "parentUUID": "b5a5f315-e4ad-46fc-914d-ea1c47f5e91e",
                "skipped": true,
                "isHook": false,
                "context": "\"# Join a list of words, after inserting spaces in between:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[%]    ➡️     dog*cat*sheep*cow",
                "fullTitle": "StringJoin[%]    ➡️     dog*cat*sheep*cow",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b174839f-7c1d-4b1b-bd02-03eaaa4a3218",
                "parentUUID": "b5a5f315-e4ad-46fc-914d-ea1c47f5e91e",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "ToExpression[StringJoin[\"0.\", ToString /@ Range[30]]]    ➡️     0.12345678910111213141516171819202122232425262728293`50.091514977524966",
                "fullTitle": "ToExpression[StringJoin[\"0.\", ToString /@ Range[30]]]    ➡️     0.12345678910111213141516171819202122232425262728293`50.091514977524966",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "eb84612d-0fb6-4375-b8fb-8bcb7ea2602b",
                "parentUUID": "b5a5f315-e4ad-46fc-914d-ea1c47f5e91e",
                "skipped": false,
                "isHook": false,
                "context": "\"# Create a Champernowne number:\\n\\n\\ndata: \\n  got:              0.12345678910111213141516171819202122232425262728293`50.091514977524966\\n  expect:           0.12345678910111213141516171819202122232425262728293`50.091514977524966\\n  expect_evaluated: 0.12345678910111213141516171819202122232425262728293`50.091514977524966\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "0.12345678910111213141516171819202122232425262728293`50.091514977524966",
                    "expected": "0.12345678910111213141516171819202122232425262728293`50.091514977524966"
                }
            },
            {
                "title": "Characters[\"abcdefg\"]    ➡️     {a, b, c, d, e, f, g}",
                "fullTitle": "Characters[\"abcdefg\"]    ➡️     {a, b, c, d, e, f, g}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "580ec78c-d47b-4313-967d-3b88cf2c1994",
                "parentUUID": "b5a5f315-e4ad-46fc-914d-ea1c47f5e91e",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[StringJoin,paclet:ref/StringJoin] acts as a kind of inverse to RefLink[Characters,paclet:ref/Characters]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[%]    ➡️     abcdefg",
                "fullTitle": "StringJoin[%]    ➡️     abcdefg",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ed32c60c-c1c4-476b-97f0-f742fd4a95b7",
                "parentUUID": "b5a5f315-e4ad-46fc-914d-ea1c47f5e91e",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"item \", 456]    ➡️     StringJoin[item, 456]",
                "fullTitle": "StringJoin[\"item \", 456]    ➡️     StringJoin[item, 456]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2984e61f-5b70-4f1f-8574-2bea8f64a4ab",
                "parentUUID": "b5a5f315-e4ad-46fc-914d-ea1c47f5e91e",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[StringJoin,paclet:ref/StringJoin] works only with explicit strings:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"item \", ToString[456]]    ➡️     item*456",
                "fullTitle": "StringJoin[\"item \", ToString[456]]    ➡️     item*456",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6c0567d7-f585-4c87-a27c-846220383d47",
                "parentUUID": "b5a5f315-e4ad-46fc-914d-ea1c47f5e91e",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[ToString,paclet:ref/ToString] to convert to a string:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "a4e886d9-f0b5-4843-b44b-4210d300b8b5",
            "e9d75239-e4a4-4c78-8705-21243c2ef273",
            "65688e63-ce0e-47bc-aaf0-726b932ef01e",
            "f7f5e93a-ac22-464c-a068-0e27198bcf98",
            "ee2ceb31-0646-42d0-bf37-dcc2d543ce64",
            "7582eabf-9c0f-46bf-b390-196c3296f7e9",
            "5a5344fc-405f-419d-b0a4-eef0a1c391c8",
            "fbd2c7aa-be5c-4aca-93b9-eef802d5030f",
            "9778a6cd-81db-4017-bc13-b46ab44beaa5",
            "b1c8b46e-8c89-4d66-976c-492cd1c27e00",
            "b174839f-7c1d-4b1b-bd02-03eaaa4a3218",
            "eb84612d-0fb6-4375-b8fb-8bcb7ea2602b",
            "580ec78c-d47b-4313-967d-3b88cf2c1994",
            "ed32c60c-c1c4-476b-97f0-f742fd4a95b7",
            "2984e61f-5b70-4f1f-8574-2bea8f64a4ab",
            "6c0567d7-f585-4c87-a27c-846220383d47"
        ],
        "failures": [],
        "skipped": [
            "a4e886d9-f0b5-4843-b44b-4210d300b8b5",
            "e9d75239-e4a4-4c78-8705-21243c2ef273",
            "65688e63-ce0e-47bc-aaf0-726b932ef01e",
            "f7f5e93a-ac22-464c-a068-0e27198bcf98",
            "ee2ceb31-0646-42d0-bf37-dcc2d543ce64",
            "7582eabf-9c0f-46bf-b390-196c3296f7e9",
            "fbd2c7aa-be5c-4aca-93b9-eef802d5030f",
            "9778a6cd-81db-4017-bc13-b46ab44beaa5",
            "b1c8b46e-8c89-4d66-976c-492cd1c27e00",
            "b174839f-7c1d-4b1b-bd02-03eaaa4a3218",
            "580ec78c-d47b-4313-967d-3b88cf2c1994",
            "ed32c60c-c1c4-476b-97f0-f742fd4a95b7",
            "2984e61f-5b70-4f1f-8574-2bea8f64a4ab",
            "6c0567d7-f585-4c87-a27c-846220383d47"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "b5a5f315-e4ad-46fc-914d-ea1c47f5e91e",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
