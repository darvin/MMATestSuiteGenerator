{
    "stats": {
        "suites": 0,
        "tests": 16,
        "passes": 16,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-11T04:14:35.894Z",
        "end": "2018-06-11T04:14:35.894Z",
        "duration": 0,
        "testsRegistered": 16,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "StringJoin[\"abcd\", \"ABCD\", \"xyz\"]    ➡️     abcdABCDxyz",
                "fullTitle": "StringJoin[\"abcd\", \"ABCD\", \"xyz\"]    ➡️     abcdABCDxyz",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c881e9f6-521b-4e31-b544-f80ab0c8796a",
                "parentUUID": "bd3f5e05-0c52-4b1b-8ea5-618be3add5be",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/StringJoin_Tests.m\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[StringJoin[Hold[Out[$Line - 1]]]], 3]]]]\\n#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[StringJoin[Hold[Out[$Line - 1]]]], 3]]]]\\n#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[StringJoin[dog, Null, cat, Null, sheep, Null, cow]], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[StringJoin, string]], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: StringJoin_Tests\\n# Join strings:\\n\\n\\ndata: \\n  got:              abcdABCDxyz\\n  expect:           abcdABCDxyz\\n  expect_evaluated: abcdABCDxyz\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "abcdABCDxyz",
                    "expected": "abcdABCDxyz"
                }
            },
            {
                "title": "InputForm[%]    ➡️     \"abcdABCDxyz\"",
                "fullTitle": "InputForm[%]    ➡️     \"abcdABCDxyz\"",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c1eb9e5f-c165-4070-bf9c-23ccdec84ac5",
                "parentUUID": "bd3f5e05-0c52-4b1b-8ea5-618be3add5be",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[InputForm,paclet:ref/InputForm] to show string quotes:\\n\\n\\ndata: \\n  got:              abcdABCDxyz\\n  expect:           abcdABCDxyz\\n  expect_evaluated: abcdABCDxyz\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "abcdABCDxyz",
                    "expected": "abcdABCDxyz"
                }
            },
            {
                "title": "StringJoin[{{\"AB\", \"CD\"}, \"XY\"}]    ➡️     ABCDXY",
                "fullTitle": "StringJoin[{{\"AB\", \"CD\"}, \"XY\"}]    ➡️     ABCDXY",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c8f65cd3-c434-4690-83ac-00a87618f06f",
                "parentUUID": "bd3f5e05-0c52-4b1b-8ea5-618be3add5be",
                "skipped": false,
                "isHook": false,
                "context": "\"# All lists are ignored:\\n\\n\\ndata: \\n  got:              ABCDXY\\n  expect:           ABCDXY\\n  expect_evaluated: ABCDXY\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "ABCDXY",
                    "expected": "ABCDXY"
                }
            },
            {
                "title": "StringJoin[\"\\[Alpha]\\[Beta]\\[Gamma]\", \"(+)(x)\", \" \\[ReturnIndicator]\"]    ➡️     \\[Alpha]\\[Beta]\\[Gamma] (+) (x)\\[ReturnIndicator]",
                "fullTitle": "StringJoin[\"\\[Alpha]\\[Beta]\\[Gamma]\", \"(+)(x)\", \" \\[ReturnIndicator]\"]    ➡️     \\[Alpha]\\[Beta]\\[Gamma] (+) (x)\\[ReturnIndicator]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "57d7d904-9265-4d9e-ae81-9c00da353759",
                "parentUUID": "bd3f5e05-0c52-4b1b-8ea5-618be3add5be",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[StringJoin,paclet:ref/StringJoin] works with special characters:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"one\", \"\\n\", \"two\"]    ➡️     one*two",
                "fullTitle": "StringJoin[\"one\", \"\\n\", \"two\"]    ➡️     one*two",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "06fe239c-6998-4182-8ab6-3ca2afeb9619",
                "parentUUID": "bd3f5e05-0c52-4b1b-8ea5-618be3add5be",
                "skipped": true,
                "isHook": false,
                "context": "\"# Join strings, with a newline in between:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"red\", \"blue\"]    ➡️     redblue",
                "fullTitle": "StringJoin[\"red\", \"blue\"]    ➡️     redblue",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fad607f6-2362-4777-947e-561baeba3f1a",
                "parentUUID": "bd3f5e05-0c52-4b1b-8ea5-618be3add5be",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[StringJoin,paclet:ref/StringJoin] preserves formatting information embedded in strings:\\n\\n\\ndata: \\n  got:              redblue\\n  expect:           redblue\\n  expect_evaluated: redblue\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "redblue",
                    "expected": "redblue"
                }
            },
            {
                "title": "NestList[StringJoin[#1, StringReverse[#1]] & , \"AB\", 5]    ➡️     {AB, ABBA, ABBAABBA, ABBAABBAABBAABBA, ABBAABBAABBAABBAABBAABBAABBAABBA, ABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBA}",
                "fullTitle": "NestList[StringJoin[#1, StringReverse[#1]] & , \"AB\", 5]    ➡️     {AB, ABBA, ABBAABBA, ABBAABBAABBAABBA, ABBAABBAABBAABBAABBAABBAABBAABBA, ABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBA}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "555e41e5-8ba4-49c2-a202-fcc59422a883",
                "parentUUID": "bd3f5e05-0c52-4b1b-8ea5-618be3add5be",
                "skipped": false,
                "isHook": false,
                "context": "\"# Iteratively join a string to its reverse:\\n\\n\\ndata: \\n  got: \\n    AB:                                                               null\\n    ABBA:                                                             null\\n    ABBAABBA:                                                         null\\n    ABBAABBAABBAABBA:                                                 null\\n    ABBAABBAABBAABBAABBAABBAABBAABBA:                                 null\\n    ABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBA: null\\n  expect: \\n    AB:                                                               null\\n    ABBA:                                                             null\\n    ABBAABBA:                                                         null\\n    ABBAABBAABBAABBA:                                                 null\\n    ABBAABBAABBAABBAABBAABBAABBAABBA:                                 null\\n    ABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBA: null\\n  expect_evaluated: \\n    AB:                                                               null\\n    ABBA:                                                             null\\n    ABBAABBA:                                                         null\\n    ABBAABBAABBAABBA:                                                 null\\n    ABBAABBAABBAABBAABBAABBAABBAABBA:                                 null\\n    ABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBA: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "AB": null,
                        "ABBA": null,
                        "ABBAABBA": null,
                        "ABBAABBAABBAABBA": null,
                        "ABBAABBAABBAABBAABBAABBAABBAABBA": null,
                        "ABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBA": null
                    },
                    "expected": {
                        "AB": null,
                        "ABBA": null,
                        "ABBAABBA": null,
                        "ABBAABBAABBAABBA": null,
                        "ABBAABBAABBAABBAABBAABBAABBAABBA": null,
                        "ABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBA": null
                    }
                }
            },
            {
                "title": "data = Partition[Characters[\"aabcaabc\"], 3, 1]    ➡️     {{a, a, b}, {a, b, c}, {b, c, a}, {c, a, a}, {a, a, b}, {a, b, c}}",
                "fullTitle": "data = Partition[Characters[\"aabcaabc\"], 3, 1]    ➡️     {{a, a, b}, {a, b, c}, {b, c, a}, {c, a, a}, {a, a, b}, {a, b, c}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3b6d2750-ce5f-40eb-a72d-0f69e7a43893",
                "parentUUID": "bd3f5e05-0c52-4b1b-8ea5-618be3add5be",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find trigrams in a string:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin /@ data    ➡️     {aab, abc, bca, caa, aab, abc}",
                "fullTitle": "StringJoin /@ data    ➡️     {aab, abc, bca, caa, aab, abc}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "26f12f41-53e9-40a0-861c-2bd7d41957a5",
                "parentUUID": "bd3f5e05-0c52-4b1b-8ea5-618be3add5be",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Riffle[{\"dog\", \"cat\", \"sheep\", \"cow\"}, \" \"]    ➡️     {dog, Null, cat, Null, sheep, Null, cow}",
                "fullTitle": "Riffle[{\"dog\", \"cat\", \"sheep\", \"cow\"}, \" \"]    ➡️     {dog, Null, cat, Null, sheep, Null, cow}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9f33ab92-91d8-4f53-94f4-9591a60a4ae0",
                "parentUUID": "bd3f5e05-0c52-4b1b-8ea5-618be3add5be",
                "skipped": true,
                "isHook": false,
                "context": "\"# Join a list of words, after inserting spaces in between:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[%]    ➡️     dog*cat*sheep*cow",
                "fullTitle": "StringJoin[%]    ➡️     dog*cat*sheep*cow",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3da98f40-0f06-4392-aba2-3fa35a898cf9",
                "parentUUID": "bd3f5e05-0c52-4b1b-8ea5-618be3add5be",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "ToExpression[StringJoin[\"0.\", ToString /@ Range[30]]]    ➡️     0.12345678910111213141516171819202122232425262728293`50.091514977524966",
                "fullTitle": "ToExpression[StringJoin[\"0.\", ToString /@ Range[30]]]    ➡️     0.12345678910111213141516171819202122232425262728293`50.091514977524966",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3bd4bb66-8f96-44c8-a7de-10b34dfda76a",
                "parentUUID": "bd3f5e05-0c52-4b1b-8ea5-618be3add5be",
                "skipped": false,
                "isHook": false,
                "context": "\"# Create a Champernowne number:\\n\\n\\ndata: \\n  got:              0.12345678910111213\\n  expect:           0.12345678910111213141516171819202122232425262728293`50.091514977524966\\n  expect_evaluated: 0.12345678910111213\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 0.12345678910111213,
                    "expected": "0.12345678910111213141516171819202122232425262728293`50.091514977524966"
                }
            },
            {
                "title": "Characters[\"abcdefg\"]    ➡️     {a, b, c, d, e, f, g}",
                "fullTitle": "Characters[\"abcdefg\"]    ➡️     {a, b, c, d, e, f, g}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ea942739-356c-4185-8e99-de06929d9b86",
                "parentUUID": "bd3f5e05-0c52-4b1b-8ea5-618be3add5be",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[StringJoin,paclet:ref/StringJoin] acts as a kind of inverse to RefLink[Characters,paclet:ref/Characters]:\\n\\n\\ndata: \\n  got: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n    e: null\\n    f: null\\n    g: null\\n  expect: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n    e: null\\n    f: null\\n    g: null\\n  expect_evaluated: \\n    a: null\\n    b: null\\n    c: null\\n    d: null\\n    e: null\\n    f: null\\n    g: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null,
                        "e": null,
                        "f": null,
                        "g": null
                    },
                    "expected": {
                        "a": null,
                        "b": null,
                        "c": null,
                        "d": null,
                        "e": null,
                        "f": null,
                        "g": null
                    }
                }
            },
            {
                "title": "StringJoin[%]    ➡️     abcdefg",
                "fullTitle": "StringJoin[%]    ➡️     abcdefg",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "dd3230f6-8efb-4a02-aa2e-28a28baab69a",
                "parentUUID": "bd3f5e05-0c52-4b1b-8ea5-618be3add5be",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"item \", 456]    ➡️     StringJoin[item, 456]",
                "fullTitle": "StringJoin[\"item \", 456]    ➡️     StringJoin[item, 456]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "02042d22-78e6-4765-bfad-a903d14f4e9c",
                "parentUUID": "bd3f5e05-0c52-4b1b-8ea5-618be3add5be",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[StringJoin,paclet:ref/StringJoin] works only with explicit strings:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "StringJoin[\"item \", ToString[456]]    ➡️     item*456",
                "fullTitle": "StringJoin[\"item \", ToString[456]]    ➡️     item*456",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d86bcb62-feb3-4c5d-95df-699db158a2f1",
                "parentUUID": "bd3f5e05-0c52-4b1b-8ea5-618be3add5be",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[ToString,paclet:ref/ToString] to convert to a string:\\n\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "c881e9f6-521b-4e31-b544-f80ab0c8796a",
            "c1eb9e5f-c165-4070-bf9c-23ccdec84ac5",
            "c8f65cd3-c434-4690-83ac-00a87618f06f",
            "57d7d904-9265-4d9e-ae81-9c00da353759",
            "06fe239c-6998-4182-8ab6-3ca2afeb9619",
            "fad607f6-2362-4777-947e-561baeba3f1a",
            "555e41e5-8ba4-49c2-a202-fcc59422a883",
            "3b6d2750-ce5f-40eb-a72d-0f69e7a43893",
            "26f12f41-53e9-40a0-861c-2bd7d41957a5",
            "9f33ab92-91d8-4f53-94f4-9591a60a4ae0",
            "3da98f40-0f06-4392-aba2-3fa35a898cf9",
            "3bd4bb66-8f96-44c8-a7de-10b34dfda76a",
            "ea942739-356c-4185-8e99-de06929d9b86",
            "dd3230f6-8efb-4a02-aa2e-28a28baab69a",
            "02042d22-78e6-4765-bfad-a903d14f4e9c",
            "d86bcb62-feb3-4c5d-95df-699db158a2f1"
        ],
        "failures": [],
        "skipped": [
            "57d7d904-9265-4d9e-ae81-9c00da353759",
            "06fe239c-6998-4182-8ab6-3ca2afeb9619",
            "9f33ab92-91d8-4f53-94f4-9591a60a4ae0",
            "3da98f40-0f06-4392-aba2-3fa35a898cf9",
            "dd3230f6-8efb-4a02-aa2e-28a28baab69a",
            "02042d22-78e6-4765-bfad-a903d14f4e9c",
            "d86bcb62-feb3-4c5d-95df-699db158a2f1"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "bd3f5e05-0c52-4b1b-8ea5-618be3add5be",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
