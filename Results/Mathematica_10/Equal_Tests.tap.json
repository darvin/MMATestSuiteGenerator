{
    "stats": {
        "suites": 0,
        "tests": 51,
        "passes": 51,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-11T04:13:46.741Z",
        "end": "2018-06-11T04:13:46.741Z",
        "duration": 0,
        "testsRegistered": 51,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "2 + 2 == 4    ➡️     True",
                "fullTitle": "2 + 2 == 4    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d0407d61-b872-44fc-ac43-c3ffc2477242",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/Equal_Tests.m\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Solve, naqs], StringForm[`1` is not a quantified system of equations and inequalities., Short[HoldForm[Hold[Out[$Line - 1]]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Solve, naqs], StringForm[`1` is not a quantified system of equations and inequalities., Short[HoldForm[Hold[Out[$Line - 1]]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Solve, naqs], StringForm[`1` is not a quantified system of equations and inequalities., Short[HoldForm[Hold[Out[$Line - 1]]], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[Solve, naqs]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Reduce, naqs], StringForm[`1` is not a quantified system of equations and inequalities., Short[HoldForm[Hold[Out[$Line - 2]]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Reduce, naqs], StringForm[`1` is not a quantified system of equations and inequalities., Short[HoldForm[Hold[Out[$Line - 2]]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Reduce, naqs], StringForm[`1` is not a quantified system of equations and inequalities., Short[HoldForm[Hold[Out[$Line - 1]]], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[Reduce, naqs]], 3]]]]\\n#! TextForm[ColonForm[MessageName[PossibleZeroQ, ztest1], StringForm[Unable to decide whether numeric quantity `1` is equal to zero. Assuming it is., Short[HoldForm[Log[Sqrt[2] + Sqrt[3]] - Log[5 + 2*Sqrt[6]]/2], 3]]]]\\n#! TextForm[ColonForm[MessageName[PossibleZeroQ, ztest1], StringForm[Unable to decide whether numeric quantity `1` is equal to zero. Assuming it is., Short[HoldForm[1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Log[Sqrt[2] + Sqrt[3]] - Log[5 + 2*Sqrt[6]]/2], 3]]]]\\n#! TextForm[ColonForm[MessageName[Set, shape], StringForm[Lists `1` and `2` are not the same shape., Short[HoldForm[{x, y, z}], 3], Short[HoldForm[Span[{0.99999999999999, 1., 1.00000000000001}, x] == y], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: Equal_Tests\\n# Test equality:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x^2 == 1 + x    ➡️     x^2 == 1 + x",
                "fullTitle": "x^2 == 1 + x    ➡️     x^2 == 1 + x",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "874b37d1-befc-4f50-b4a3-5e19709e2850",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# Represent an equation:\\n\\n\\ndata: \\n  got:              2\\n  expect:           x^2 == 1 + x\\n  expect_evaluated: 2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 2,
                    "expected": "x^2 == 1 + x"
                }
            },
            {
                "title": "Solve[%, x]    ➡️     {{x -> (1/2)*(1 - Sqrt[5])}, {x -> (1/2)*(1 + Sqrt[5])}}",
                "fullTitle": "Solve[%, x]    ➡️     {{x -> (1/2)*(1 - Sqrt[5])}, {x -> (1/2)*(1 + Sqrt[5])}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "01221eb6-1212-4c11-abdc-31338e326397",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"#! x  == 1 + x\\n#! x  == 1 + x\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "3/2 == 5/3    ➡️     False",
                "fullTitle": "3/2 == 5/3    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f4dff4bd-e642-4dbb-909e-6ac3742f9e99",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"#! {{x -> -----------}, {x -> -----------}}\\n#!             2                   2\\n#! {{x -> -----------}, {x -> -----------}}\\n#!             2                   2\\n# Test equality of numbers:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "1.`18.06179973983887 == 1.00000000000000011015494072453`18.06179973983887    ➡️     True",
                "fullTitle": "1.`18.06179973983887 == 1.00000000000000011015494072453`18.06179973983887    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6c369d56-f9f9-41f1-8fbc-e353c956838f",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# Approximate numbers that differ in their last seven binary digits are considered equal:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "N[Pi, 20] == Pi    ➡️     True",
                "fullTitle": "N[Pi, 20] == Pi    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "89ce6a2a-247e-4617-82e3-67eb5d927114",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare an exact numeric expression and an approximate number:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "N[Pi, 20] == Pi*(1 + 2^8/10^20)    ➡️     False",
                "fullTitle": "N[Pi, 20] == Pi*(1 + 2^8/10^20)    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cbe21d64-bb5b-4db8-92df-a9bf7029040b",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Pi^E == E^Pi    ➡️     False",
                "fullTitle": "Pi^E == E^Pi    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f9f7fb6a-fed4-4461-976d-2ce8b52ecdb4",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare two exact numeric expressions; a numeric test may suffice to disprove equality:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Sqrt[2] + Sqrt[3] == Sqrt[5 + 2*Sqrt[6]]    ➡️     True",
                "fullTitle": "Sqrt[2] + Sqrt[3] == Sqrt[5 + 2*Sqrt[6]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3fdafcfc-c599-4460-b375-276a9b877ff5",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# Proving equality requires symbolic methods:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4]    ➡️     Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 + #1^4 & , 4]",
                "fullTitle": "Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4]    ➡️     Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 + #1^4 & , 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "546f9a20-9f29-4dcf-9a83-12f02b4cbc22",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# Symbolic methods used by RefLink[Equal,paclet:ref/Equal] are insufficient to prove this equality:\\n\\n\\ndata: \\n  got:              2     4\\n  expect:           Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 +\\n  expect_evaluated: 2     4\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2     4",
                    "expected": "Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 +"
                }
            },
            {
                "title": "RootReduce[%]    ➡️     True",
                "fullTitle": "RootReduce[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "21f92fc9-20c2-47ab-acf3-a0063bca8e98",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": true,
                "isHook": false,
                "context": "\"#! Sqrt[2] + Sqrt[3] == Root[1 - 10 #1  + #1  & , 4]\\n#! Sqrt[2] + Sqrt[3] == Root[1 - 10 #1  + #1  & , 4]\\n# Use RefLink[RootReduce,paclet:ref/RootReduce] to decide whether two algebraic numbers are equal:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)    ➡️     Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 + #1^4 & , 4]",
                "fullTitle": "Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)    ➡️     Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 + #1^4 & , 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fa7ed065-8213-4a97-85fe-f4d6a61f3ea8",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numeric methods used by RefLink[Equal,paclet:ref/Equal] do not use sufficient precision to disprove this equality:\\n\\n\\ndata: \\n  got:              1                                                                   2     4\\n  expect:           Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\\n  expect_evaluated: 1                                                                   2     4\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "1                                                                   2     4",
                    "expected": "Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +"
                }
            },
            {
                "title": "RootReduce[%]    ➡️     False",
                "fullTitle": "RootReduce[%]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b85db981-e271-4a73-a3f4-96939edcfd5f",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": true,
                "isHook": false,
                "context": "\"#! Sqrt[2] + Sqrt[3] == ----------------------------------------------------------------------------------------------------- + Root[1 - 10 #1  + #1  & , 4]\\n#!                      10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\n#! Sqrt[2] + Sqrt[3] == ----------------------------------------------------------------------------------------------------- + Root[1 - 10 #1  + #1  & , 4]\\n#!                      10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\n# RefLink[RootReduce,paclet:ref/RootReduce] proves that the two algebraic numbers are not equal:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Block[{$MaxExtraPrecision = 100}, Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)]    ➡️     False",
                "fullTitle": "Block[{$MaxExtraPrecision = 100}, Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2cc2789d-43d0-4b1c-b2af-0af13de0fd33",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# Increasing RefLink[$MaxExtraPrecision,paclet:ref/$MaxExtraPrecision] may also allow you to disprove equality:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "x == x    ➡️     True",
                "fullTitle": "x == x    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9a3cd271-a369-44a0-823b-9f8294d78c1f",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# A symbolic identity:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "(x + 1)^2 == x^2 + 2*x + 1    ➡️     (1 + x)^2 == 1 + 2*x + x^2",
                "fullTitle": "(x + 1)^2 == x^2 + 2*x + 1    ➡️     (1 + x)^2 == 1 + 2*x + x^2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5736a848-68e2-4823-ac22-533a11aed805",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Equal,paclet:ref/Equal] does not automatically prove this identity:\\n\\n\\ndata: \\n  got:              2               2\\n  expect:           (1 + x)^2 == 1 + 2*x + x^2\\n  expect_evaluated: 2               2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2               2",
                    "expected": "(1 + x)^2 == 1 + 2*x + x^2"
                }
            },
            {
                "title": "Expand[%]    ➡️     True",
                "fullTitle": "Expand[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fdea81a1-621c-445a-9189-c6d794b0f6e7",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": true,
                "isHook": false,
                "context": "\"#! (1 + x)  == 1 + 2 x + x\\n#! (1 + x)  == 1 + 2 x + x\\n# Use RefLink[Expand,paclet:ref/Expand] to prove it:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "a*x == b    ➡️     a*x == b",
                "fullTitle": "a*x == b    ➡️     a*x == b",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a67e3702-29f2-40aa-84f0-75b458d65ccb",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# A symbolic equation:\\n\\n\\ndata: \\n  got:              a x == b\\n  expect:           a*x == b\\n  expect_evaluated: a x == b\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a x == b",
                    "expected": "a*x == b"
                }
            },
            {
                "title": "Solve[%, x]    ➡️     {{x -> b/a}}",
                "fullTitle": "Solve[%, x]    ➡️     {{x -> b/a}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6eb66e2f-3a43-4f0f-a749-509cbf876dcd",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Solve,paclet:ref/Solve] to solve the equation:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[%%, x]    ➡️     (b == 0 && a == 0) || (a != 0 && x == b/a)",
                "fullTitle": "Reduce[%%, x]    ➡️     (b == 0 && a == 0) || (a != 0 && x == b/a)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e6dbeaf2-8abb-416d-826f-ec50ad9c6c0d",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": true,
                "isHook": false,
                "context": "\"#! {{x -> -}}\\n#! {{x -> -}}\\n# RefLink[Reduce,paclet:ref/Reduce] gives all solutions, including the ones that require nongeneric values of parameters:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "3 == 3. == 3.    ➡️     True",
                "fullTitle": "3 == 3. == 3.    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "135f3c92-8e8b-4908-972d-8d765c9b2489",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare more than two expressions:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x + y + z == x^2 - y^2 - z^2 == x*y*z == 3    ➡️     x + y + z == x^2 - y^2 - z^2 == x*y*z == 3",
                "fullTitle": "x + y + z == x^2 - y^2 - z^2 == x*y*z == 3    ➡️     x + y + z == x^2 - y^2 - z^2 == x*y*z == 3",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fb00573c-e569-4f71-9d1c-f56839175bd9",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              2    2    2\\n  expect:           x + y + z == x^2 - y^2 - z^2 == x*y*z == 3\\n  expect_evaluated: 2    2    2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2    2    2",
                    "expected": "x + y + z == x^2 - y^2 - z^2 == x*y*z == 3"
                }
            },
            {
                "title": "Reduce[%, {x, y, z}]    ➡️     x == 1 && (y == (1/2)*(2 - 2*I*Sqrt[2]) || y == (1/2)*(2 + 2*I*Sqrt[2])) && z == 2 - y",
                "fullTitle": "Reduce[%, {x, y, z}]    ➡️     x == 1 && (y == (1/2)*(2 - 2*I*Sqrt[2]) || y == (1/2)*(2 + 2*I*Sqrt[2])) && z == 2 - y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9fbc6d8c-5e12-40f0-bc13-17c3c145f489",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"#! x + y + z == x  - y  - z  == x y z == 3\\n#! x + y + z == x  - y  - z  == x y z == 3\\n\\n\\ndata: \\n  got:              2 - (2 I) Sqrt[2]         2 + (2 I) Sqrt[2]\\n  expect:           x == 1 && (y == (1/2)*(2 - 2*I*Sqrt[2]) || y == (1/2)*(2 + 2*I*Sqrt[2])) && z == 2 - y\\n  expect_evaluated: 2 - (2 I) Sqrt[2]         2 + (2 I) Sqrt[2]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2 - (2 I) Sqrt[2]         2 + (2 I) Sqrt[2]",
                    "expected": "x == 1 && (y == (1/2)*(2 - 2*I*Sqrt[2]) || y == (1/2)*(2 + 2*I*Sqrt[2])) && z == 2 - y"
                }
            },
            {
                "title": "{1, 2} == {1, 2}    ➡️     True",
                "fullTitle": "{1, 2} == {1, 2}    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9b658f00-2b80-44ff-94e4-c79e900032e1",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"#! x == 1 && (y == ----------------- || y == -----------------) && z == 2 - y\\n#!                         2                         2\\n#! x == 1 && (y == ----------------- || y == -----------------) && z == 2 - y\\n#!                         2                         2\\n# Compare lists:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "{a, b, c} == {d, e}    ➡️     False",
                "fullTitle": "{a, b, c} == {d, e}    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f560397c-7371-4718-acd1-ff7cfcd6a516",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "\"abc\" == \"ABC\"    ➡️     False",
                "fullTitle": "\"abc\" == \"ABC\"    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9a642361-c52a-4fb9-bef7-33db42949d83",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare strings:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "!x == y    ➡️     x != y",
                "fullTitle": "!x == y    ➡️     x != y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8c3514fb-f3e5-4100-913c-bbb696af2d0e",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of two-argument RefLink[Equal,paclet:ref/Equal] is RefLink[Unequal,paclet:ref/Unequal]:\\n\\n\\ndata: \\n  got:              x != y\\n  expect:           x != y\\n  expect_evaluated: x != y\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x != y",
                    "expected": "x != y"
                }
            },
            {
                "title": "!x == y == z    ➡️      !x == y == z",
                "fullTitle": "!x == y == z    ➡️      !x == y == z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3f90ab2a-1175-473c-8ad8-316ddc241496",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of three-argument RefLink[Equal,paclet:ref/Equal] does not simplify automatically:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[%]    ➡️     y != x || z != x",
                "fullTitle": "LogicalExpand[%]    ➡️     y != x || z != x",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8cf0a795-328f-4f0a-b2f5-480871cb2e24",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[LogicalExpand,paclet:ref/LogicalExpand] to express it in terms of two-argument RefLink[Unequal,paclet:ref/Unequal]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[x != y != z]    ➡️     y != x && z != x && z != y",
                "fullTitle": "LogicalExpand[x != y != z]    ➡️     y != x && z != x && z != y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "11bc48d4-ad69-49df-bf81-d289fbb78cc1",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of three-argument RefLink[Equal,paclet:ref/Equal] is not equivalent to three-argument RefLink[Unequal,paclet:ref/Unequal]:\\n\\n\\ndata: \\n  got:              y != x && z != x && z != y\\n  expect:           y != x && z != x && z != y\\n  expect_evaluated: y != x && z != x && z != y\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "y != x && z != x && z != y",
                    "expected": "y != x && z != x && z != y"
                }
            },
            {
                "title": "{x == x, x == y, Sqrt[2] + Sqrt[3] == Sqrt[5 + 2*Sqrt[6]], Pi == N[Pi]}    ➡️     {True, x == y, True, True}",
                "fullTitle": "{x == x, x == y, Sqrt[2] + Sqrt[3] == Sqrt[5 + 2*Sqrt[6]], Pi == N[Pi]}    ➡️     {True, x == y, True, True}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "eba54f0d-a359-43f7-9a80-a044db2009a9",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Equal,paclet:ref/Equal] tests mathematical equality of objects represented by expressions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{x === x, x === y, Sqrt[2] + Sqrt[3] === Sqrt[5 + 2*Sqrt[6]], Pi === N[Pi]}    ➡️     {True, False, False, False}",
                "fullTitle": "{x === x, x === y, Sqrt[2] + Sqrt[3] === Sqrt[5 + 2*Sqrt[6]], Pi === N[Pi]}    ➡️     {True, False, False, False}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c61ead9e-6513-4c26-9665-15ca4fdb1bc1",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[SameQ,paclet:ref/SameQ] tests syntactic equality of expressions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "a = Log[Sqrt[2] + Sqrt[3]]; b = Log[5 + 2*Sqrt[6]]/2; a == b    ➡️     Log[Sqrt[2] + Sqrt[3]] == (1/2)*Log[5 + 2*Sqrt[6]]",
                "fullTitle": "a = Log[Sqrt[2] + Sqrt[3]]; b = Log[5 + 2*Sqrt[6]]/2; a == b    ➡️     Log[Sqrt[2] + Sqrt[3]] == (1/2)*Log[5 + 2*Sqrt[6]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e08b082c-8f1b-49db-8216-100565290ba3",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# When RefLink[Equal,paclet:ref/Equal] cannot decide whether two numeric expressions are equal it returns unchanged:\\n\\n\\ndata: \\n  got:              Log[5 + 2 Sqrt[6]]\\n  expect:           Log[Sqrt[2] + Sqrt[3]] == (1/2)*Log[5 + 2*Sqrt[6]]\\n  expect_evaluated: Log[5 + 2 Sqrt[6]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Log[5 + 2 Sqrt[6]]",
                    "expected": "Log[Sqrt[2] + Sqrt[3]] == (1/2)*Log[5 + 2*Sqrt[6]]"
                }
            },
            {
                "title": "FullSimplify[a == b]    ➡️     True",
                "fullTitle": "FullSimplify[a == b]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "79f14efa-6847-419a-868c-f9693f9b4122",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"#! Log[Sqrt[2] + Sqrt[3]] == ------------------\\n#!                                   2\\n#! Log[Sqrt[2] + Sqrt[3]] == ------------------\\n#!                                   2\\n# RefLink[FullSimplify,paclet:ref/FullSimplify] uses exact symbolic transformations to prove the equality:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[a - b]    ➡️     True",
                "fullTitle": "PossibleZeroQ[a - b]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "87b332bc-f57f-47f9-9985-0892265df1f4",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] uses numeric and symbolic heuristics to decide whether an expression is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[a - b + 10^(-100)]    ➡️     True",
                "fullTitle": "PossibleZeroQ[a - b + 10^(-100)]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "014c7893-be2d-4ea9-a7bc-b68761f942ba",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numeric methods used by RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] may incorrectly decide that a number is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Solve[a*x^2 + b*x + c == 0, x]    ➡️     {{x -> (-b - Sqrt[b^2 - 4*a*c])/(2*a)}, {x -> (-b + Sqrt[b^2 - 4*a*c])/(2*a)}}",
                "fullTitle": "Solve[a*x^2 + b*x + c == 0, x]    ➡️     {{x -> (-b - Sqrt[b^2 - 4*a*c])/(2*a)}, {x -> (-b + Sqrt[b^2 - 4*a*c])/(2*a)}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "80108c14-e738-4634-a7ed-33681cfebd03",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[Solve,paclet:ref/Solve] to solve equations for generic values of parameters:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[a*x^2 + b*x + c == 0, x]    ➡️     (a != 0 && (x == (-b - Sqrt[b^2 - 4*a*c])/(2*a) || x == (-b + Sqrt[b^2 - 4*a*c])/(2*a))) || (a == 0 && b != 0 && x == -(c/b)) || (c == 0 && b == 0 && a == 0)",
                "fullTitle": "Reduce[a*x^2 + b*x + c == 0, x]    ➡️     (a != 0 && (x == (-b - Sqrt[b^2 - 4*a*c])/(2*a) || x == (-b + Sqrt[b^2 - 4*a*c])/(2*a))) || (a == 0 && b != 0 && x == -(c/b)) || (c == 0 && b == 0 && a == 0)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a6db6a09-e24c-4215-9c93-3036896779ff",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Reduce,paclet:ref/Reduce] gives all solutions, including those with nongeneric parameter values:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[x^2 + y^2 == 5, {x, y}, Reals]    ➡️     -Sqrt[5] <= x <= Sqrt[5] && (y == -Sqrt[5 - x^2] || y == Sqrt[5 - x^2])",
                "fullTitle": "Reduce[x^2 + y^2 == 5, {x, y}, Reals]    ➡️     -Sqrt[5] <= x <= Sqrt[5] && (y == -Sqrt[5 - x^2] || y == Sqrt[5 - x^2])",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "997e8c43-6fa5-4c17-82d2-678dc9b15c3b",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Reduce,paclet:ref/Reduce] to solve equations over specified domains:\\n\\n\\ndata: \\n  got:              2                    2\\n  expect:           -Sqrt[5] <= x <= Sqrt[5] && (y == -Sqrt[5 - x^2] || y == Sqrt[5 - x^2])\\n  expect_evaluated: 2                    2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "2                    2",
                    "expected": "-Sqrt[5] <= x <= Sqrt[5] && (y == -Sqrt[5 - x^2] || y == Sqrt[5 - x^2])"
                }
            },
            {
                "title": "Reduce[x^2 + y^2 == 5, {x, y}, Integers]    ➡️     (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)",
                "fullTitle": "Reduce[x^2 + y^2 == 5, {x, y}, Integers]    ➡️     (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9e878b34-fda3-4301-a81b-c9dab784170d",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"#! -Sqrt[5] <= x <= Sqrt[5] && (y == -Sqrt[5 - x ] || y == Sqrt[5 - x ])\\n#! -Sqrt[5] <= x <= Sqrt[5] && (y == -Sqrt[5 - x ] || y == Sqrt[5 - x ])\\n\\n\\ndata: \\n  got:              (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)\\n  expect:           (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)\\n  expect_evaluated: (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)",
                    "expected": "(x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)"
                }
            },
            {
                "title": "2.00006 - 2.00005 == 0.00001    ➡️     False",
                "fullTitle": "2.00006 - 2.00005 == 0.00001    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0ef8aaf6-1ad1-4def-806c-039bed83f915",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# Equality for machine-precision approximate numbers can be subtle: \\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "InputForm[2.00006 - 2.00005]    ➡️     0.000010000000000065512",
                "fullTitle": "InputForm[2.00006 - 2.00005]    ➡️     0.000010000000000065512",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f2950541-71b4-4509-bb64-90bc95b09c5c",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": true,
                "isHook": false,
                "context": "\"# The extra digits disrupt equality:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "2.00006`16. - 2.00005000000000000000000000001`16. == 1.`16.*^-5    ➡️     True",
                "fullTitle": "2.00006`16. - 2.00005000000000000000000000001`16. == 1.`16.*^-5    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bc587401-7d24-404f-bd46-fa1afd2147f0",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# Arbitrary-precision approximate numbers do not have this problem:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Precision[2.00006`16. - 2.00005000000000000000000000001`16.]    ➡️     10.3979",
                "fullTitle": "Precision[2.00006`16. - 2.00005000000000000000000000001`16.]    ➡️     10.3979",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0d15e6be-42d3-4f48-8526-41d40745af47",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# Thanks to automatic precision tracking RefLink[Equal,paclet:ref/Equal] knows to look only at the first ten digits:\\n\\n\\ndata: \\n  got:              10.3979\\n  expect:           10.3979\\n  expect_evaluated: 10.3979\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 10.3979,
                    "expected": 10.3979
                }
            },
            {
                "title": "2.6 - 2.5 == 0.1    ➡️     True",
                "fullTitle": "2.6 - 2.5 == 0.1    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d285e4e9-691f-4a01-abaa-7a740806fc55",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# In this case, the equality test for machine numbers succeeds:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "InputForm[2.6 - 2.5]    ➡️     0.10000000000000009",
                "fullTitle": "InputForm[2.6 - 2.5]    ➡️     0.10000000000000009",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b84efa0d-c2c5-4b26-803b-c3c7a309b113",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": true,
                "isHook": false,
                "context": "\"# The extra digits in this case are ignored by RefLink[Equal,paclet:ref/Equal]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{x, y, z} = {1. - 1.*^-14, 1., 1. + 1.*^-14} ;; x == y    ➡️     True",
                "fullTitle": "{x, y, z} = {1. - 1.*^-14, 1., 1. + 1.*^-14} ;; x == y    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3433ab3a-5f76-4074-8cb8-83b0c1e7dc69",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": true,
                "isHook": false,
                "context": "\"# Equality may not be transitive for approximate numbers:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "y == z    ➡️     True",
                "fullTitle": "y == z    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bec93b87-b7bb-4642-9511-189f197824de",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x == z    ➡️     False",
                "fullTitle": "x == z    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9d8531ce-a6e6-4089-acc9-4103b597d108",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "FullSimplify[(p || q) == (q || p)]    ➡️     (p || q) == (q || p)",
                "fullTitle": "FullSimplify[(p || q) == (q || p)]    ➡️     (p || q) == (q || p)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "44d4b081-f259-4127-be95-fb6358c3384d",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Equal,paclet:ref/Equal] is not treated as the Boolean equivalence operator:\\n\\n\\ndata: \\n  got:              (p || q) == (q || p)\\n  expect:           (p || q) == (q || p)\\n  expect_evaluated: (p || q) == (q || p)\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(p || q) == (q || p)",
                    "expected": "(p || q) == (q || p)"
                }
            },
            {
                "title": "FullSimplify[Equivalent[p || q, q || p]]    ➡️     True",
                "fullTitle": "FullSimplify[Equivalent[p || q, q || p]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bf7585a2-f525-4a76-8380-8b233c86ea15",
                "parentUUID": "c12ec388-11be-4265-add4-9b12bcc53994",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Equivalent,paclet:ref/Equivalent] instead:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "d0407d61-b872-44fc-ac43-c3ffc2477242",
            "874b37d1-befc-4f50-b4a3-5e19709e2850",
            "01221eb6-1212-4c11-abdc-31338e326397",
            "f4dff4bd-e642-4dbb-909e-6ac3742f9e99",
            "6c369d56-f9f9-41f1-8fbc-e353c956838f",
            "89ce6a2a-247e-4617-82e3-67eb5d927114",
            "cbe21d64-bb5b-4db8-92df-a9bf7029040b",
            "f9f7fb6a-fed4-4461-976d-2ce8b52ecdb4",
            "3fdafcfc-c599-4460-b375-276a9b877ff5",
            "546f9a20-9f29-4dcf-9a83-12f02b4cbc22",
            "21f92fc9-20c2-47ab-acf3-a0063bca8e98",
            "fa7ed065-8213-4a97-85fe-f4d6a61f3ea8",
            "b85db981-e271-4a73-a3f4-96939edcfd5f",
            "2cc2789d-43d0-4b1c-b2af-0af13de0fd33",
            "9a3cd271-a369-44a0-823b-9f8294d78c1f",
            "5736a848-68e2-4823-ac22-533a11aed805",
            "fdea81a1-621c-445a-9189-c6d794b0f6e7",
            "a67e3702-29f2-40aa-84f0-75b458d65ccb",
            "6eb66e2f-3a43-4f0f-a749-509cbf876dcd",
            "e6dbeaf2-8abb-416d-826f-ec50ad9c6c0d",
            "135f3c92-8e8b-4908-972d-8d765c9b2489",
            "fb00573c-e569-4f71-9d1c-f56839175bd9",
            "9fbc6d8c-5e12-40f0-bc13-17c3c145f489",
            "9b658f00-2b80-44ff-94e4-c79e900032e1",
            "f560397c-7371-4718-acd1-ff7cfcd6a516",
            "9a642361-c52a-4fb9-bef7-33db42949d83",
            "8c3514fb-f3e5-4100-913c-bbb696af2d0e",
            "3f90ab2a-1175-473c-8ad8-316ddc241496",
            "8cf0a795-328f-4f0a-b2f5-480871cb2e24",
            "11bc48d4-ad69-49df-bf81-d289fbb78cc1",
            "eba54f0d-a359-43f7-9a80-a044db2009a9",
            "c61ead9e-6513-4c26-9665-15ca4fdb1bc1",
            "e08b082c-8f1b-49db-8216-100565290ba3",
            "79f14efa-6847-419a-868c-f9693f9b4122",
            "87b332bc-f57f-47f9-9985-0892265df1f4",
            "014c7893-be2d-4ea9-a7bc-b68761f942ba",
            "80108c14-e738-4634-a7ed-33681cfebd03",
            "a6db6a09-e24c-4215-9c93-3036896779ff",
            "997e8c43-6fa5-4c17-82d2-678dc9b15c3b",
            "9e878b34-fda3-4301-a81b-c9dab784170d",
            "0ef8aaf6-1ad1-4def-806c-039bed83f915",
            "f2950541-71b4-4509-bb64-90bc95b09c5c",
            "bc587401-7d24-404f-bd46-fa1afd2147f0",
            "0d15e6be-42d3-4f48-8526-41d40745af47",
            "d285e4e9-691f-4a01-abaa-7a740806fc55",
            "b84efa0d-c2c5-4b26-803b-c3c7a309b113",
            "3433ab3a-5f76-4074-8cb8-83b0c1e7dc69",
            "bec93b87-b7bb-4642-9511-189f197824de",
            "9d8531ce-a6e6-4089-acc9-4103b597d108",
            "44d4b081-f259-4127-be95-fb6358c3384d",
            "bf7585a2-f525-4a76-8380-8b233c86ea15"
        ],
        "failures": [],
        "skipped": [
            "21f92fc9-20c2-47ab-acf3-a0063bca8e98",
            "b85db981-e271-4a73-a3f4-96939edcfd5f",
            "fdea81a1-621c-445a-9189-c6d794b0f6e7",
            "e6dbeaf2-8abb-416d-826f-ec50ad9c6c0d",
            "8cf0a795-328f-4f0a-b2f5-480871cb2e24",
            "80108c14-e738-4634-a7ed-33681cfebd03",
            "a6db6a09-e24c-4215-9c93-3036896779ff",
            "f2950541-71b4-4509-bb64-90bc95b09c5c",
            "b84efa0d-c2c5-4b26-803b-c3c7a309b113",
            "3433ab3a-5f76-4074-8cb8-83b0c1e7dc69",
            "bec93b87-b7bb-4642-9511-189f197824de",
            "9d8531ce-a6e6-4089-acc9-4103b597d108"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "c12ec388-11be-4265-add4-9b12bcc53994",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
