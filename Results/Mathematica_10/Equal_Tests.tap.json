{
    "stats": {
        "suites": 0,
        "tests": 51,
        "passes": 51,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T12:20:21.713Z",
        "end": "2018-06-03T12:20:21.714Z",
        "duration": 0,
        "testsRegistered": 51,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "2 + 2 == 4    ➡️     True",
                "fullTitle": "2 + 2 == 4    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "162e0631-79b4-489e-8f78-a67de62e84a0",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/Equal_Tests.m\\n#! TextForm[ColonForm[MessageName[PossibleZeroQ, ztest1], StringForm[Unable to decide whether numeric quantity `1` is equal to zero. Assuming it is., Short[HoldForm[Log[Sqrt[2] + Sqrt[3]] - Log[5 + 2*Sqrt[6]]/2], 3]]]]\\n#! TextForm[ColonForm[MessageName[PossibleZeroQ, ztest1], StringForm[Unable to decide whether numeric quantity `1` is equal to zero. Assuming it is., Short[HoldForm[1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Log[Sqrt[2] + Sqrt[3]] - Log[5 + 2*Sqrt[6]]/2], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: Equal_Tests\\n# Test equality:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x^2 == 1 + x    ➡️     x^2 == 1 + x",
                "fullTitle": "x^2 == 1 + x    ➡️     x^2 == 1 + x",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d773cfbd-d41e-48fe-84bc-b1175f783a39",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# Represent an equation:\\n\\n\\ndata: \\n  got:              x^2 == 1 + x\\n  expect:           x^2 == 1 + x\\n  expect_evaluated: x^2 == 1 + x\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x^2 == 1 + x",
                    "expected": "x^2 == 1 + x"
                }
            },
            {
                "title": "Solve[%, x]    ➡️     {{x -> (1/2)*(1 - Sqrt[5])}, {x -> (1/2)*(1 + Sqrt[5])}}",
                "fullTitle": "Solve[%, x]    ➡️     {{x -> (1/2)*(1 - Sqrt[5])}, {x -> (1/2)*(1 + Sqrt[5])}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "14d30fa7-35b0-49f0-9aed-750745137e32",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "3/2 == 5/3    ➡️     False",
                "fullTitle": "3/2 == 5/3    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "205b448d-31b5-4ded-9493-21e398debda2",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test equality of numbers:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "1.`18.06179973983887 == 1.00000000000000011015494072453`18.06179973983887    ➡️     True",
                "fullTitle": "1.`18.06179973983887 == 1.00000000000000011015494072453`18.06179973983887    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d593b545-283a-4465-83be-b561450f7d7f",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# Approximate numbers that differ in their last seven binary digits are considered equal:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "N[Pi, 20] == Pi    ➡️     True",
                "fullTitle": "N[Pi, 20] == Pi    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "41faf27e-343c-4da9-baa6-8d863c2ed6ed",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare an exact numeric expression and an approximate number:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "N[Pi, 20] == Pi*(1 + 2^8/10^20)    ➡️     False",
                "fullTitle": "N[Pi, 20] == Pi*(1 + 2^8/10^20)    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fd54880c-af78-441b-8ac4-ca103768966d",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Pi^E == E^Pi    ➡️     False",
                "fullTitle": "Pi^E == E^Pi    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "41b31c84-7820-4c36-9fd5-4eec00c0381f",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare two exact numeric expressions; a numeric test may suffice to disprove equality:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Sqrt[2] + Sqrt[3] == Sqrt[5 + 2*Sqrt[6]]    ➡️     True",
                "fullTitle": "Sqrt[2] + Sqrt[3] == Sqrt[5 + 2*Sqrt[6]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9b3195f5-e5be-46d1-a688-7678008b0a44",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# Proving equality requires symbolic methods:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4]    ➡️     Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 + #1^4 & , 4]",
                "fullTitle": "Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4]    ➡️     Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 + #1^4 & , 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "62446ff9-e5df-4a5f-848e-c061fa211980",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# Symbolic methods used by RefLink[Equal,paclet:ref/Equal] are insufficient to prove this equality:\\n\\n\\ndata: \\n  got:              Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 +\\n  expect:           Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 +\\n  expect_evaluated: Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 +\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 +",
                    "expected": "Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 +"
                }
            },
            {
                "title": "RootReduce[%]    ➡️     True",
                "fullTitle": "RootReduce[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "db81a498-3bfe-49fe-9e36-c96b9aa6c87f",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[RootReduce,paclet:ref/RootReduce] to decide whether two algebraic numbers are equal:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)    ➡️     Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 + #1^4 & , 4]",
                "fullTitle": "Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)    ➡️     Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 + #1^4 & , 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b3fe0f55-7909-4e21-9fd3-5b13c42612d5",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numeric methods used by RefLink[Equal,paclet:ref/Equal] do not use sufficient precision to disprove this equality:\\n\\n\\ndata: \\n  got:              Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\\n  expect:           Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\\n  expect_evaluated: Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +",
                    "expected": "Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +"
                }
            },
            {
                "title": "RootReduce[%]    ➡️     False",
                "fullTitle": "RootReduce[%]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "682626d3-8d46-40f0-a2ab-e6824d24e156",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[RootReduce,paclet:ref/RootReduce] proves that the two algebraic numbers are not equal:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Block[{$MaxExtraPrecision = 100}, Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)]    ➡️     False",
                "fullTitle": "Block[{$MaxExtraPrecision = 100}, Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "dce76837-9aab-4500-8ee9-c0dbfb9fd3cd",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# Increasing RefLink[$MaxExtraPrecision,paclet:ref/$MaxExtraPrecision] may also allow you to disprove equality:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "x == x    ➡️     True",
                "fullTitle": "x == x    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6563567a-16bb-4828-ac83-f41879fec9e8",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# A symbolic identity:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "(x + 1)^2 == x^2 + 2*x + 1    ➡️     (1 + x)^2 == 1 + 2*x + x^2",
                "fullTitle": "(x + 1)^2 == x^2 + 2*x + 1    ➡️     (1 + x)^2 == 1 + 2*x + x^2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9bd29dce-2195-422c-ba6e-2a5173db89b1",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Equal,paclet:ref/Equal] does not automatically prove this identity:\\n\\n\\ndata: \\n  got:              (1 + x)^2 == 1 + 2*x + x^2\\n  expect:           (1 + x)^2 == 1 + 2*x + x^2\\n  expect_evaluated: (1 + x)^2 == 1 + 2*x + x^2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(1 + x)^2 == 1 + 2*x + x^2",
                    "expected": "(1 + x)^2 == 1 + 2*x + x^2"
                }
            },
            {
                "title": "Expand[%]    ➡️     True",
                "fullTitle": "Expand[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "824749f0-aa51-419a-abc4-047da72725bf",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[Expand,paclet:ref/Expand] to prove it:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "a*x == b    ➡️     a*x == b",
                "fullTitle": "a*x == b    ➡️     a*x == b",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c1f2d78d-722f-43fe-a5ac-8e9dd98ae964",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# A symbolic equation:\\n\\n\\ndata: \\n  got:              a*x == b\\n  expect:           a*x == b\\n  expect_evaluated: a*x == b\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a*x == b",
                    "expected": "a*x == b"
                }
            },
            {
                "title": "Solve[%, x]    ➡️     {{x -> b/a}}",
                "fullTitle": "Solve[%, x]    ➡️     {{x -> b/a}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1afb7f50-59d8-43e3-b2a4-a2430896efc1",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[Solve,paclet:ref/Solve] to solve the equation:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[%%, x]    ➡️     (b == 0 && a == 0) || (a != 0 && x == b/a)",
                "fullTitle": "Reduce[%%, x]    ➡️     (b == 0 && a == 0) || (a != 0 && x == b/a)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "128cecd7-461c-4401-9697-aa6d946892a4",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Reduce,paclet:ref/Reduce] gives all solutions, including the ones that require nongeneric values of parameters:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "3 == 3. == 3.    ➡️     True",
                "fullTitle": "3 == 3. == 3.    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6ca6f0d2-613a-4a9a-8264-a711927caff5",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare more than two expressions:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x + y + z == x^2 - y^2 - z^2 == x*y*z == 3    ➡️     x + y + z == x^2 - y^2 - z^2 == x*y*z == 3",
                "fullTitle": "x + y + z == x^2 - y^2 - z^2 == x*y*z == 3    ➡️     x + y + z == x^2 - y^2 - z^2 == x*y*z == 3",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3271aeb8-404a-4a55-8b4a-fa4769dc0c15",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              x + y + z == x^2 - y^2 - z^2 == x*y*z == 3\\n  expect:           x + y + z == x^2 - y^2 - z^2 == x*y*z == 3\\n  expect_evaluated: x + y + z == x^2 - y^2 - z^2 == x*y*z == 3\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x + y + z == x^2 - y^2 - z^2 == x*y*z == 3",
                    "expected": "x + y + z == x^2 - y^2 - z^2 == x*y*z == 3"
                }
            },
            {
                "title": "Reduce[%, {x, y, z}]    ➡️     x == 1 && (y == (1/2)*(2 - 2*I*Sqrt[2]) || y == (1/2)*(2 + 2*I*Sqrt[2])) && z == 2 - y",
                "fullTitle": "Reduce[%, {x, y, z}]    ➡️     x == 1 && (y == (1/2)*(2 - 2*I*Sqrt[2]) || y == (1/2)*(2 + 2*I*Sqrt[2])) && z == 2 - y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "918fed1d-82af-4017-a0c2-419e16336493",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{1, 2} == {1, 2}    ➡️     True",
                "fullTitle": "{1, 2} == {1, 2}    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2b5bfc07-32b5-47e4-b73e-939f5fc02c3e",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare lists:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "{a, b, c} == {d, e}    ➡️     False",
                "fullTitle": "{a, b, c} == {d, e}    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "dc0556b0-3c36-4d43-ac5f-0bfe2d19c329",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "\"abc\" == \"ABC\"    ➡️     False",
                "fullTitle": "\"abc\" == \"ABC\"    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "03cd66f5-6762-4758-8a4f-19502726dc94",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare strings:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "!x == y    ➡️     x != y",
                "fullTitle": "!x == y    ➡️     x != y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "db355f71-9e18-4d1a-bee8-9282c858d46b",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of two-argument RefLink[Equal,paclet:ref/Equal] is RefLink[Unequal,paclet:ref/Unequal]:\\n\\n\\ndata: \\n  got:              x != y\\n  expect:           x != y\\n  expect_evaluated: x != y\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x != y",
                    "expected": "x != y"
                }
            },
            {
                "title": "!x == y == z    ➡️      !x == y == z",
                "fullTitle": "!x == y == z    ➡️      !x == y == z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "13521daa-1e17-4f99-ae8a-f5dc6080e280",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of three-argument RefLink[Equal,paclet:ref/Equal] does not simplify automatically:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[%]    ➡️     y != x || z != x",
                "fullTitle": "LogicalExpand[%]    ➡️     y != x || z != x",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fbcc4d5f-10a4-4b4e-900d-dbad563c0ca1",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[LogicalExpand,paclet:ref/LogicalExpand] to express it in terms of two-argument RefLink[Unequal,paclet:ref/Unequal]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[x != y != z]    ➡️     y != x && z != x && z != y",
                "fullTitle": "LogicalExpand[x != y != z]    ➡️     y != x && z != x && z != y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "052df38e-8d72-4ade-a780-811ec17ba029",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of three-argument RefLink[Equal,paclet:ref/Equal] is not equivalent to three-argument RefLink[Unequal,paclet:ref/Unequal]:\\n\\n\\ndata: \\n  got:              y != x && z != x && z != y\\n  expect:           y != x && z != x && z != y\\n  expect_evaluated: y != x && z != x && z != y\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "y != x && z != x && z != y",
                    "expected": "y != x && z != x && z != y"
                }
            },
            {
                "title": "{x == x, x == y, Sqrt[2] + Sqrt[3] == Sqrt[5 + 2*Sqrt[6]], Pi == N[Pi]}    ➡️     {True, x == y, True, True}",
                "fullTitle": "{x == x, x == y, Sqrt[2] + Sqrt[3] == Sqrt[5 + 2*Sqrt[6]], Pi == N[Pi]}    ➡️     {True, x == y, True, True}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2f5ddd28-9577-4bc3-9397-af437ea1df80",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Equal,paclet:ref/Equal] tests mathematical equality of objects represented by expressions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{x === x, x === y, Sqrt[2] + Sqrt[3] === Sqrt[5 + 2*Sqrt[6]], Pi === N[Pi]}    ➡️     {True, False, False, False}",
                "fullTitle": "{x === x, x === y, Sqrt[2] + Sqrt[3] === Sqrt[5 + 2*Sqrt[6]], Pi === N[Pi]}    ➡️     {True, False, False, False}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "30d2b80b-dbba-43bc-a089-f834e5116c10",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[SameQ,paclet:ref/SameQ] tests syntactic equality of expressions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "a = Log[Sqrt[2] + Sqrt[3]]; b = Log[5 + 2*Sqrt[6]]/2; a == b    ➡️     Log[Sqrt[2] + Sqrt[3]] == (1/2)*Log[5 + 2*Sqrt[6]]",
                "fullTitle": "a = Log[Sqrt[2] + Sqrt[3]]; b = Log[5 + 2*Sqrt[6]]/2; a == b    ➡️     Log[Sqrt[2] + Sqrt[3]] == (1/2)*Log[5 + 2*Sqrt[6]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7a9fa021-8f3c-431b-b202-ea92afc705bf",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# When RefLink[Equal,paclet:ref/Equal] cannot decide whether two numeric expressions are equal it returns unchanged:\\n\\n\\ndata: \\n  got:              Log[Sqrt[2] + Sqrt[3]] == Log[5 + 2*Sqrt[6]]/2\\n  expect:           Log[Sqrt[2] + Sqrt[3]] == (1/2)*Log[5 + 2*Sqrt[6]]\\n  expect_evaluated: Log[Sqrt[2] + Sqrt[3]] == Log[5 + 2*Sqrt[6]]/2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Log[Sqrt[2] + Sqrt[3]] == Log[5 + 2*Sqrt[6]]/2",
                    "expected": "Log[Sqrt[2] + Sqrt[3]] == (1/2)*Log[5 + 2*Sqrt[6]]"
                }
            },
            {
                "title": "FullSimplify[a == b]    ➡️     True",
                "fullTitle": "FullSimplify[a == b]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fc0726c7-7926-4675-a9d0-eb87fb263ba8",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[FullSimplify,paclet:ref/FullSimplify] uses exact symbolic transformations to prove the equality:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[a - b]    ➡️     True",
                "fullTitle": "PossibleZeroQ[a - b]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1c7a979c-fdc3-4e5b-aeba-901efc86cee5",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] uses numeric and symbolic heuristics to decide whether an expression is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[a - b + 10^(-100)]    ➡️     True",
                "fullTitle": "PossibleZeroQ[a - b + 10^(-100)]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "10d42c95-74a6-4712-a8c8-f9bbc3d56f28",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numeric methods used by RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] may incorrectly decide that a number is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Solve[a*x^2 + b*x + c == 0, x]    ➡️     {{x -> (-b - Sqrt[b^2 - 4*a*c])/(2*a)}, {x -> (-b + Sqrt[b^2 - 4*a*c])/(2*a)}}",
                "fullTitle": "Solve[a*x^2 + b*x + c == 0, x]    ➡️     {{x -> (-b - Sqrt[b^2 - 4*a*c])/(2*a)}, {x -> (-b + Sqrt[b^2 - 4*a*c])/(2*a)}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "df30c0fe-5647-4456-aadc-a0c87c6120dd",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[Solve,paclet:ref/Solve] to solve equations for generic values of parameters:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[a*x^2 + b*x + c == 0, x]    ➡️     (a != 0 && (x == (-b - Sqrt[b^2 - 4*a*c])/(2*a) || x == (-b + Sqrt[b^2 - 4*a*c])/(2*a))) || (a == 0 && b != 0 && x == -(c/b)) || (c == 0 && b == 0 && a == 0)",
                "fullTitle": "Reduce[a*x^2 + b*x + c == 0, x]    ➡️     (a != 0 && (x == (-b - Sqrt[b^2 - 4*a*c])/(2*a) || x == (-b + Sqrt[b^2 - 4*a*c])/(2*a))) || (a == 0 && b != 0 && x == -(c/b)) || (c == 0 && b == 0 && a == 0)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "45834aeb-8aae-44c4-b295-d82b60505858",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Reduce,paclet:ref/Reduce] gives all solutions, including those with nongeneric parameter values:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[x^2 + y^2 == 5, {x, y}, Reals]    ➡️     -Sqrt[5] <= x <= Sqrt[5] && (y == -Sqrt[5 - x^2] || y == Sqrt[5 - x^2])",
                "fullTitle": "Reduce[x^2 + y^2 == 5, {x, y}, Reals]    ➡️     -Sqrt[5] <= x <= Sqrt[5] && (y == -Sqrt[5 - x^2] || y == Sqrt[5 - x^2])",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a1b6f56e-c64c-4387-b9a3-ed807697eb18",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[Reduce,paclet:ref/Reduce] to solve equations over specified domains:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[x^2 + y^2 == 5, {x, y}, Integers]    ➡️     (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)",
                "fullTitle": "Reduce[x^2 + y^2 == 5, {x, y}, Integers]    ➡️     (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b852e8b6-ba59-4469-bb5b-10358c54ee5b",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)\\n  expect:           (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)\\n  expect_evaluated: (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)",
                    "expected": "(x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)"
                }
            },
            {
                "title": "2.00006 - 2.00005 == 0.00001    ➡️     False",
                "fullTitle": "2.00006 - 2.00005 == 0.00001    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "497d2ee4-a5c9-4d45-a590-7148f2dc7167",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# Equality for machine-precision approximate numbers can be subtle: \\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "InputForm[2.00006 - 2.00005]    ➡️     0.000010000000000065512",
                "fullTitle": "InputForm[2.00006 - 2.00005]    ➡️     0.000010000000000065512",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "22bc9863-82a6-42e0-a3a2-4b4bddb0dded",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": true,
                "isHook": false,
                "context": "\"# The extra digits disrupt equality:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "2.00006`16. - 2.00005000000000000000000000001`16. == 1.`16.*^-5    ➡️     True",
                "fullTitle": "2.00006`16. - 2.00005000000000000000000000001`16. == 1.`16.*^-5    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8c3b65c4-33f1-4541-bccd-633835f0e8e9",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# Arbitrary-precision approximate numbers do not have this problem:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Precision[2.00006`16. - 2.00005000000000000000000000001`16.]    ➡️     10.3979",
                "fullTitle": "Precision[2.00006`16. - 2.00005000000000000000000000001`16.]    ➡️     10.3979",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "95afd629-3fed-46b7-a25b-e7e453d33f65",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": true,
                "isHook": false,
                "context": "\"# Thanks to automatic precision tracking RefLink[Equal,paclet:ref/Equal] knows to look only at the first ten digits:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "2.6 - 2.5 == 0.1    ➡️     True",
                "fullTitle": "2.6 - 2.5 == 0.1    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0740855b-3af6-4d1a-aa62-b4f60d0c1736",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# In this case, the equality test for machine numbers succeeds:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "InputForm[2.6 - 2.5]    ➡️     0.10000000000000009",
                "fullTitle": "InputForm[2.6 - 2.5]    ➡️     0.10000000000000009",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1361cdb7-6dc0-4753-9103-e4993697f84a",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": true,
                "isHook": false,
                "context": "\"# The extra digits in this case are ignored by RefLink[Equal,paclet:ref/Equal]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x == y    ➡️     True",
                "fullTitle": "x == y    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1d0668a6-78cc-48d7-bf32-b4f843a83f79",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "y == z    ➡️     True",
                "fullTitle": "y == z    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "66bb7877-09c4-45ab-836d-af0654326527",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x == z    ➡️     False",
                "fullTitle": "x == z    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cf5c98d2-7edf-46ed-b845-651df402af7d",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "FullSimplify[(p || q) == (q || p)]    ➡️     (p || q) == (q || p)",
                "fullTitle": "FullSimplify[(p || q) == (q || p)]    ➡️     (p || q) == (q || p)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bc813d91-d3cd-43b2-b4d8-8e37775286cc",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Equal,paclet:ref/Equal] is not treated as the Boolean equivalence operator:\\n\\n\\ndata: \\n  got:              (p || q) == (q || p)\\n  expect:           (p || q) == (q || p)\\n  expect_evaluated: (p || q) == (q || p)\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(p || q) == (q || p)",
                    "expected": "(p || q) == (q || p)"
                }
            },
            {
                "title": "FullSimplify[Equivalent[p || q, q || p]]    ➡️     True",
                "fullTitle": "FullSimplify[Equivalent[p || q, q || p]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d54401ce-3f81-4b6c-9995-bbc60767a279",
                "parentUUID": "f6258352-24ad-4f26-ad40-0284f1383fab",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Equivalent,paclet:ref/Equivalent] instead:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "162e0631-79b4-489e-8f78-a67de62e84a0",
            "d773cfbd-d41e-48fe-84bc-b1175f783a39",
            "14d30fa7-35b0-49f0-9aed-750745137e32",
            "205b448d-31b5-4ded-9493-21e398debda2",
            "d593b545-283a-4465-83be-b561450f7d7f",
            "41faf27e-343c-4da9-baa6-8d863c2ed6ed",
            "fd54880c-af78-441b-8ac4-ca103768966d",
            "41b31c84-7820-4c36-9fd5-4eec00c0381f",
            "9b3195f5-e5be-46d1-a688-7678008b0a44",
            "62446ff9-e5df-4a5f-848e-c061fa211980",
            "db81a498-3bfe-49fe-9e36-c96b9aa6c87f",
            "b3fe0f55-7909-4e21-9fd3-5b13c42612d5",
            "682626d3-8d46-40f0-a2ab-e6824d24e156",
            "dce76837-9aab-4500-8ee9-c0dbfb9fd3cd",
            "6563567a-16bb-4828-ac83-f41879fec9e8",
            "9bd29dce-2195-422c-ba6e-2a5173db89b1",
            "824749f0-aa51-419a-abc4-047da72725bf",
            "c1f2d78d-722f-43fe-a5ac-8e9dd98ae964",
            "1afb7f50-59d8-43e3-b2a4-a2430896efc1",
            "128cecd7-461c-4401-9697-aa6d946892a4",
            "6ca6f0d2-613a-4a9a-8264-a711927caff5",
            "3271aeb8-404a-4a55-8b4a-fa4769dc0c15",
            "918fed1d-82af-4017-a0c2-419e16336493",
            "2b5bfc07-32b5-47e4-b73e-939f5fc02c3e",
            "dc0556b0-3c36-4d43-ac5f-0bfe2d19c329",
            "03cd66f5-6762-4758-8a4f-19502726dc94",
            "db355f71-9e18-4d1a-bee8-9282c858d46b",
            "13521daa-1e17-4f99-ae8a-f5dc6080e280",
            "fbcc4d5f-10a4-4b4e-900d-dbad563c0ca1",
            "052df38e-8d72-4ade-a780-811ec17ba029",
            "2f5ddd28-9577-4bc3-9397-af437ea1df80",
            "30d2b80b-dbba-43bc-a089-f834e5116c10",
            "7a9fa021-8f3c-431b-b202-ea92afc705bf",
            "fc0726c7-7926-4675-a9d0-eb87fb263ba8",
            "1c7a979c-fdc3-4e5b-aeba-901efc86cee5",
            "10d42c95-74a6-4712-a8c8-f9bbc3d56f28",
            "df30c0fe-5647-4456-aadc-a0c87c6120dd",
            "45834aeb-8aae-44c4-b295-d82b60505858",
            "a1b6f56e-c64c-4387-b9a3-ed807697eb18",
            "b852e8b6-ba59-4469-bb5b-10358c54ee5b",
            "497d2ee4-a5c9-4d45-a590-7148f2dc7167",
            "22bc9863-82a6-42e0-a3a2-4b4bddb0dded",
            "8c3b65c4-33f1-4541-bccd-633835f0e8e9",
            "95afd629-3fed-46b7-a25b-e7e453d33f65",
            "0740855b-3af6-4d1a-aa62-b4f60d0c1736",
            "1361cdb7-6dc0-4753-9103-e4993697f84a",
            "1d0668a6-78cc-48d7-bf32-b4f843a83f79",
            "66bb7877-09c4-45ab-836d-af0654326527",
            "cf5c98d2-7edf-46ed-b845-651df402af7d",
            "bc813d91-d3cd-43b2-b4d8-8e37775286cc",
            "d54401ce-3f81-4b6c-9995-bbc60767a279"
        ],
        "failures": [],
        "skipped": [
            "14d30fa7-35b0-49f0-9aed-750745137e32",
            "db81a498-3bfe-49fe-9e36-c96b9aa6c87f",
            "682626d3-8d46-40f0-a2ab-e6824d24e156",
            "824749f0-aa51-419a-abc4-047da72725bf",
            "1afb7f50-59d8-43e3-b2a4-a2430896efc1",
            "128cecd7-461c-4401-9697-aa6d946892a4",
            "918fed1d-82af-4017-a0c2-419e16336493",
            "fbcc4d5f-10a4-4b4e-900d-dbad563c0ca1",
            "df30c0fe-5647-4456-aadc-a0c87c6120dd",
            "45834aeb-8aae-44c4-b295-d82b60505858",
            "a1b6f56e-c64c-4387-b9a3-ed807697eb18",
            "22bc9863-82a6-42e0-a3a2-4b4bddb0dded",
            "95afd629-3fed-46b7-a25b-e7e453d33f65",
            "1361cdb7-6dc0-4753-9103-e4993697f84a",
            "1d0668a6-78cc-48d7-bf32-b4f843a83f79",
            "66bb7877-09c4-45ab-836d-af0654326527",
            "cf5c98d2-7edf-46ed-b845-651df402af7d"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "f6258352-24ad-4f26-ad40-0284f1383fab",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
