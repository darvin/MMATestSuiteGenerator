{
    "stats": {
        "suites": 0,
        "tests": 51,
        "passes": 51,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-02T19:34:58.764Z",
        "end": "2018-06-02T19:34:58.764Z",
        "duration": 0,
        "testsRegistered": 51,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "2 + 2 == 4    ➡️     True",
                "fullTitle": "2 + 2 == 4    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "38cd8c10-e280-418c-b162-6fff77bbffb5",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# SYSTEM: Mathematica_10\\n# TEST: Equal_Tests\\n# OUTPUT: output/Results/Mathematica_10/Equal_Tests.json\\n# Test equality:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x^2 == 1 + x    ➡️     x^2 == 1 + x",
                "fullTitle": "x^2 == 1 + x    ➡️     x^2 == 1 + x",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3bcdb2ae-291b-4878-afce-a4c135cc9eb5",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# Represent an equation:\\n\\n\\ndata: \\n  got:              x^2 == 1 + x\\n  expect:           x^2 == 1 + x\\n  expect_evaluated: x^2 == 1 + x\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x^2 == 1 + x",
                    "expected": "x^2 == 1 + x"
                }
            },
            {
                "title": "Solve[%, x]    ➡️     {{x -> (1/2)*(1 - Sqrt[5])}, {x -> (1/2)*(1 + Sqrt[5])}}",
                "fullTitle": "Solve[%, x]    ➡️     {{x -> (1/2)*(1 - Sqrt[5])}, {x -> (1/2)*(1 + Sqrt[5])}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8ce35fed-7cfb-4f00-87f0-db4874fdf5fc",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "3/2 == 5/3    ➡️     False",
                "fullTitle": "3/2 == 5/3    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "02b4f50b-9356-4b30-b113-abde96c9567a",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test equality of numbers:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "1.`18.06179973983887 == 1.00000000000000011015494072453`18.06179973983887    ➡️     True",
                "fullTitle": "1.`18.06179973983887 == 1.00000000000000011015494072453`18.06179973983887    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "88848939-4665-42eb-9c50-a35a4d251ef1",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# Approximate numbers that differ in their last seven binary digits are considered equal:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "N[Pi, 20] == Pi    ➡️     True",
                "fullTitle": "N[Pi, 20] == Pi    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9987b3f5-0bf9-4000-b08b-69b7a463972a",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare an exact numeric expression and an approximate number:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "N[Pi, 20] == Pi*(1 + 2^8/10^20)    ➡️     False",
                "fullTitle": "N[Pi, 20] == Pi*(1 + 2^8/10^20)    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5ece3319-d832-4b59-a7c5-da6fd1f429bc",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Pi^E == E^Pi    ➡️     False",
                "fullTitle": "Pi^E == E^Pi    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8fe05977-ea44-4a5b-ab91-53574ce9c733",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare two exact numeric expressions; a numeric test may suffice to disprove equality:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Sqrt[2] + Sqrt[3] == Sqrt[5 + 2*Sqrt[6]]    ➡️     True",
                "fullTitle": "Sqrt[2] + Sqrt[3] == Sqrt[5 + 2*Sqrt[6]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fb2bd2be-2db7-4747-8c92-56d9e9a398d6",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# Proving equality requires symbolic methods:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4]    ➡️     Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 + #1^4 & , 4]",
                "fullTitle": "Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4]    ➡️     Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 + #1^4 & , 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "29324bea-e9d4-47f3-a3f4-a314d9863c34",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# Symbolic methods used by RefLink[Equal,paclet:ref/Equal] are insufficient to prove this equality:\\n\\n\\ndata: \\n  got:              Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 +\\n  expect:           Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 +\\n  expect_evaluated: Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 +\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 +",
                    "expected": "Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 +"
                }
            },
            {
                "title": "RootReduce[%]    ➡️     True",
                "fullTitle": "RootReduce[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5ab6e6c2-7086-4c6e-9ebb-a9b8ca0041e9",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[RootReduce,paclet:ref/RootReduce] to decide whether two algebraic numbers are equal:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)    ➡️     Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 + #1^4 & , 4]",
                "fullTitle": "Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)    ➡️     Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 + #1^4 & , 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8a5eafa7-25a0-4cd2-99bb-d972ec917166",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numeric methods used by RefLink[Equal,paclet:ref/Equal] do not use sufficient precision to disprove this equality:\\n\\n\\ndata: \\n  got:              Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\\n  expect:           Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\\n  expect_evaluated: Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +",
                    "expected": "Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +"
                }
            },
            {
                "title": "RootReduce[%]    ➡️     False",
                "fullTitle": "RootReduce[%]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "81c67e92-691f-4d94-b601-45c3db4df107",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[RootReduce,paclet:ref/RootReduce] proves that the two algebraic numbers are not equal:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Block[{$MaxExtraPrecision = 100}, Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)]    ➡️     False",
                "fullTitle": "Block[{$MaxExtraPrecision = 100}, Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "96a4ff0f-e791-410b-a128-06f86bf8371f",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# Increasing RefLink[$MaxExtraPrecision,paclet:ref/$MaxExtraPrecision] may also allow you to disprove equality:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "x == x    ➡️     True",
                "fullTitle": "x == x    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "df26cfe3-a394-46fb-a38f-e263a7a314c7",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# A symbolic identity:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "(x + 1)^2 == x^2 + 2*x + 1    ➡️     (1 + x)^2 == 1 + 2*x + x^2",
                "fullTitle": "(x + 1)^2 == x^2 + 2*x + 1    ➡️     (1 + x)^2 == 1 + 2*x + x^2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "48c9370d-844a-4efa-9824-1070af55ebe5",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Equal,paclet:ref/Equal] does not automatically prove this identity:\\n\\n\\ndata: \\n  got:              (1 + x)^2 == 1 + 2*x + x^2\\n  expect:           (1 + x)^2 == 1 + 2*x + x^2\\n  expect_evaluated: (1 + x)^2 == 1 + 2*x + x^2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(1 + x)^2 == 1 + 2*x + x^2",
                    "expected": "(1 + x)^2 == 1 + 2*x + x^2"
                }
            },
            {
                "title": "Expand[%]    ➡️     True",
                "fullTitle": "Expand[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4235d0f4-4a34-4cea-8778-a6930be209c8",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[Expand,paclet:ref/Expand] to prove it:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "a*x == b    ➡️     a*x == b",
                "fullTitle": "a*x == b    ➡️     a*x == b",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "895fd659-6d1e-462f-adfb-406a74c293df",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# A symbolic equation:\\n\\n\\ndata: \\n  got:              a*x == b\\n  expect:           a*x == b\\n  expect_evaluated: a*x == b\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a*x == b",
                    "expected": "a*x == b"
                }
            },
            {
                "title": "Solve[%, x]    ➡️     {{x -> b/a}}",
                "fullTitle": "Solve[%, x]    ➡️     {{x -> b/a}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "14a8edae-e9b6-4149-8df6-37a142007853",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[Solve,paclet:ref/Solve] to solve the equation:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[%%, x]    ➡️     (b == 0 && a == 0) || (a != 0 && x == b/a)",
                "fullTitle": "Reduce[%%, x]    ➡️     (b == 0 && a == 0) || (a != 0 && x == b/a)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2d1bb4bd-abbf-4ee5-a719-8307c7a350f3",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Reduce,paclet:ref/Reduce] gives all solutions, including the ones that require nongeneric values of parameters:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "3 == 3. == 3.    ➡️     True",
                "fullTitle": "3 == 3. == 3.    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "228e73b7-bdcf-4613-93f4-58c43c53c481",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare more than two expressions:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x + y + z == x^2 - y^2 - z^2 == x*y*z == 3    ➡️     x + y + z == x^2 - y^2 - z^2 == x*y*z == 3",
                "fullTitle": "x + y + z == x^2 - y^2 - z^2 == x*y*z == 3    ➡️     x + y + z == x^2 - y^2 - z^2 == x*y*z == 3",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1257b385-026c-4bfb-b3d7-550762365d1b",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              x + y + z == x^2 - y^2 - z^2 == x*y*z == 3\\n  expect:           x + y + z == x^2 - y^2 - z^2 == x*y*z == 3\\n  expect_evaluated: x + y + z == x^2 - y^2 - z^2 == x*y*z == 3\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x + y + z == x^2 - y^2 - z^2 == x*y*z == 3",
                    "expected": "x + y + z == x^2 - y^2 - z^2 == x*y*z == 3"
                }
            },
            {
                "title": "Reduce[%, {x, y, z}]    ➡️     x == 1 && (y == (1/2)*(2 - 2*I*Sqrt[2]) || y == (1/2)*(2 + 2*I*Sqrt[2])) && z == 2 - y",
                "fullTitle": "Reduce[%, {x, y, z}]    ➡️     x == 1 && (y == (1/2)*(2 - 2*I*Sqrt[2]) || y == (1/2)*(2 + 2*I*Sqrt[2])) && z == 2 - y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3fcafa36-c129-4261-859e-e72e22baec4c",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{1, 2} == {1, 2}    ➡️     True",
                "fullTitle": "{1, 2} == {1, 2}    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "27d1d91e-f8b6-4878-9ae1-03f8b7c90e6f",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare lists:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "{a, b, c} == {d, e}    ➡️     False",
                "fullTitle": "{a, b, c} == {d, e}    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "64decfa2-2d02-4ddf-89cd-386865c9a7bc",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "\"abc\" == \"ABC\"    ➡️     False",
                "fullTitle": "\"abc\" == \"ABC\"    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8150ab17-aaf0-48a0-a9d3-7d3e4c173edf",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare strings:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "!x == y    ➡️     x != y",
                "fullTitle": "!x == y    ➡️     x != y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f940861a-6b2d-4b64-bbe9-a193b5e3d514",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of two-argument RefLink[Equal,paclet:ref/Equal] is RefLink[Unequal,paclet:ref/Unequal]:\\n\\n\\ndata: \\n  got:              x != y\\n  expect:           x != y\\n  expect_evaluated: x != y\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x != y",
                    "expected": "x != y"
                }
            },
            {
                "title": "!x == y == z    ➡️      !x == y == z",
                "fullTitle": "!x == y == z    ➡️      !x == y == z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ca0ca1b6-dd53-4a8b-b649-a14f1180a23c",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of three-argument RefLink[Equal,paclet:ref/Equal] does not simplify automatically:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[%]    ➡️     y != x || z != x",
                "fullTitle": "LogicalExpand[%]    ➡️     y != x || z != x",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ae4ff920-ecf5-4d7e-96af-96d4a99b82f7",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[LogicalExpand,paclet:ref/LogicalExpand] to express it in terms of two-argument RefLink[Unequal,paclet:ref/Unequal]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[x != y != z]    ➡️     y != x && z != x && z != y",
                "fullTitle": "LogicalExpand[x != y != z]    ➡️     y != x && z != x && z != y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fcd8618c-2abb-452a-8f81-8e9f27cc03ed",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of three-argument RefLink[Equal,paclet:ref/Equal] is not equivalent to three-argument RefLink[Unequal,paclet:ref/Unequal]:\\n\\n\\ndata: \\n  got:              y != x && z != x && z != y\\n  expect:           y != x && z != x && z != y\\n  expect_evaluated: y != x && z != x && z != y\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "y != x && z != x && z != y",
                    "expected": "y != x && z != x && z != y"
                }
            },
            {
                "title": "{x == x, x == y, Sqrt[2] + Sqrt[3] == Sqrt[5 + 2*Sqrt[6]], Pi == N[Pi]}    ➡️     {True, x == y, True, True}",
                "fullTitle": "{x == x, x == y, Sqrt[2] + Sqrt[3] == Sqrt[5 + 2*Sqrt[6]], Pi == N[Pi]}    ➡️     {True, x == y, True, True}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e695882b-75c8-4997-88b5-0b8d6ad49914",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Equal,paclet:ref/Equal] tests mathematical equality of objects represented by expressions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{x === x, x === y, Sqrt[2] + Sqrt[3] === Sqrt[5 + 2*Sqrt[6]], Pi === N[Pi]}    ➡️     {True, False, False, False}",
                "fullTitle": "{x === x, x === y, Sqrt[2] + Sqrt[3] === Sqrt[5 + 2*Sqrt[6]], Pi === N[Pi]}    ➡️     {True, False, False, False}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cb9fdb69-e0a0-436b-af00-e0ccd91726b2",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[SameQ,paclet:ref/SameQ] tests syntactic equality of expressions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "a = Log[Sqrt[2] + Sqrt[3]]; b = Log[5 + 2*Sqrt[6]]/2; a == b    ➡️     Log[Sqrt[2] + Sqrt[3]] == (1/2)*Log[5 + 2*Sqrt[6]]",
                "fullTitle": "a = Log[Sqrt[2] + Sqrt[3]]; b = Log[5 + 2*Sqrt[6]]/2; a == b    ➡️     Log[Sqrt[2] + Sqrt[3]] == (1/2)*Log[5 + 2*Sqrt[6]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3456bcbd-5dec-4bc2-abc5-f4219bd69449",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# When RefLink[Equal,paclet:ref/Equal] cannot decide whether two numeric expressions are equal it returns unchanged:\\n\\n\\ndata: \\n  got:              Log[Sqrt[2] + Sqrt[3]] == Log[5 + 2*Sqrt[6]]/2\\n  expect:           Log[Sqrt[2] + Sqrt[3]] == (1/2)*Log[5 + 2*Sqrt[6]]\\n  expect_evaluated: Log[Sqrt[2] + Sqrt[3]] == Log[5 + 2*Sqrt[6]]/2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Log[Sqrt[2] + Sqrt[3]] == Log[5 + 2*Sqrt[6]]/2",
                    "expected": "Log[Sqrt[2] + Sqrt[3]] == (1/2)*Log[5 + 2*Sqrt[6]]"
                }
            },
            {
                "title": "FullSimplify[a == b]    ➡️     True",
                "fullTitle": "FullSimplify[a == b]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8b600c53-94cf-4b60-bfac-525e992fd36f",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[FullSimplify,paclet:ref/FullSimplify] uses exact symbolic transformations to prove the equality:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[a - b]    ➡️     True",
                "fullTitle": "PossibleZeroQ[a - b]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4a3d4942-8812-436e-95e5-27c9887ff9d3",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] uses numeric and symbolic heuristics to decide whether an expression is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[a - b + 10^(-100)]    ➡️     True",
                "fullTitle": "PossibleZeroQ[a - b + 10^(-100)]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "be353a76-52f9-47f3-98a7-bcf32727dab7",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numeric methods used by RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] may incorrectly decide that a number is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Solve[a*x^2 + b*x + c == 0, x]    ➡️     {{x -> (-b - Sqrt[b^2 - 4*a*c])/(2*a)}, {x -> (-b + Sqrt[b^2 - 4*a*c])/(2*a)}}",
                "fullTitle": "Solve[a*x^2 + b*x + c == 0, x]    ➡️     {{x -> (-b - Sqrt[b^2 - 4*a*c])/(2*a)}, {x -> (-b + Sqrt[b^2 - 4*a*c])/(2*a)}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cf3bfc0a-8b50-4446-886e-cf7863814e12",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[Solve,paclet:ref/Solve] to solve equations for generic values of parameters:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[a*x^2 + b*x + c == 0, x]    ➡️     (a != 0 && (x == (-b - Sqrt[b^2 - 4*a*c])/(2*a) || x == (-b + Sqrt[b^2 - 4*a*c])/(2*a))) || (a == 0 && b != 0 && x == -(c/b)) || (c == 0 && b == 0 && a == 0)",
                "fullTitle": "Reduce[a*x^2 + b*x + c == 0, x]    ➡️     (a != 0 && (x == (-b - Sqrt[b^2 - 4*a*c])/(2*a) || x == (-b + Sqrt[b^2 - 4*a*c])/(2*a))) || (a == 0 && b != 0 && x == -(c/b)) || (c == 0 && b == 0 && a == 0)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8eacd8ef-4b6b-4695-8a62-a13c87d3aedb",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Reduce,paclet:ref/Reduce] gives all solutions, including those with nongeneric parameter values:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[x^2 + y^2 == 5, {x, y}, Reals]    ➡️     -Sqrt[5] <= x <= Sqrt[5] && (y == -Sqrt[5 - x^2] || y == Sqrt[5 - x^2])",
                "fullTitle": "Reduce[x^2 + y^2 == 5, {x, y}, Reals]    ➡️     -Sqrt[5] <= x <= Sqrt[5] && (y == -Sqrt[5 - x^2] || y == Sqrt[5 - x^2])",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f44b9375-0343-4344-9479-3d9f80a5d77c",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[Reduce,paclet:ref/Reduce] to solve equations over specified domains:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[x^2 + y^2 == 5, {x, y}, Integers]    ➡️     (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)",
                "fullTitle": "Reduce[x^2 + y^2 == 5, {x, y}, Integers]    ➡️     (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5389d493-cc06-47f1-8098-cc2fe5de8ed1",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)\\n  expect:           (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)\\n  expect_evaluated: (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)",
                    "expected": "(x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)"
                }
            },
            {
                "title": "2.00006 - 2.00005 == 0.00001    ➡️     False",
                "fullTitle": "2.00006 - 2.00005 == 0.00001    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "16ec4898-89ea-4c4a-a578-b3b4c199d2c4",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# Equality for machine-precision approximate numbers can be subtle: \\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "InputForm[2.00006 - 2.00005]    ➡️     0.000010000000000065512",
                "fullTitle": "InputForm[2.00006 - 2.00005]    ➡️     0.000010000000000065512",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "50dee0d4-2bab-4fa5-a8d6-dac50383acff",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": true,
                "isHook": false,
                "context": "\"# The extra digits disrupt equality:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "2.00006`16. - 2.00005000000000000000000000001`16. == 1.`16.*^-5    ➡️     True",
                "fullTitle": "2.00006`16. - 2.00005000000000000000000000001`16. == 1.`16.*^-5    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2b80fa3f-bd9f-4d2e-8eb4-4995c2efdfce",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# Arbitrary-precision approximate numbers do not have this problem:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Precision[2.00006`16. - 2.00005000000000000000000000001`16.]    ➡️     10.3979",
                "fullTitle": "Precision[2.00006`16. - 2.00005000000000000000000000001`16.]    ➡️     10.3979",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5981b09e-cea1-4bce-9d90-53964ce5c2bc",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": true,
                "isHook": false,
                "context": "\"# Thanks to automatic precision tracking RefLink[Equal,paclet:ref/Equal] knows to look only at the first ten digits:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "2.6 - 2.5 == 0.1    ➡️     True",
                "fullTitle": "2.6 - 2.5 == 0.1    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c8dd062f-a480-4310-9991-a9bc03a5fc9e",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# In this case, the equality test for machine numbers succeeds:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "InputForm[2.6 - 2.5]    ➡️     0.10000000000000009",
                "fullTitle": "InputForm[2.6 - 2.5]    ➡️     0.10000000000000009",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6a29384f-1958-4cb7-830d-716ffa96deeb",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": true,
                "isHook": false,
                "context": "\"# The extra digits in this case are ignored by RefLink[Equal,paclet:ref/Equal]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x == y    ➡️     True",
                "fullTitle": "x == y    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "906e6d7d-03f5-491c-b8c0-235700e792be",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "y == z    ➡️     True",
                "fullTitle": "y == z    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "be3eb497-63f4-43e0-b693-0c45a5b9667e",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x == z    ➡️     False",
                "fullTitle": "x == z    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4042d39f-54d3-4040-8856-8914907daf67",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "FullSimplify[(p || q) == (q || p)]    ➡️     (p || q) == (q || p)",
                "fullTitle": "FullSimplify[(p || q) == (q || p)]    ➡️     (p || q) == (q || p)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f8574178-c527-4bc4-90b4-e0456c87ece3",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Equal,paclet:ref/Equal] is not treated as the Boolean equivalence operator:\\n\\n\\ndata: \\n  got:              (p || q) == (q || p)\\n  expect:           (p || q) == (q || p)\\n  expect_evaluated: (p || q) == (q || p)\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(p || q) == (q || p)",
                    "expected": "(p || q) == (q || p)"
                }
            },
            {
                "title": "FullSimplify[Equivalent[p || q, q || p]]    ➡️     True",
                "fullTitle": "FullSimplify[Equivalent[p || q, q || p]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e904cf44-50d2-4ffb-8e9c-b9ebf423256b",
                "parentUUID": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Equivalent,paclet:ref/Equivalent] instead:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "38cd8c10-e280-418c-b162-6fff77bbffb5",
            "3bcdb2ae-291b-4878-afce-a4c135cc9eb5",
            "8ce35fed-7cfb-4f00-87f0-db4874fdf5fc",
            "02b4f50b-9356-4b30-b113-abde96c9567a",
            "88848939-4665-42eb-9c50-a35a4d251ef1",
            "9987b3f5-0bf9-4000-b08b-69b7a463972a",
            "5ece3319-d832-4b59-a7c5-da6fd1f429bc",
            "8fe05977-ea44-4a5b-ab91-53574ce9c733",
            "fb2bd2be-2db7-4747-8c92-56d9e9a398d6",
            "29324bea-e9d4-47f3-a3f4-a314d9863c34",
            "5ab6e6c2-7086-4c6e-9ebb-a9b8ca0041e9",
            "8a5eafa7-25a0-4cd2-99bb-d972ec917166",
            "81c67e92-691f-4d94-b601-45c3db4df107",
            "96a4ff0f-e791-410b-a128-06f86bf8371f",
            "df26cfe3-a394-46fb-a38f-e263a7a314c7",
            "48c9370d-844a-4efa-9824-1070af55ebe5",
            "4235d0f4-4a34-4cea-8778-a6930be209c8",
            "895fd659-6d1e-462f-adfb-406a74c293df",
            "14a8edae-e9b6-4149-8df6-37a142007853",
            "2d1bb4bd-abbf-4ee5-a719-8307c7a350f3",
            "228e73b7-bdcf-4613-93f4-58c43c53c481",
            "1257b385-026c-4bfb-b3d7-550762365d1b",
            "3fcafa36-c129-4261-859e-e72e22baec4c",
            "27d1d91e-f8b6-4878-9ae1-03f8b7c90e6f",
            "64decfa2-2d02-4ddf-89cd-386865c9a7bc",
            "8150ab17-aaf0-48a0-a9d3-7d3e4c173edf",
            "f940861a-6b2d-4b64-bbe9-a193b5e3d514",
            "ca0ca1b6-dd53-4a8b-b649-a14f1180a23c",
            "ae4ff920-ecf5-4d7e-96af-96d4a99b82f7",
            "fcd8618c-2abb-452a-8f81-8e9f27cc03ed",
            "e695882b-75c8-4997-88b5-0b8d6ad49914",
            "cb9fdb69-e0a0-436b-af00-e0ccd91726b2",
            "3456bcbd-5dec-4bc2-abc5-f4219bd69449",
            "8b600c53-94cf-4b60-bfac-525e992fd36f",
            "4a3d4942-8812-436e-95e5-27c9887ff9d3",
            "be353a76-52f9-47f3-98a7-bcf32727dab7",
            "cf3bfc0a-8b50-4446-886e-cf7863814e12",
            "8eacd8ef-4b6b-4695-8a62-a13c87d3aedb",
            "f44b9375-0343-4344-9479-3d9f80a5d77c",
            "5389d493-cc06-47f1-8098-cc2fe5de8ed1",
            "16ec4898-89ea-4c4a-a578-b3b4c199d2c4",
            "50dee0d4-2bab-4fa5-a8d6-dac50383acff",
            "2b80fa3f-bd9f-4d2e-8eb4-4995c2efdfce",
            "5981b09e-cea1-4bce-9d90-53964ce5c2bc",
            "c8dd062f-a480-4310-9991-a9bc03a5fc9e",
            "6a29384f-1958-4cb7-830d-716ffa96deeb",
            "906e6d7d-03f5-491c-b8c0-235700e792be",
            "be3eb497-63f4-43e0-b693-0c45a5b9667e",
            "4042d39f-54d3-4040-8856-8914907daf67",
            "f8574178-c527-4bc4-90b4-e0456c87ece3",
            "e904cf44-50d2-4ffb-8e9c-b9ebf423256b"
        ],
        "failures": [],
        "skipped": [
            "8ce35fed-7cfb-4f00-87f0-db4874fdf5fc",
            "5ab6e6c2-7086-4c6e-9ebb-a9b8ca0041e9",
            "81c67e92-691f-4d94-b601-45c3db4df107",
            "4235d0f4-4a34-4cea-8778-a6930be209c8",
            "14a8edae-e9b6-4149-8df6-37a142007853",
            "2d1bb4bd-abbf-4ee5-a719-8307c7a350f3",
            "3fcafa36-c129-4261-859e-e72e22baec4c",
            "ae4ff920-ecf5-4d7e-96af-96d4a99b82f7",
            "cf3bfc0a-8b50-4446-886e-cf7863814e12",
            "8eacd8ef-4b6b-4695-8a62-a13c87d3aedb",
            "f44b9375-0343-4344-9479-3d9f80a5d77c",
            "50dee0d4-2bab-4fa5-a8d6-dac50383acff",
            "5981b09e-cea1-4bce-9d90-53964ce5c2bc",
            "6a29384f-1958-4cb7-830d-716ffa96deeb",
            "906e6d7d-03f5-491c-b8c0-235700e792be",
            "be3eb497-63f4-43e0-b693-0c45a5b9667e",
            "4042d39f-54d3-4040-8856-8914907daf67"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "e2b434a8-c530-4bac-89c9-ee9d1a6b0db7",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
