{
    "stats": {
        "suites": 0,
        "tests": 51,
        "passes": 51,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T23:01:41.320Z",
        "end": "2018-06-03T23:01:41.320Z",
        "duration": 0,
        "testsRegistered": 51,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "2 + 2 == 4    ➡️     True",
                "fullTitle": "2 + 2 == 4    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "68204309-824e-4ed5-ac02-fecead6a9821",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/Equal_Tests.m\\n#! TextForm[ColonForm[MessageName[PossibleZeroQ, ztest1], StringForm[Unable to decide whether numeric quantity `1` is equal to zero. Assuming it is., Short[HoldForm[Log[Sqrt[2] + Sqrt[3]] - Log[5 + 2*Sqrt[6]]/2], 3]]]]\\n#! TextForm[ColonForm[MessageName[PossibleZeroQ, ztest1], StringForm[Unable to decide whether numeric quantity `1` is equal to zero. Assuming it is., Short[HoldForm[1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Log[Sqrt[2] + Sqrt[3]] - Log[5 + 2*Sqrt[6]]/2], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: Equal_Tests\\n# Test equality:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x^2 == 1 + x    ➡️     x^2 == 1 + x",
                "fullTitle": "x^2 == 1 + x    ➡️     x^2 == 1 + x",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "28a78822-9e83-4fe0-a0d2-7c7b02beb58e",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Represent an equation:\\n\\n\\ndata: \\n  got:              x^2 == 1 + x\\n  expect:           x^2 == 1 + x\\n  expect_evaluated: x^2 == 1 + x\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x^2 == 1 + x",
                    "expected": "x^2 == 1 + x"
                }
            },
            {
                "title": "Solve[%, x]    ➡️     {{x -> (1/2)*(1 - Sqrt[5])}, {x -> (1/2)*(1 + Sqrt[5])}}",
                "fullTitle": "Solve[%, x]    ➡️     {{x -> (1/2)*(1 - Sqrt[5])}, {x -> (1/2)*(1 + Sqrt[5])}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f5aa51a8-773b-4033-a457-9e1ea8facb97",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "3/2 == 5/3    ➡️     False",
                "fullTitle": "3/2 == 5/3    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bc705c98-5eaa-4036-9c94-f1f7d5065bf2",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test equality of numbers:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "1.`18.06179973983887 == 1.00000000000000011015494072453`18.06179973983887    ➡️     True",
                "fullTitle": "1.`18.06179973983887 == 1.00000000000000011015494072453`18.06179973983887    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "85951fe4-44bd-4b5d-b68e-7edcf2522504",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Approximate numbers that differ in their last seven binary digits are considered equal:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "N[Pi, 20] == Pi    ➡️     True",
                "fullTitle": "N[Pi, 20] == Pi    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "72411eb2-6b06-49cb-bdd9-02c4d422b88c",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare an exact numeric expression and an approximate number:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "N[Pi, 20] == Pi*(1 + 2^8/10^20)    ➡️     False",
                "fullTitle": "N[Pi, 20] == Pi*(1 + 2^8/10^20)    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1dbeccfc-635c-4f61-9cc9-252fa86b8838",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Pi^E == E^Pi    ➡️     False",
                "fullTitle": "Pi^E == E^Pi    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "be07b005-3d10-4843-9e5f-2c7b18669e7a",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare two exact numeric expressions; a numeric test may suffice to disprove equality:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Sqrt[2] + Sqrt[3] == Sqrt[5 + 2*Sqrt[6]]    ➡️     True",
                "fullTitle": "Sqrt[2] + Sqrt[3] == Sqrt[5 + 2*Sqrt[6]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ed7aaae8-b352-4413-94e2-d70f444bcf8d",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Proving equality requires symbolic methods:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4]    ➡️     Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 + #1^4 & , 4]",
                "fullTitle": "Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4]    ➡️     Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 + #1^4 & , 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4da14212-dc53-4e15-9a58-73c60c9d8a87",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Symbolic methods used by RefLink[Equal,paclet:ref/Equal] are insufficient to prove this equality:\\n\\n\\ndata: \\n  got:              Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 +\\n  expect:           Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 +\\n  expect_evaluated: Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 +\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 +",
                    "expected": "Sqrt[2] + Sqrt[3] == Root[1 - 10*#1^2 +"
                }
            },
            {
                "title": "RootReduce[%]    ➡️     True",
                "fullTitle": "RootReduce[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "70e860b4-0376-496d-9d83-edef24e5ec8a",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[RootReduce,paclet:ref/RootReduce] to decide whether two algebraic numbers are equal:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)    ➡️     Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 + #1^4 & , 4]",
                "fullTitle": "Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)    ➡️     Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 + #1^4 & , 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f69120e7-8c53-46ae-8751-49a22ee5e5a2",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numeric methods used by RefLink[Equal,paclet:ref/Equal] do not use sufficient precision to disprove this equality:\\n\\n\\ndata: \\n  got:              Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\\n  expect:           Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\\n  expect_evaluated: Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +",
                    "expected": "Sqrt[2] + Sqrt[3] == 1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Root[1 - 10*#1^2 +"
                }
            },
            {
                "title": "RootReduce[%]    ➡️     False",
                "fullTitle": "RootReduce[%]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b457c05d-ff90-46c5-b12d-495f1ad5e62c",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[RootReduce,paclet:ref/RootReduce] proves that the two algebraic numbers are not equal:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Block[{$MaxExtraPrecision = 100}, Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)]    ➡️     False",
                "fullTitle": "Block[{$MaxExtraPrecision = 100}, Sqrt[2] + Sqrt[3] == Root[#1^4 - 10*#1^2 + 1 & , 4] + 10^(-100)]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fbe11288-8c8f-495a-a3de-d0e884c98652",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Increasing RefLink[$MaxExtraPrecision,paclet:ref/$MaxExtraPrecision] may also allow you to disprove equality:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "x == x    ➡️     True",
                "fullTitle": "x == x    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "aafb6c5a-3431-47c6-a419-d5f2bc344c6a",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# A symbolic identity:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "(x + 1)^2 == x^2 + 2*x + 1    ➡️     (1 + x)^2 == 1 + 2*x + x^2",
                "fullTitle": "(x + 1)^2 == x^2 + 2*x + 1    ➡️     (1 + x)^2 == 1 + 2*x + x^2",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d82b25ec-df61-4e61-a7bd-c0d6b780d5b4",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Equal,paclet:ref/Equal] does not automatically prove this identity:\\n\\n\\ndata: \\n  got:              (1 + x)^2 == 1 + 2*x + x^2\\n  expect:           (1 + x)^2 == 1 + 2*x + x^2\\n  expect_evaluated: (1 + x)^2 == 1 + 2*x + x^2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(1 + x)^2 == 1 + 2*x + x^2",
                    "expected": "(1 + x)^2 == 1 + 2*x + x^2"
                }
            },
            {
                "title": "Expand[%]    ➡️     True",
                "fullTitle": "Expand[%]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c2f77698-d983-4665-80fd-ba45beb04c97",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[Expand,paclet:ref/Expand] to prove it:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "a*x == b    ➡️     a*x == b",
                "fullTitle": "a*x == b    ➡️     a*x == b",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c7b4f713-b50b-4b03-a2c7-587c1f2a54cb",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# A symbolic equation:\\n\\n\\ndata: \\n  got:              a*x == b\\n  expect:           a*x == b\\n  expect_evaluated: a*x == b\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a*x == b",
                    "expected": "a*x == b"
                }
            },
            {
                "title": "Solve[%, x]    ➡️     {{x -> b/a}}",
                "fullTitle": "Solve[%, x]    ➡️     {{x -> b/a}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "91cf4983-5177-4b53-8803-57d2420fce93",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[Solve,paclet:ref/Solve] to solve the equation:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[%%, x]    ➡️     (b == 0 && a == 0) || (a != 0 && x == b/a)",
                "fullTitle": "Reduce[%%, x]    ➡️     (b == 0 && a == 0) || (a != 0 && x == b/a)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d82a57d6-84c3-41cc-b8f6-65f46bc9b626",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Reduce,paclet:ref/Reduce] gives all solutions, including the ones that require nongeneric values of parameters:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "3 == 3. == 3.    ➡️     True",
                "fullTitle": "3 == 3. == 3.    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "94a68506-81e9-428f-bb66-488562a0194a",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare more than two expressions:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x + y + z == x^2 - y^2 - z^2 == x*y*z == 3    ➡️     x + y + z == x^2 - y^2 - z^2 == x*y*z == 3",
                "fullTitle": "x + y + z == x^2 - y^2 - z^2 == x*y*z == 3    ➡️     x + y + z == x^2 - y^2 - z^2 == x*y*z == 3",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "755b75e7-f3d2-42b1-93f5-7102e7562e26",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              x + y + z == x^2 - y^2 - z^2 == x*y*z == 3\\n  expect:           x + y + z == x^2 - y^2 - z^2 == x*y*z == 3\\n  expect_evaluated: x + y + z == x^2 - y^2 - z^2 == x*y*z == 3\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x + y + z == x^2 - y^2 - z^2 == x*y*z == 3",
                    "expected": "x + y + z == x^2 - y^2 - z^2 == x*y*z == 3"
                }
            },
            {
                "title": "Reduce[%, {x, y, z}]    ➡️     x == 1 && (y == (1/2)*(2 - 2*I*Sqrt[2]) || y == (1/2)*(2 + 2*I*Sqrt[2])) && z == 2 - y",
                "fullTitle": "Reduce[%, {x, y, z}]    ➡️     x == 1 && (y == (1/2)*(2 - 2*I*Sqrt[2]) || y == (1/2)*(2 + 2*I*Sqrt[2])) && z == 2 - y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d368187f-12f1-418f-8340-1edfc8a0e067",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{1, 2} == {1, 2}    ➡️     True",
                "fullTitle": "{1, 2} == {1, 2}    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "318357db-9b06-4019-a2ca-9bfd929ff223",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare lists:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "{a, b, c} == {d, e}    ➡️     False",
                "fullTitle": "{a, b, c} == {d, e}    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f2e48be8-3267-426f-a394-f4f1e7fcf012",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "\"abc\" == \"ABC\"    ➡️     False",
                "fullTitle": "\"abc\" == \"ABC\"    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "760fe27c-d2a1-4815-887c-957631d64c4c",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Compare strings:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "!x == y    ➡️     x != y",
                "fullTitle": "!x == y    ➡️     x != y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "82f34a7c-31a5-49ee-8e1e-af46c856a966",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of two-argument RefLink[Equal,paclet:ref/Equal] is RefLink[Unequal,paclet:ref/Unequal]:\\n\\n\\ndata: \\n  got:              x != y\\n  expect:           x != y\\n  expect_evaluated: x != y\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x != y",
                    "expected": "x != y"
                }
            },
            {
                "title": "!x == y == z    ➡️      !x == y == z",
                "fullTitle": "!x == y == z    ➡️      !x == y == z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b768f746-4a95-4229-af87-20dc6953a6ba",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of three-argument RefLink[Equal,paclet:ref/Equal] does not simplify automatically:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[%]    ➡️     y != x || z != x",
                "fullTitle": "LogicalExpand[%]    ➡️     y != x || z != x",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "81ae0060-0a4c-4436-ae98-d8f6f7e189db",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[LogicalExpand,paclet:ref/LogicalExpand] to express it in terms of two-argument RefLink[Unequal,paclet:ref/Unequal]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "LogicalExpand[x != y != z]    ➡️     y != x && z != x && z != y",
                "fullTitle": "LogicalExpand[x != y != z]    ➡️     y != x && z != x && z != y",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ca2b17dc-237d-42e6-9705-c7c30cd211be",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# The negation of three-argument RefLink[Equal,paclet:ref/Equal] is not equivalent to three-argument RefLink[Unequal,paclet:ref/Unequal]:\\n\\n\\ndata: \\n  got:              y != x && z != x && z != y\\n  expect:           y != x && z != x && z != y\\n  expect_evaluated: y != x && z != x && z != y\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "y != x && z != x && z != y",
                    "expected": "y != x && z != x && z != y"
                }
            },
            {
                "title": "{x == x, x == y, Sqrt[2] + Sqrt[3] == Sqrt[5 + 2*Sqrt[6]], Pi == N[Pi]}    ➡️     {True, x == y, True, True}",
                "fullTitle": "{x == x, x == y, Sqrt[2] + Sqrt[3] == Sqrt[5 + 2*Sqrt[6]], Pi == N[Pi]}    ➡️     {True, x == y, True, True}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3b796574-41ec-4b19-8535-ffb2f142fa12",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Equal,paclet:ref/Equal] tests mathematical equality of objects represented by expressions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{x === x, x === y, Sqrt[2] + Sqrt[3] === Sqrt[5 + 2*Sqrt[6]], Pi === N[Pi]}    ➡️     {True, False, False, False}",
                "fullTitle": "{x === x, x === y, Sqrt[2] + Sqrt[3] === Sqrt[5 + 2*Sqrt[6]], Pi === N[Pi]}    ➡️     {True, False, False, False}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8921bc0e-ebbb-42a2-8e82-501b9cb1875d",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[SameQ,paclet:ref/SameQ] tests syntactic equality of expressions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "a = Log[Sqrt[2] + Sqrt[3]]; b = Log[5 + 2*Sqrt[6]]/2; a == b    ➡️     Log[Sqrt[2] + Sqrt[3]] == (1/2)*Log[5 + 2*Sqrt[6]]",
                "fullTitle": "a = Log[Sqrt[2] + Sqrt[3]]; b = Log[5 + 2*Sqrt[6]]/2; a == b    ➡️     Log[Sqrt[2] + Sqrt[3]] == (1/2)*Log[5 + 2*Sqrt[6]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5648397a-3d55-461a-bd67-d5e9f26105ee",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# When RefLink[Equal,paclet:ref/Equal] cannot decide whether two numeric expressions are equal it returns unchanged:\\n\\n\\ndata: \\n  got:              Log[Sqrt[2] + Sqrt[3]] == Log[5 + 2*Sqrt[6]]/2\\n  expect:           Log[Sqrt[2] + Sqrt[3]] == (1/2)*Log[5 + 2*Sqrt[6]]\\n  expect_evaluated: Log[Sqrt[2] + Sqrt[3]] == Log[5 + 2*Sqrt[6]]/2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Log[Sqrt[2] + Sqrt[3]] == Log[5 + 2*Sqrt[6]]/2",
                    "expected": "Log[Sqrt[2] + Sqrt[3]] == (1/2)*Log[5 + 2*Sqrt[6]]"
                }
            },
            {
                "title": "FullSimplify[a == b]    ➡️     True",
                "fullTitle": "FullSimplify[a == b]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4ffa6203-5999-4327-a042-8c16cd8ae7ce",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[FullSimplify,paclet:ref/FullSimplify] uses exact symbolic transformations to prove the equality:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[a - b]    ➡️     True",
                "fullTitle": "PossibleZeroQ[a - b]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fc4c5318-dad1-4f97-8716-fb45ea382106",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] uses numeric and symbolic heuristics to decide whether an expression is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PossibleZeroQ[a - b + 10^(-100)]    ➡️     True",
                "fullTitle": "PossibleZeroQ[a - b + 10^(-100)]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e8aa7fd8-5e23-4e93-bf42-0f311734e484",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Numeric methods used by RefLink[PossibleZeroQ,paclet:ref/PossibleZeroQ] may incorrectly decide that a number is zero:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Solve[a*x^2 + b*x + c == 0, x]    ➡️     {{x -> (-b - Sqrt[b^2 - 4*a*c])/(2*a)}, {x -> (-b + Sqrt[b^2 - 4*a*c])/(2*a)}}",
                "fullTitle": "Solve[a*x^2 + b*x + c == 0, x]    ➡️     {{x -> (-b - Sqrt[b^2 - 4*a*c])/(2*a)}, {x -> (-b + Sqrt[b^2 - 4*a*c])/(2*a)}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7c2a6c6c-63b6-4149-872b-07c936ea0838",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[Solve,paclet:ref/Solve] to solve equations for generic values of parameters:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[a*x^2 + b*x + c == 0, x]    ➡️     (a != 0 && (x == (-b - Sqrt[b^2 - 4*a*c])/(2*a) || x == (-b + Sqrt[b^2 - 4*a*c])/(2*a))) || (a == 0 && b != 0 && x == -(c/b)) || (c == 0 && b == 0 && a == 0)",
                "fullTitle": "Reduce[a*x^2 + b*x + c == 0, x]    ➡️     (a != 0 && (x == (-b - Sqrt[b^2 - 4*a*c])/(2*a) || x == (-b + Sqrt[b^2 - 4*a*c])/(2*a))) || (a == 0 && b != 0 && x == -(c/b)) || (c == 0 && b == 0 && a == 0)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a91eba43-0d04-45fe-9326-6b750081d9cb",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[Reduce,paclet:ref/Reduce] gives all solutions, including those with nongeneric parameter values:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[x^2 + y^2 == 5, {x, y}, Reals]    ➡️     -Sqrt[5] <= x <= Sqrt[5] && (y == -Sqrt[5 - x^2] || y == Sqrt[5 - x^2])",
                "fullTitle": "Reduce[x^2 + y^2 == 5, {x, y}, Reals]    ➡️     -Sqrt[5] <= x <= Sqrt[5] && (y == -Sqrt[5 - x^2] || y == Sqrt[5 - x^2])",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8458499e-9056-4e84-beec-be7836f51604",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[Reduce,paclet:ref/Reduce] to solve equations over specified domains:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Reduce[x^2 + y^2 == 5, {x, y}, Integers]    ➡️     (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)",
                "fullTitle": "Reduce[x^2 + y^2 == 5, {x, y}, Integers]    ➡️     (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "41f76234-e118-4b7d-a2e2-567b1bee1572",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)\\n  expect:           (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)\\n  expect_evaluated: (x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)",
                    "expected": "(x == -2 && y == -1) || (x == -2 && y == 1) || (x == -1 && y == -2) || (x == -1 && y == 2) || (x == 1 && y == -2) || (x == 1 && y == 2) || (x == 2 && y == -1) || (x == 2 && y == 1)"
                }
            },
            {
                "title": "2.00006 - 2.00005 == 0.00001    ➡️     False",
                "fullTitle": "2.00006 - 2.00005 == 0.00001    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "546612fa-5b61-4943-b568-0baefd8855b4",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Equality for machine-precision approximate numbers can be subtle: \\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "InputForm[2.00006 - 2.00005]    ➡️     0.000010000000000065512",
                "fullTitle": "InputForm[2.00006 - 2.00005]    ➡️     0.000010000000000065512",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0f35f551-84c8-4592-816a-35e97baaf893",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": true,
                "isHook": false,
                "context": "\"# The extra digits disrupt equality:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "2.00006`16. - 2.00005000000000000000000000001`16. == 1.`16.*^-5    ➡️     True",
                "fullTitle": "2.00006`16. - 2.00005000000000000000000000001`16. == 1.`16.*^-5    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0a3444af-764b-455b-a999-c52bffadb61b",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Arbitrary-precision approximate numbers do not have this problem:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "Precision[2.00006`16. - 2.00005000000000000000000000001`16.]    ➡️     10.3979",
                "fullTitle": "Precision[2.00006`16. - 2.00005000000000000000000000001`16.]    ➡️     10.3979",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1b1e7341-3924-4700-a498-d04977f19762",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": true,
                "isHook": false,
                "context": "\"# Thanks to automatic precision tracking RefLink[Equal,paclet:ref/Equal] knows to look only at the first ten digits:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "2.6 - 2.5 == 0.1    ➡️     True",
                "fullTitle": "2.6 - 2.5 == 0.1    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3f1df2df-fafa-4f30-a13f-f3d07714d51c",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# In this case, the equality test for machine numbers succeeds:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "InputForm[2.6 - 2.5]    ➡️     0.10000000000000009",
                "fullTitle": "InputForm[2.6 - 2.5]    ➡️     0.10000000000000009",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "39b01ef5-a402-4849-bc26-5e76e61efea0",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": true,
                "isHook": false,
                "context": "\"# The extra digits in this case are ignored by RefLink[Equal,paclet:ref/Equal]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x == y    ➡️     True",
                "fullTitle": "x == y    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "08e5a088-ffc1-43ff-8ba3-3538c114fa6b",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "y == z    ➡️     True",
                "fullTitle": "y == z    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "88bc731f-d1ba-454e-940a-5c7635ae88ca",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x == z    ➡️     False",
                "fullTitle": "x == z    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c0df38d6-af0d-48d3-9023-f464829e7164",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "FullSimplify[(p || q) == (q || p)]    ➡️     (p || q) == (q || p)",
                "fullTitle": "FullSimplify[(p || q) == (q || p)]    ➡️     (p || q) == (q || p)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "91dcc5e2-bdbd-4e2d-93c5-e8b91f111f37",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Equal,paclet:ref/Equal] is not treated as the Boolean equivalence operator:\\n\\n\\ndata: \\n  got:              (p || q) == (q || p)\\n  expect:           (p || q) == (q || p)\\n  expect_evaluated: (p || q) == (q || p)\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(p || q) == (q || p)",
                    "expected": "(p || q) == (q || p)"
                }
            },
            {
                "title": "FullSimplify[Equivalent[p || q, q || p]]    ➡️     True",
                "fullTitle": "FullSimplify[Equivalent[p || q, q || p]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2f22e850-90b6-4257-a7db-9f6c4a7fb0ab",
                "parentUUID": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Equivalent,paclet:ref/Equivalent] instead:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "68204309-824e-4ed5-ac02-fecead6a9821",
            "28a78822-9e83-4fe0-a0d2-7c7b02beb58e",
            "f5aa51a8-773b-4033-a457-9e1ea8facb97",
            "bc705c98-5eaa-4036-9c94-f1f7d5065bf2",
            "85951fe4-44bd-4b5d-b68e-7edcf2522504",
            "72411eb2-6b06-49cb-bdd9-02c4d422b88c",
            "1dbeccfc-635c-4f61-9cc9-252fa86b8838",
            "be07b005-3d10-4843-9e5f-2c7b18669e7a",
            "ed7aaae8-b352-4413-94e2-d70f444bcf8d",
            "4da14212-dc53-4e15-9a58-73c60c9d8a87",
            "70e860b4-0376-496d-9d83-edef24e5ec8a",
            "f69120e7-8c53-46ae-8751-49a22ee5e5a2",
            "b457c05d-ff90-46c5-b12d-495f1ad5e62c",
            "fbe11288-8c8f-495a-a3de-d0e884c98652",
            "aafb6c5a-3431-47c6-a419-d5f2bc344c6a",
            "d82b25ec-df61-4e61-a7bd-c0d6b780d5b4",
            "c2f77698-d983-4665-80fd-ba45beb04c97",
            "c7b4f713-b50b-4b03-a2c7-587c1f2a54cb",
            "91cf4983-5177-4b53-8803-57d2420fce93",
            "d82a57d6-84c3-41cc-b8f6-65f46bc9b626",
            "94a68506-81e9-428f-bb66-488562a0194a",
            "755b75e7-f3d2-42b1-93f5-7102e7562e26",
            "d368187f-12f1-418f-8340-1edfc8a0e067",
            "318357db-9b06-4019-a2ca-9bfd929ff223",
            "f2e48be8-3267-426f-a394-f4f1e7fcf012",
            "760fe27c-d2a1-4815-887c-957631d64c4c",
            "82f34a7c-31a5-49ee-8e1e-af46c856a966",
            "b768f746-4a95-4229-af87-20dc6953a6ba",
            "81ae0060-0a4c-4436-ae98-d8f6f7e189db",
            "ca2b17dc-237d-42e6-9705-c7c30cd211be",
            "3b796574-41ec-4b19-8535-ffb2f142fa12",
            "8921bc0e-ebbb-42a2-8e82-501b9cb1875d",
            "5648397a-3d55-461a-bd67-d5e9f26105ee",
            "4ffa6203-5999-4327-a042-8c16cd8ae7ce",
            "fc4c5318-dad1-4f97-8716-fb45ea382106",
            "e8aa7fd8-5e23-4e93-bf42-0f311734e484",
            "7c2a6c6c-63b6-4149-872b-07c936ea0838",
            "a91eba43-0d04-45fe-9326-6b750081d9cb",
            "8458499e-9056-4e84-beec-be7836f51604",
            "41f76234-e118-4b7d-a2e2-567b1bee1572",
            "546612fa-5b61-4943-b568-0baefd8855b4",
            "0f35f551-84c8-4592-816a-35e97baaf893",
            "0a3444af-764b-455b-a999-c52bffadb61b",
            "1b1e7341-3924-4700-a498-d04977f19762",
            "3f1df2df-fafa-4f30-a13f-f3d07714d51c",
            "39b01ef5-a402-4849-bc26-5e76e61efea0",
            "08e5a088-ffc1-43ff-8ba3-3538c114fa6b",
            "88bc731f-d1ba-454e-940a-5c7635ae88ca",
            "c0df38d6-af0d-48d3-9023-f464829e7164",
            "91dcc5e2-bdbd-4e2d-93c5-e8b91f111f37",
            "2f22e850-90b6-4257-a7db-9f6c4a7fb0ab"
        ],
        "failures": [],
        "skipped": [
            "f5aa51a8-773b-4033-a457-9e1ea8facb97",
            "70e860b4-0376-496d-9d83-edef24e5ec8a",
            "b457c05d-ff90-46c5-b12d-495f1ad5e62c",
            "c2f77698-d983-4665-80fd-ba45beb04c97",
            "91cf4983-5177-4b53-8803-57d2420fce93",
            "d82a57d6-84c3-41cc-b8f6-65f46bc9b626",
            "d368187f-12f1-418f-8340-1edfc8a0e067",
            "81ae0060-0a4c-4436-ae98-d8f6f7e189db",
            "7c2a6c6c-63b6-4149-872b-07c936ea0838",
            "a91eba43-0d04-45fe-9326-6b750081d9cb",
            "8458499e-9056-4e84-beec-be7836f51604",
            "0f35f551-84c8-4592-816a-35e97baaf893",
            "1b1e7341-3924-4700-a498-d04977f19762",
            "39b01ef5-a402-4849-bc26-5e76e61efea0",
            "08e5a088-ffc1-43ff-8ba3-3538c114fa6b",
            "88bc731f-d1ba-454e-940a-5c7635ae88ca",
            "c0df38d6-af0d-48d3-9023-f464829e7164"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "7e994487-4fd8-44aa-aa5c-6eef7022209a",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
