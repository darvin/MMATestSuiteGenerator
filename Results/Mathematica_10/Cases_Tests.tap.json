{
    "stats": {
        "suites": 0,
        "tests": 20,
        "passes": 20,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-02T19:34:46.524Z",
        "end": "2018-06-02T19:34:46.524Z",
        "duration": 0,
        "testsRegistered": 20,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "Cases[{1, 1, f[a], 2, 3, y, f[8], 9, f[10]}, _Integer]    ➡️     {1, 1, 2, 3, 9}",
                "fullTitle": "Cases[{1, 1, f[a], 2, 3, y, f[8], 9, f[10]}, _Integer]    ➡️     {1, 1, 2, 3, 9}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ba064ab2-9dcc-425b-bf66-e5811b1e966c",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# SYSTEM: Mathematica_10\\n# TEST: Cases_Tests\\n# OUTPUT: output/Results/Mathematica_10/Cases_Tests.json\\n# Find cases that explicitly match integers:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Cases[{1, 1, f[a], 2, 3, y, f[8], 9, f[10]}, Except[_Integer]]    ➡️     {f[a], y, f[8], f[10]}",
                "fullTitle": "Cases[{1, 1, f[a], 2, 3, y, f[8], 9, f[10]}, Except[_Integer]]    ➡️     {f[a], y, f[8], f[10]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6e75b32a-38e0-487f-a02a-ec14c2368ae7",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find cases that do not match integers:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Cases[{1, 1, f[a], 2, 3, y, f[8], 9, f[10]}, f[x_] -> x]    ➡️     {a, 8, 10}",
                "fullTitle": "Cases[{1, 1, f[a], 2, 3, y, f[8], 9, f[10]}, f[x_] -> x]    ➡️     {a, 8, 10}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "221c4b5b-d9b0-4c83-b146-00923af06d86",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# Return the x from inside each f[x_] matched:\\n\\n\\ndata: \\n  got: \\n    8:  null\\n    10: null\\n    a:  null\\n  expect: \\n    8:  null\\n    10: null\\n    a:  null\\n  expect_evaluated: \\n    8:  null\\n    10: null\\n    a:  null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "8": null,
                        "10": null,
                        "a": null
                    },
                    "expected": {
                        "8": null,
                        "10": null,
                        "a": null
                    }
                }
            },
            {
                "title": "Cases[_Integer][{1, 1, f[a], 2, 3, y, f[8], 9, f[10]}]    ➡️     {1, 1, 2, 3, 9}",
                "fullTitle": "Cases[_Integer][{1, 1, f[a], 2, 3, y, f[8], 9, f[10]}]    ➡️     {1, 1, 2, 3, 9}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fb960b23-c885-4716-a6ad-dacfad6902e5",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use the operator form of RefLink[Cases,paclet:ref/Cases]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Cases[<| 1 -> \"a\", 2 -> \"b\", 3 -> c, 4 -> d |>, _Symbol]    ➡️     {c, d}",
                "fullTitle": "Cases[<| 1 -> \"a\", 2 -> \"b\", 3 -> c, 4 -> d |>, _Symbol]    ➡️     {c, d}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8ffb3147-ab5d-4580-ae06-c02c98afbb24",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# Pick elements from an RefLink[Association,paclet:ref/Association]:\\n\\n\\ndata: \\n  got: \\n    c: null\\n    d: null\\n  expect: \\n    c: null\\n    d: null\\n  expect_evaluated: \\n    c: null\\n    d: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "c": null,
                        "d": null
                    },
                    "expected": {
                        "c": null,
                        "d": null
                    }
                }
            },
            {
                "title": "Cases[{{1, 2}, {2}, {3, 4, 1}, {5, 4}, {3, 3}}, {_, _}]    ➡️     {{1, 2}, {5, 4}, {3, 3}}",
                "fullTitle": "Cases[{{1, 2}, {2}, {3, 4, 1}, {5, 4}, {3, 3}}, {_, _}]    ➡️     {{1, 2}, {5, 4}, {3, 3}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d5e9c314-cbcb-492c-8fd8-e65da04ce061",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find all cases of lists of two elements:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Cases[{{1, 2}, {2}, {3, 4, 1}, {5, 4}, {3, 3}}, {a_, b_} -> a + b]    ➡️     {3, 9, 6}",
                "fullTitle": "Cases[{{1, 2}, {2}, {3, 4, 1}, {5, 4}, {3, 3}}, {a_, b_} -> a + b]    ➡️     {3, 9, 6}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d9a7074d-7c58-418b-b843-952cd9920b9f",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the sum of every pair of elements:\\n\\n\\ndata: \\n  got: \\n    3: null\\n    6: null\\n    9: null\\n  expect: \\n    3: null\\n    6: null\\n    9: null\\n  expect_evaluated: \\n    3: null\\n    6: null\\n    9: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "3": null,
                        "6": null,
                        "9": null
                    },
                    "expected": {
                        "3": null,
                        "6": null,
                        "9": null
                    }
                }
            },
            {
                "title": "Cases[{1, 0, 2, 0, 3, 5, 6, 7, 0, 0, 0}, Except[0]]    ➡️     {1, 2, 3, 5, 6, 7}",
                "fullTitle": "Cases[{1, 0, 2, 0, 3, 5, 6, 7, 0, 0, 0}, Except[0]]    ➡️     {1, 2, 3, 5, 6, 7}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5a87ccd5-9bb4-4f4f-bc3f-97ae04c9cd24",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# Pick out elements that are not 0:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    2: null\\n    3: null\\n    5: null\\n    6: null\\n    7: null\\n  expect: \\n    1: null\\n    2: null\\n    3: null\\n    5: null\\n    6: null\\n    7: null\\n  expect_evaluated: \\n    1: null\\n    2: null\\n    3: null\\n    5: null\\n    6: null\\n    7: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "5": null,
                        "6": null,
                        "7": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "5": null,
                        "6": null,
                        "7": null
                    }
                }
            },
            {
                "title": "Cases[{{1, 4, a, 0}, {b, 3, 2, 2}, {c, c, 5, 5}}, _Integer, 2]    ➡️     {1, 4, 0, 3, 2, 2, 5, 5}",
                "fullTitle": "Cases[{{1, 4, a, 0}, {b, 3, 2, 2}, {c, c, 5, 5}}, _Integer, 2]    ➡️     {1, 4, 0, 3, 2, 2, 5, 5}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5c5131c4-b4de-4484-82d1-c8f9049b7659",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# Pick out cases of integers down to level 2:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Cases[Sqrt[Range[100]], _Integer, {1}, 3]    ➡️     {1, 2, 3}",
                "fullTitle": "Cases[Sqrt[Range[100]], _Integer, {1}, 3]    ➡️     {1, 2, 3}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "baae695f-a24a-417a-a3db-aa7d27747c5e",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# Return only the first three matching elements:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    2: null\\n    3: null\\n  expect: \\n    1: null\\n    2: null\\n    3: null\\n  expect_evaluated: \\n    1: null\\n    2: null\\n    3: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "3": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "3": null
                    }
                }
            },
            {
                "title": "Cases[{f[{a, b}], f[{a}], g[{a}], f[{a, b, c, d}]}, f[x_] :> Length[x]]    ➡️     {2, 1, 4}",
                "fullTitle": "Cases[{f[{a, b}], f[{a}], g[{a}], f[{a, b, c, d}]}, f[x_] :> Length[x]]    ➡️     {2, 1, 4}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d289c193-a55b-4aca-ae0d-803db4446669",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use :> to evaluate only after explicit elements have been found:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    2: null\\n    4: null\\n  expect: \\n    1: null\\n    2: null\\n    4: null\\n  expect_evaluated: \\n    1: null\\n    2: null\\n    4: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "4": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "4": null
                    }
                }
            },
            {
                "title": "Cases[{1, 2, f[a, b]}, _, {0, Infinity}]    ➡️     {1, 2, a, b, f[a, b], {1, 2, f[a, b]}}",
                "fullTitle": "Cases[{1, 2, f[a, b]}, _, {0, Infinity}]    ➡️     {1, 2, a, b, f[a, b], {1, 2, f[a, b]}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "41f6f301-df06-45d5-93e3-4877d426a001",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find all possible subexpressions at any level:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Cases[{1, 2, f[a, b]}, _, {0, Infinity}, Heads -> True]    ➡️     {List, 1, 2, f, a, b, f[a, b], {1, 2, f[a, b]}}",
                "fullTitle": "Cases[{1, 2, f[a, b]}, _, {0, Infinity}, Heads -> True]    ➡️     {List, 1, 2, f, a, b, f[a, b], {1, 2, f[a, b]}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cc1590f7-46f3-4c10-a041-000fea6ba643",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find all possible subexpressions at any level, including the head of the expression:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Cases[<| 1 -> c, 2 -> <| 3 -> 1, a -> b |> |>, _Symbol, Infinity]    ➡️     {c, b}",
                "fullTitle": "Cases[<| 1 -> c, 2 -> <| 3 -> 1, a -> b |> |>, _Symbol, Infinity]    ➡️     {c, b}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b53b7e69-9278-42aa-a803-b7a9937e63ca",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# Pick elements from nested associations:\\n\\n\\ndata: \\n  got: \\n    c: null\\n    b: null\\n  expect: \\n    c: null\\n    b: null\\n  expect_evaluated: \\n    c: null\\n    b: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "c": null,
                        "b": null
                    },
                    "expected": {
                        "c": null,
                        "b": null
                    }
                }
            },
            {
                "title": "Cases[{a, 5, Pi}, _Symbol]    ➡️     {a, Pi}",
                "fullTitle": "Cases[{a, 5, Pi}, _Symbol]    ➡️     {a, Pi}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9fedfea2-9612-4002-9f49-c8ee7f21f6a0",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find symbols among the elements of an expression:\\n\\n\\ndata: \\n  got: \\n    a:  null\\n    Pi: null\\n  expect: \\n    a:  null\\n    Pi: null\\n  expect_evaluated: \\n    a:  null\\n    Pi: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "a": null,
                        "Pi": null
                    },
                    "expected": {
                        "a": null,
                        "Pi": null
                    }
                }
            },
            {
                "title": "Cases[{a, 5, Pi}, _Symbol, Heads -> True]    ➡️     {List, a, Pi}",
                "fullTitle": "Cases[{a, 5, Pi}, _Symbol, Heads -> True]    ➡️     {List, a, Pi}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5f8f2af4-d2de-4cfa-808d-3f6ae1895cc7",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# Also include the head of the expression in the search:\\n\\n\\ndata: \\n  got: \\n    List: null\\n    a:    null\\n    Pi:   null\\n  expect: \\n    List: null\\n    a:    null\\n    Pi:   null\\n  expect_evaluated: \\n    List: null\\n    a:    null\\n    Pi:   null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "List": null,
                        "a": null,
                        "Pi": null
                    },
                    "expected": {
                        "List": null,
                        "a": null,
                        "Pi": null
                    }
                }
            },
            {
                "title": "Length[Cases[{1, \"f\", g, \"h\", \"7\"}, _?StringQ]]    ➡️     3",
                "fullTitle": "Length[Cases[{1, \"f\", g, \"h\", \"7\"}, _?StringQ]]    ➡️     3",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a1661fb9-f3f3-4a8c-95a6-2a02fdac7c4f",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Count,paclet:ref/Count] returns the length of the result given by RefLink[Cases,paclet:ref/Cases]:\\n\\n\\ndata: \\n  got:              3\\n  expect:           3\\n  expect_evaluated: 3\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 3,
                    "expected": 3
                }
            },
            {
                "title": "Count[{1, \"f\", g, \"h\", \"7\"}, _?StringQ]    ➡️     3",
                "fullTitle": "Count[{1, \"f\", g, \"h\", \"7\"}, _?StringQ]    ➡️     3",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9600b4f5-6497-4c6c-8ee9-7f4e832a2986",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              3\\n  expect:           3\\n  expect_evaluated: 3\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 3,
                    "expected": 3
                }
            },
            {
                "title": "Cases[{1, b -> Automatic, c -> 3}, _ -> Automatic]    ➡️     {Automatic, Automatic, Automatic}",
                "fullTitle": "Cases[{1, b -> Automatic, c -> 3}, _ -> Automatic]    ➡️     {Automatic, Automatic, Automatic}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "becf1d26-18e9-4033-80e1-a47c2dce451e",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# A rule transforms the matching elements into its right side:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Cases[{1, b -> Automatic, c -> 3}, HoldPattern[_ -> Automatic]]    ➡️     {b -> Automatic}",
                "fullTitle": "Cases[{1, b -> Automatic, c -> 3}, HoldPattern[_ -> Automatic]]    ➡️     {b -> Automatic}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8d07c2e0-6936-4130-85b1-6cdb21cf75f9",
                "parentUUID": "14216022-6dba-42e3-bde6-ea270b9b8552",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[HoldPattern,paclet:ref/HoldPattern] to treat the rule itself as a pattern:\\n\\n\\ndata: \\n  got: \\n    b -> Automatic: null\\n  expect: \\n    b -> Automatic: null\\n  expect_evaluated: \\n    b -> Automatic: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "b -> Automatic": null
                    },
                    "expected": {
                        "b -> Automatic": null
                    }
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "ba064ab2-9dcc-425b-bf66-e5811b1e966c",
            "6e75b32a-38e0-487f-a02a-ec14c2368ae7",
            "221c4b5b-d9b0-4c83-b146-00923af06d86",
            "fb960b23-c885-4716-a6ad-dacfad6902e5",
            "8ffb3147-ab5d-4580-ae06-c02c98afbb24",
            "d5e9c314-cbcb-492c-8fd8-e65da04ce061",
            "d9a7074d-7c58-418b-b843-952cd9920b9f",
            "5a87ccd5-9bb4-4f4f-bc3f-97ae04c9cd24",
            "5c5131c4-b4de-4484-82d1-c8f9049b7659",
            "baae695f-a24a-417a-a3db-aa7d27747c5e",
            "d289c193-a55b-4aca-ae0d-803db4446669",
            "41f6f301-df06-45d5-93e3-4877d426a001",
            "cc1590f7-46f3-4c10-a041-000fea6ba643",
            "b53b7e69-9278-42aa-a803-b7a9937e63ca",
            "9fedfea2-9612-4002-9f49-c8ee7f21f6a0",
            "5f8f2af4-d2de-4cfa-808d-3f6ae1895cc7",
            "a1661fb9-f3f3-4a8c-95a6-2a02fdac7c4f",
            "9600b4f5-6497-4c6c-8ee9-7f4e832a2986",
            "becf1d26-18e9-4033-80e1-a47c2dce451e",
            "8d07c2e0-6936-4130-85b1-6cdb21cf75f9"
        ],
        "failures": [],
        "skipped": [],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "14216022-6dba-42e3-bde6-ea270b9b8552",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
