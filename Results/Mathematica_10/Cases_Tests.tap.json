{
    "stats": {
        "suites": 0,
        "tests": 20,
        "passes": 20,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T23:01:31.697Z",
        "end": "2018-06-03T23:01:31.697Z",
        "duration": 0,
        "testsRegistered": 20,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "Cases[{1, 1, f[a], 2, 3, y, f[8], 9, f[10]}, _Integer]    ➡️     {1, 1, 2, 3, 9}",
                "fullTitle": "Cases[{1, 1, f[a], 2, 3, y, f[8], 9, f[10]}, _Integer]    ➡️     {1, 1, 2, 3, 9}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "dc3543df-b6c5-4b77-9dcc-141bfc2a3073",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/Cases_Tests.m\\n# SYSTEM: Mathematica_10\\n# TEST: Cases_Tests\\n# Find cases that explicitly match integers:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Cases[{1, 1, f[a], 2, 3, y, f[8], 9, f[10]}, Except[_Integer]]    ➡️     {f[a], y, f[8], f[10]}",
                "fullTitle": "Cases[{1, 1, f[a], 2, 3, y, f[8], 9, f[10]}, Except[_Integer]]    ➡️     {f[a], y, f[8], f[10]}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2c3502eb-1145-4de5-8aa3-4758dbf9ad27",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find cases that do not match integers:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Cases[{1, 1, f[a], 2, 3, y, f[8], 9, f[10]}, f[x_] -> x]    ➡️     {a, 8, 10}",
                "fullTitle": "Cases[{1, 1, f[a], 2, 3, y, f[8], 9, f[10]}, f[x_] -> x]    ➡️     {a, 8, 10}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e9a0e47a-3385-492b-b3a0-b21e034fb55e",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# Return the x from inside each f[x_] matched:\\n\\n\\ndata: \\n  got: \\n    8:  null\\n    10: null\\n    a:  null\\n  expect: \\n    8:  null\\n    10: null\\n    a:  null\\n  expect_evaluated: \\n    8:  null\\n    10: null\\n    a:  null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "8": null,
                        "10": null,
                        "a": null
                    },
                    "expected": {
                        "8": null,
                        "10": null,
                        "a": null
                    }
                }
            },
            {
                "title": "Cases[_Integer][{1, 1, f[a], 2, 3, y, f[8], 9, f[10]}]    ➡️     {1, 1, 2, 3, 9}",
                "fullTitle": "Cases[_Integer][{1, 1, f[a], 2, 3, y, f[8], 9, f[10]}]    ➡️     {1, 1, 2, 3, 9}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3fddaf48-6d3b-4389-b518-6198551c0635",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use the operator form of RefLink[Cases,paclet:ref/Cases]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Cases[<| 1 -> \"a\", 2 -> \"b\", 3 -> c, 4 -> d |>, _Symbol]    ➡️     {c, d}",
                "fullTitle": "Cases[<| 1 -> \"a\", 2 -> \"b\", 3 -> c, 4 -> d |>, _Symbol]    ➡️     {c, d}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b3cc8aab-5bb8-44dd-8125-5e9ad773df2d",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# Pick elements from an RefLink[Association,paclet:ref/Association]:\\n\\n\\ndata: \\n  got: \\n    c: null\\n    d: null\\n  expect: \\n    c: null\\n    d: null\\n  expect_evaluated: \\n    c: null\\n    d: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "c": null,
                        "d": null
                    },
                    "expected": {
                        "c": null,
                        "d": null
                    }
                }
            },
            {
                "title": "Cases[{{1, 2}, {2}, {3, 4, 1}, {5, 4}, {3, 3}}, {_, _}]    ➡️     {{1, 2}, {5, 4}, {3, 3}}",
                "fullTitle": "Cases[{{1, 2}, {2}, {3, 4, 1}, {5, 4}, {3, 3}}, {_, _}]    ➡️     {{1, 2}, {5, 4}, {3, 3}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b0f9c4ec-fac4-411d-baf3-56a1c1984cc2",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find all cases of lists of two elements:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Cases[{{1, 2}, {2}, {3, 4, 1}, {5, 4}, {3, 3}}, {a_, b_} -> a + b]    ➡️     {3, 9, 6}",
                "fullTitle": "Cases[{{1, 2}, {2}, {3, 4, 1}, {5, 4}, {3, 3}}, {a_, b_} -> a + b]    ➡️     {3, 9, 6}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b56fc6a7-f0c6-42e8-9270-01fc695c8ba2",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the sum of every pair of elements:\\n\\n\\ndata: \\n  got: \\n    3: null\\n    6: null\\n    9: null\\n  expect: \\n    3: null\\n    6: null\\n    9: null\\n  expect_evaluated: \\n    3: null\\n    6: null\\n    9: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "3": null,
                        "6": null,
                        "9": null
                    },
                    "expected": {
                        "3": null,
                        "6": null,
                        "9": null
                    }
                }
            },
            {
                "title": "Cases[{1, 0, 2, 0, 3, 5, 6, 7, 0, 0, 0}, Except[0]]    ➡️     {1, 2, 3, 5, 6, 7}",
                "fullTitle": "Cases[{1, 0, 2, 0, 3, 5, 6, 7, 0, 0, 0}, Except[0]]    ➡️     {1, 2, 3, 5, 6, 7}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "dc03d5b6-0dd9-4a4b-bb71-55f458225376",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# Pick out elements that are not 0:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    2: null\\n    3: null\\n    5: null\\n    6: null\\n    7: null\\n  expect: \\n    1: null\\n    2: null\\n    3: null\\n    5: null\\n    6: null\\n    7: null\\n  expect_evaluated: \\n    1: null\\n    2: null\\n    3: null\\n    5: null\\n    6: null\\n    7: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "5": null,
                        "6": null,
                        "7": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "3": null,
                        "5": null,
                        "6": null,
                        "7": null
                    }
                }
            },
            {
                "title": "Cases[{{1, 4, a, 0}, {b, 3, 2, 2}, {c, c, 5, 5}}, _Integer, 2]    ➡️     {1, 4, 0, 3, 2, 2, 5, 5}",
                "fullTitle": "Cases[{{1, 4, a, 0}, {b, 3, 2, 2}, {c, c, 5, 5}}, _Integer, 2]    ➡️     {1, 4, 0, 3, 2, 2, 5, 5}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d1662a00-4fc9-41ce-9627-0aa6c6333245",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# Pick out cases of integers down to level 2:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Cases[Sqrt[Range[100]], _Integer, {1}, 3]    ➡️     {1, 2, 3}",
                "fullTitle": "Cases[Sqrt[Range[100]], _Integer, {1}, 3]    ➡️     {1, 2, 3}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "91f964a4-dc56-4f90-9b35-1e94c42de44c",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# Return only the first three matching elements:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    2: null\\n    3: null\\n  expect: \\n    1: null\\n    2: null\\n    3: null\\n  expect_evaluated: \\n    1: null\\n    2: null\\n    3: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "3": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "3": null
                    }
                }
            },
            {
                "title": "Cases[{f[{a, b}], f[{a}], g[{a}], f[{a, b, c, d}]}, f[x_] :> Length[x]]    ➡️     {2, 1, 4}",
                "fullTitle": "Cases[{f[{a, b}], f[{a}], g[{a}], f[{a, b, c, d}]}, f[x_] :> Length[x]]    ➡️     {2, 1, 4}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6fa770e2-8018-4fe4-adcc-4e343718aa42",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use :> to evaluate only after explicit elements have been found:\\n\\n\\ndata: \\n  got: \\n    1: null\\n    2: null\\n    4: null\\n  expect: \\n    1: null\\n    2: null\\n    4: null\\n  expect_evaluated: \\n    1: null\\n    2: null\\n    4: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "4": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "4": null
                    }
                }
            },
            {
                "title": "Cases[{1, 2, f[a, b]}, _, {0, Infinity}]    ➡️     {1, 2, a, b, f[a, b], {1, 2, f[a, b]}}",
                "fullTitle": "Cases[{1, 2, f[a, b]}, _, {0, Infinity}]    ➡️     {1, 2, a, b, f[a, b], {1, 2, f[a, b]}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "43bf3982-35ae-4480-a966-84f9c0cb5498",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find all possible subexpressions at any level:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Cases[{1, 2, f[a, b]}, _, {0, Infinity}, Heads -> True]    ➡️     {List, 1, 2, f, a, b, f[a, b], {1, 2, f[a, b]}}",
                "fullTitle": "Cases[{1, 2, f[a, b]}, _, {0, Infinity}, Heads -> True]    ➡️     {List, 1, 2, f, a, b, f[a, b], {1, 2, f[a, b]}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "44aae8be-b992-48c3-895c-4f670ed2b5e7",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find all possible subexpressions at any level, including the head of the expression:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Cases[<| 1 -> c, 2 -> <| 3 -> 1, a -> b |> |>, _Symbol, Infinity]    ➡️     {c, b}",
                "fullTitle": "Cases[<| 1 -> c, 2 -> <| 3 -> 1, a -> b |> |>, _Symbol, Infinity]    ➡️     {c, b}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3820b52d-4053-4fdb-88a9-20bd30b57c92",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# Pick elements from nested associations:\\n\\n\\ndata: \\n  got: \\n    c: null\\n    b: null\\n  expect: \\n    c: null\\n    b: null\\n  expect_evaluated: \\n    c: null\\n    b: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "c": null,
                        "b": null
                    },
                    "expected": {
                        "c": null,
                        "b": null
                    }
                }
            },
            {
                "title": "Cases[{a, 5, Pi}, _Symbol]    ➡️     {a, Pi}",
                "fullTitle": "Cases[{a, 5, Pi}, _Symbol]    ➡️     {a, Pi}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1d00fa4e-39b1-491b-b417-deee383666f7",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find symbols among the elements of an expression:\\n\\n\\ndata: \\n  got: \\n    a:  null\\n    Pi: null\\n  expect: \\n    a:  null\\n    Pi: null\\n  expect_evaluated: \\n    a:  null\\n    Pi: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "a": null,
                        "Pi": null
                    },
                    "expected": {
                        "a": null,
                        "Pi": null
                    }
                }
            },
            {
                "title": "Cases[{a, 5, Pi}, _Symbol, Heads -> True]    ➡️     {List, a, Pi}",
                "fullTitle": "Cases[{a, 5, Pi}, _Symbol, Heads -> True]    ➡️     {List, a, Pi}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4f06e8ea-5fec-437c-a825-7ad021d86fed",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# Also include the head of the expression in the search:\\n\\n\\ndata: \\n  got: \\n    List: null\\n    a:    null\\n    Pi:   null\\n  expect: \\n    List: null\\n    a:    null\\n    Pi:   null\\n  expect_evaluated: \\n    List: null\\n    a:    null\\n    Pi:   null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "List": null,
                        "a": null,
                        "Pi": null
                    },
                    "expected": {
                        "List": null,
                        "a": null,
                        "Pi": null
                    }
                }
            },
            {
                "title": "Length[Cases[{1, \"f\", g, \"h\", \"7\"}, _?StringQ]]    ➡️     3",
                "fullTitle": "Length[Cases[{1, \"f\", g, \"h\", \"7\"}, _?StringQ]]    ➡️     3",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bc099c82-d67c-45b5-82c8-1d1227492435",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Count,paclet:ref/Count] returns the length of the result given by RefLink[Cases,paclet:ref/Cases]:\\n\\n\\ndata: \\n  got:              3\\n  expect:           3\\n  expect_evaluated: 3\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 3,
                    "expected": 3
                }
            },
            {
                "title": "Count[{1, \"f\", g, \"h\", \"7\"}, _?StringQ]    ➡️     3",
                "fullTitle": "Count[{1, \"f\", g, \"h\", \"7\"}, _?StringQ]    ➡️     3",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "448d15ca-862b-4b34-8fca-3fb7ac9e4e08",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              3\\n  expect:           3\\n  expect_evaluated: 3\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": 3,
                    "expected": 3
                }
            },
            {
                "title": "Cases[{1, b -> Automatic, c -> 3}, _ -> Automatic]    ➡️     {Automatic, Automatic, Automatic}",
                "fullTitle": "Cases[{1, b -> Automatic, c -> 3}, _ -> Automatic]    ➡️     {Automatic, Automatic, Automatic}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f3d9f33e-5517-44e7-843a-78ebbaa62425",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# A rule transforms the matching elements into its right side:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Cases[{1, b -> Automatic, c -> 3}, HoldPattern[_ -> Automatic]]    ➡️     {b -> Automatic}",
                "fullTitle": "Cases[{1, b -> Automatic, c -> 3}, HoldPattern[_ -> Automatic]]    ➡️     {b -> Automatic}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cdf47b91-1125-40ce-bbe7-650178446eec",
                "parentUUID": "17b1bb40-7746-4a22-bf90-8759084665f0",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[HoldPattern,paclet:ref/HoldPattern] to treat the rule itself as a pattern:\\n\\n\\ndata: \\n  got: \\n    b -> Automatic: null\\n  expect: \\n    b -> Automatic: null\\n  expect_evaluated: \\n    b -> Automatic: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "b -> Automatic": null
                    },
                    "expected": {
                        "b -> Automatic": null
                    }
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "dc3543df-b6c5-4b77-9dcc-141bfc2a3073",
            "2c3502eb-1145-4de5-8aa3-4758dbf9ad27",
            "e9a0e47a-3385-492b-b3a0-b21e034fb55e",
            "3fddaf48-6d3b-4389-b518-6198551c0635",
            "b3cc8aab-5bb8-44dd-8125-5e9ad773df2d",
            "b0f9c4ec-fac4-411d-baf3-56a1c1984cc2",
            "b56fc6a7-f0c6-42e8-9270-01fc695c8ba2",
            "dc03d5b6-0dd9-4a4b-bb71-55f458225376",
            "d1662a00-4fc9-41ce-9627-0aa6c6333245",
            "91f964a4-dc56-4f90-9b35-1e94c42de44c",
            "6fa770e2-8018-4fe4-adcc-4e343718aa42",
            "43bf3982-35ae-4480-a966-84f9c0cb5498",
            "44aae8be-b992-48c3-895c-4f670ed2b5e7",
            "3820b52d-4053-4fdb-88a9-20bd30b57c92",
            "1d00fa4e-39b1-491b-b417-deee383666f7",
            "4f06e8ea-5fec-437c-a825-7ad021d86fed",
            "bc099c82-d67c-45b5-82c8-1d1227492435",
            "448d15ca-862b-4b34-8fca-3fb7ac9e4e08",
            "f3d9f33e-5517-44e7-843a-78ebbaa62425",
            "cdf47b91-1125-40ce-bbe7-650178446eec"
        ],
        "failures": [],
        "skipped": [],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "17b1bb40-7746-4a22-bf90-8759084665f0",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
