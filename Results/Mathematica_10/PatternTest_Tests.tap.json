{
    "stats": {
        "suites": 0,
        "tests": 27,
        "passes": 27,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T12:20:49.018Z",
        "end": "2018-06-03T12:20:49.018Z",
        "duration": 0,
        "testsRegistered": 27,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "Cases[{1, 2, 3.5, x, y, 4}, _?NumberQ]    ➡️     {1, 2, 3.5, 4}",
                "fullTitle": "Cases[{1, 2, 3.5, x, y, 4}, _?NumberQ]    ➡️     {1, 2, 3.5, 4}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "73e42dd2-35e9-4abf-a171-daf3299d03aa",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/PatternTest_Tests.m\\n#! 5\\n# SYSTEM: Mathematica_10\\n# TEST: PatternTest_Tests\\n# Find cases of any expression that satisfies the RefLink[NumberQ,paclet:ref/NumberQ] test:\\n\\n\\ndata: \\n  got: \\n    1:   null\\n    2:   null\\n    4:   null\\n    3.5: null\\n  expect: \\n    1:   null\\n    2:   null\\n    4:   null\\n    3.5: null\\n  expect_evaluated: \\n    1:   null\\n    2:   null\\n    4:   null\\n    3.5: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "3.5": null
                    },
                    "expected": {
                        "1": null,
                        "2": null,
                        "4": null,
                        "3.5": null
                    }
                }
            },
            {
                "title": "MatchQ[{1, E, Pi}, {__?Positive}]    ➡️     True",
                "fullTitle": "MatchQ[{1, E, Pi}, {__?Positive}]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "de462f7b-a866-41ab-884b-24e0f686df61",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"# Test whether a list has only positive elements:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "MatchQ[{1, I, 0}, {__?Positive}]    ➡️     False",
                "fullTitle": "MatchQ[{1, I, 0}, {__?Positive}]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6e4c62d0-e110-4608-832d-ecb0ac78adb8",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "f[2]    ➡️     0.451948",
                "fullTitle": "f[2]    ➡️     0.451948",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "02b60ff6-a1db-47ea-9112-20472089d074",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "f[(1 + Sqrt[2])/5]    ➡️     0.0135768",
                "fullTitle": "f[(1 + Sqrt[2])/5]    ➡️     0.0135768",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "af51159e-935a-4e04-a0b5-753230da9a89",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "f[a]    ➡️     f[a]",
                "fullTitle": "f[a]    ➡️     f[a]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "49df3790-c5d8-47f1-bf4b-994e62932d89",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              f[a]\\n  expect:           f[a]\\n  expect_evaluated: f[a]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[a]",
                    "expected": "f[a]"
                }
            },
            {
                "title": "{3, -5, 2, 7, -6, 3} /. _?Negative :> 0    ➡️     {3, 0, 2, 7, 0, 3}",
                "fullTitle": "{3, -5, 2, 7, -6, 3} /. _?Negative :> 0    ➡️     {3, 0, 2, 7, 0, 3}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0e77abd4-9d38-4cf2-9ee5-e81d39e2ae67",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"# Replace negative numbers with zero:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Cases[Range[0, 70], _?(Divisible[#1, 7] & )]    ➡️     {0, 7, 14, 21, 28, 35, 42, 49, 56, 63, 70}",
                "fullTitle": "Cases[Range[0, 70], _?(Divisible[#1, 7] & )]    ➡️     {0, 7, 14, 21, 28, 35, 42, 49, 56, 63, 70}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2541c630-e22f-4796-b023-4ab07d6e410d",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find elements in a list that are divisible by 7:\\n\\n\\ndata: \\n  got: \\n    0:  null\\n    7:  null\\n    14: null\\n    21: null\\n    28: null\\n    35: null\\n    42: null\\n    49: null\\n    56: null\\n    63: null\\n    70: null\\n  expect: \\n    0:  null\\n    7:  null\\n    14: null\\n    21: null\\n    28: null\\n    35: null\\n    42: null\\n    49: null\\n    56: null\\n    63: null\\n    70: null\\n  expect_evaluated: \\n    0:  null\\n    7:  null\\n    14: null\\n    21: null\\n    28: null\\n    35: null\\n    42: null\\n    49: null\\n    56: null\\n    63: null\\n    70: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "0": null,
                        "7": null,
                        "14": null,
                        "21": null,
                        "28": null,
                        "35": null,
                        "42": null,
                        "49": null,
                        "56": null,
                        "63": null,
                        "70": null
                    },
                    "expected": {
                        "0": null,
                        "7": null,
                        "14": null,
                        "21": null,
                        "28": null,
                        "35": null,
                        "42": null,
                        "49": null,
                        "56": null,
                        "63": null,
                        "70": null
                    }
                }
            },
            {
                "title": "Cases[Range[0, 350], _?(Divisible[#1, 7] && Divisible[#1, 5] & )]    ➡️     {0, 35, 70, 105, 140, 175, 210, 245, 280, 315, 350}",
                "fullTitle": "Cases[Range[0, 350], _?(Divisible[#1, 7] && Divisible[#1, 5] & )]    ➡️     {0, 35, 70, 105, 140, 175, 210, 245, 280, 315, 350}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0a2574ac-2848-4357-8378-97b07cb5edda",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"# Elements that are divisible by both 5 and 7:\\n\\n\\ndata: \\n  got: \\n    0:   null\\n    35:  null\\n    70:  null\\n    105: null\\n    140: null\\n    175: null\\n    210: null\\n    245: null\\n    280: null\\n    315: null\\n    350: null\\n  expect: \\n    0:   null\\n    35:  null\\n    70:  null\\n    105: null\\n    140: null\\n    175: null\\n    210: null\\n    245: null\\n    280: null\\n    315: null\\n    350: null\\n  expect_evaluated: \\n    0:   null\\n    35:  null\\n    70:  null\\n    105: null\\n    140: null\\n    175: null\\n    210: null\\n    245: null\\n    280: null\\n    315: null\\n    350: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "0": null,
                        "35": null,
                        "70": null,
                        "105": null,
                        "140": null,
                        "175": null,
                        "210": null,
                        "245": null,
                        "280": null,
                        "315": null,
                        "350": null
                    },
                    "expected": {
                        "0": null,
                        "35": null,
                        "70": null,
                        "105": null,
                        "140": null,
                        "175": null,
                        "210": null,
                        "245": null,
                        "280": null,
                        "315": null,
                        "350": null
                    }
                }
            },
            {
                "title": "Cases[Range[0, 35], _?(Divisible[#1, 7] || Divisible[#1, 5] & )]    ➡️     {0, 5, 7, 10, 14, 15, 20, 21, 25, 28, 30, 35}",
                "fullTitle": "Cases[Range[0, 35], _?(Divisible[#1, 7] || Divisible[#1, 5] & )]    ➡️     {0, 5, 7, 10, 14, 15, 20, 21, 25, 28, 30, 35}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "52ee2e43-43fe-47ea-ab15-68e6d6a9fe5d",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"# Elements that are divisible by either 5 or 7:\\n\\n\\ndata: \\n  got: \\n    0:  null\\n    5:  null\\n    7:  null\\n    10: null\\n    14: null\\n    15: null\\n    20: null\\n    21: null\\n    25: null\\n    28: null\\n    30: null\\n    35: null\\n  expect: \\n    0:  null\\n    5:  null\\n    7:  null\\n    10: null\\n    14: null\\n    15: null\\n    20: null\\n    21: null\\n    25: null\\n    28: null\\n    30: null\\n    35: null\\n  expect_evaluated: \\n    0:  null\\n    5:  null\\n    7:  null\\n    10: null\\n    14: null\\n    15: null\\n    20: null\\n    21: null\\n    25: null\\n    28: null\\n    30: null\\n    35: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "0": null,
                        "5": null,
                        "7": null,
                        "10": null,
                        "14": null,
                        "15": null,
                        "20": null,
                        "21": null,
                        "25": null,
                        "28": null,
                        "30": null,
                        "35": null
                    },
                    "expected": {
                        "0": null,
                        "5": null,
                        "7": null,
                        "10": null,
                        "14": null,
                        "15": null,
                        "20": null,
                        "21": null,
                        "25": null,
                        "28": null,
                        "30": null,
                        "35": null
                    }
                }
            },
            {
                "title": "f[0, 3]    ➡️     0",
                "fullTitle": "f[0, 3]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2d6420df-60f1-4017-976f-bcfe1712bd1c",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "f[2, 4]    ➡️     f[2, 4]",
                "fullTitle": "f[2, 4]    ➡️     f[2, 4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f62772aa-8343-468d-9799-1b8396c5aa39",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              f[2, 4]\\n  expect:           f[2, 4]\\n  expect_evaluated: f[2, 4]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[2, 4]",
                    "expected": "f[2, 4]"
                }
            },
            {
                "title": "f[-1, 3]    ➡️     f[-1, 3]",
                "fullTitle": "f[-1, 3]    ➡️     f[-1, 3]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "12133769-37a1-460f-b342-b56dbceaa670",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              f[-1, 3]\\n  expect:           f[-1, 3]\\n  expect_evaluated: f[-1, 3]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[-1, 3]",
                    "expected": "f[-1, 3]"
                }
            },
            {
                "title": "f[-2]    ➡️     1/4",
                "fullTitle": "f[-2]    ➡️     1/4",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ddb470a8-0dc0-41b4-a1c8-fc2971f664fb",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "f[2]    ➡️     f[2]",
                "fullTitle": "f[2]    ➡️     f[2]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "231728cd-ee9f-4666-9fca-d9a78ac4b91e",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              f[2]\\n  expect:           f[2]\\n  expect_evaluated: f[2]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[2]",
                    "expected": "f[2]"
                }
            },
            {
                "title": "f[-4]    ➡️     f[-4]",
                "fullTitle": "f[-4]    ➡️     f[-4]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c4d4c598-e384-49e4-9aa6-1b2623a078e0",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              f[-4]\\n  expect:           f[-4]\\n  expect_evaluated: f[-4]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "f[-4]",
                    "expected": "f[-4]"
                }
            },
            {
                "title": "MatchQ[{{a, b}, {c, d}}, ({_, _})?MatrixQ]    ➡️     True",
                "fullTitle": "MatchQ[{{a, b}, {c, d}}, ({_, _})?MatrixQ]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1f823637-eeff-4fe7-aa83-8153c455f5c2",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[PatternTest,paclet:ref/PatternTest] on a complex pattern:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "MatchQ[{a, b}, ({_, _})?MatrixQ]    ➡️     False",
                "fullTitle": "MatchQ[{a, b}, ({_, _})?MatrixQ]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "92a8f530-86dd-459d-a112-6d649fb6bba4",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Cases[Hold[Print[5], Sin, 2 + 2, 7, Sqrt[2]], _?(Function[{n}, NumberQ[Unevaluated[n]], HoldAll])]    ➡️     {7}",
                "fullTitle": "Cases[Hold[Print[5], Sin, 2 + 2, 7, Sqrt[2]], _?(Function[{n}, NumberQ[Unevaluated[n]], HoldAll])]    ➡️     {7}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ab2ce88e-d5b8-4bc2-afff-63a068fcf4bc",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"# Search for numbers without allowing expressions to evaluate:\\n\\n\\ndata: \\n  got: \\n    7: null\\n  expect: \\n    7: null\\n  expect_evaluated: \\n    7: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "7": null
                    },
                    "expected": {
                        "7": null
                    }
                }
            },
            {
                "title": "Cases[Hold[Print[5], Sin, 2 + 2, 7, Sqrt[2]], _?NumberQ]    ➡️     {4, 7}",
                "fullTitle": "Cases[Hold[Print[5], Sin, 2 + 2, 7, Sqrt[2]], _?NumberQ]    ➡️     {4, 7}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9b047ed4-8b2c-4fe6-b412-edf1e03d28ca",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"# Just using RefLink[NumberQ,paclet:ref/NumberQ] would allow each element to evaluate:\\n\\n\\ndata: \\n  got: \\n    4: null\\n    7: null\\n  expect: \\n    4: null\\n    7: null\\n  expect_evaluated: \\n    4: null\\n    7: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "4": null,
                        "7": null
                    },
                    "expected": {
                        "4": null,
                        "7": null
                    }
                }
            },
            {
                "title": "Cases[{{a, b}, {1, 2, 3}, {{d, 6}, {d, 10}}}, ({_, _})?VectorQ]    ➡️     {{a, b}}",
                "fullTitle": "Cases[{{a, b}, {1, 2, 3}, {{d, 6}, {d, 10}}}, ({_, _})?VectorQ]    ➡️     {{a, b}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "25d4154f-9645-4427-839a-33737b6b1e7a",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[PatternTest,paclet:ref/PatternTest] applies test functions to patterns, which need not have names:\\n\\n\\ndata: \\n  got: \\n    [object Object]: null\\n  expect: \\n    [object Object]: null\\n  expect_evaluated: \\n    [object Object]: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "[object Object]": null
                    },
                    "expected": {
                        "[object Object]": null
                    }
                }
            },
            {
                "title": "Cases[{{a, b}, {1, 2, 3}, {{d, 6}, {d, 10}}}, {x_, y_} /;  !ListQ[x] &&  !ListQ[y]]    ➡️     {{a, b}}",
                "fullTitle": "Cases[{{a, b}, {1, 2, 3}, {{d, 6}, {d, 10}}}, {x_, y_} /;  !ListQ[x] &&  !ListQ[y]]    ➡️     {{a, b}}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0f13f288-0d53-48c8-8ae8-e0d05922c6a1",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[Condition,paclet:ref/Condition] evaluates a Boolean expression on named parts of a pattern:\\n\\n\\ndata: \\n  got: \\n    [object Object]: null\\n  expect: \\n    [object Object]: null\\n  expect_evaluated: \\n    [object Object]: null\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": {
                        "[object Object]": null
                    },
                    "expected": {
                        "[object Object]": null
                    }
                }
            },
            {
                "title": "Replace[{1, 7, \"Hi\", 3, Indeterminate}, Except[_?NumericQ] :> 0, 1]    ➡️     {1, 7, 0, 3, 0}",
                "fullTitle": "Replace[{1, 7, \"Hi\", 3, Indeterminate}, Except[_?NumericQ] :> 0, 1]    ➡️     {1, 7, 0, 3, 0}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d289451b-6c47-4a13-bd0b-d55a32965f0c",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Except,paclet:ref/Except] to effectively negate RefLink[PatternTest,paclet:ref/PatternTest]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "MatchQ[Hold[2 + 3], Hold[_?IntegerQ]]    ➡️     True",
                "fullTitle": "MatchQ[Hold[2 + 3], Hold[_?IntegerQ]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "bf2e25bc-fe13-4c47-a3ef-fad910e4a814",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[PatternTest,paclet:ref/PatternTest] evaluates potential matches that are a part of a held expression:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "MatchQ[Hold[2 + 3], Hold[_?(IntegerQ[Unevaluated[#1]] & )]]    ➡️     True",
                "fullTitle": "MatchQ[Hold[2 + 3], Hold[_?(IntegerQ[Unevaluated[#1]] & )]]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "003d1140-876b-43db-bb94-d3c5e4ec47c6",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"# Due to normal evaluation rules, expressions may evaluate before being examined by the test function:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "MatchQ[Hold[2 + 3], Hold[_?(Function[{n}, IntegerQ[Unevaluated[n]], HoldAll])]]    ➡️     False",
                "fullTitle": "MatchQ[Hold[2 + 3], Hold[_?(Function[{n}, IntegerQ[Unevaluated[n]], HoldAll])]]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "66c09312-a2f5-4166-a6cd-7a4ca22788de",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use the three-argument form of RefLink[Function,paclet:ref/Function] or write the pattern using RefLink[Condition,paclet:ref/Condition] to prevent this:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "MatchQ[Hold[2 + 3], Hold[n_] /; IntegerQ[Unevaluated[n]]]    ➡️     False",
                "fullTitle": "MatchQ[Hold[2 + 3], Hold[n_] /; IntegerQ[Unevaluated[n]]]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4c31da41-f04f-49eb-a7d1-d1740abce29c",
                "parentUUID": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "73e42dd2-35e9-4abf-a171-daf3299d03aa",
            "de462f7b-a866-41ab-884b-24e0f686df61",
            "6e4c62d0-e110-4608-832d-ecb0ac78adb8",
            "02b60ff6-a1db-47ea-9112-20472089d074",
            "af51159e-935a-4e04-a0b5-753230da9a89",
            "49df3790-c5d8-47f1-bf4b-994e62932d89",
            "0e77abd4-9d38-4cf2-9ee5-e81d39e2ae67",
            "2541c630-e22f-4796-b023-4ab07d6e410d",
            "0a2574ac-2848-4357-8378-97b07cb5edda",
            "52ee2e43-43fe-47ea-ab15-68e6d6a9fe5d",
            "2d6420df-60f1-4017-976f-bcfe1712bd1c",
            "f62772aa-8343-468d-9799-1b8396c5aa39",
            "12133769-37a1-460f-b342-b56dbceaa670",
            "ddb470a8-0dc0-41b4-a1c8-fc2971f664fb",
            "231728cd-ee9f-4666-9fca-d9a78ac4b91e",
            "c4d4c598-e384-49e4-9aa6-1b2623a078e0",
            "1f823637-eeff-4fe7-aa83-8153c455f5c2",
            "92a8f530-86dd-459d-a112-6d649fb6bba4",
            "ab2ce88e-d5b8-4bc2-afff-63a068fcf4bc",
            "9b047ed4-8b2c-4fe6-b412-edf1e03d28ca",
            "25d4154f-9645-4427-839a-33737b6b1e7a",
            "0f13f288-0d53-48c8-8ae8-e0d05922c6a1",
            "d289451b-6c47-4a13-bd0b-d55a32965f0c",
            "bf2e25bc-fe13-4c47-a3ef-fad910e4a814",
            "003d1140-876b-43db-bb94-d3c5e4ec47c6",
            "66c09312-a2f5-4166-a6cd-7a4ca22788de",
            "4c31da41-f04f-49eb-a7d1-d1740abce29c"
        ],
        "failures": [],
        "skipped": [
            "02b60ff6-a1db-47ea-9112-20472089d074",
            "af51159e-935a-4e04-a0b5-753230da9a89",
            "2d6420df-60f1-4017-976f-bcfe1712bd1c",
            "ddb470a8-0dc0-41b4-a1c8-fc2971f664fb"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "47852b73-4d2a-4fe0-ab21-a8de3471df3b",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
