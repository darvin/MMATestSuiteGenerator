#! DOCKER > wolfram -script output/Tests/Unique_Tests.m
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
# SYSTEM: Mathematica_10
# TEST: Unique_Tests
ok  $Failed    ==>     HoldComplete[x1] # skip
ok  Unique[sym]    ==>     sym$149 # skip
# Create a unique symbol with no particular name:
ok  Unique[]    ==>     $1 # skip
# Create a unique symbol whose name begins with x:
ok  Unique["x"]    ==>     x1 # skip
# Create a unique symbol in the way RefLink[Module,paclet:ref/Module] does:
ok  Unique[x]    ==>     x$160 # skip
# Each use of RefLink[Unique,paclet:ref/Unique][symbol] increments RefLink[$ModuleNumber,paclet:ref/$ModuleNumber]:
ok  {$ModuleNumber, Unique[x], $ModuleNumber}    ==>     {171, x$171, 172} # skip
# RefLink[Unique,paclet:ref/Unique][symbol] creates symbols in the same way RefLink[Module,paclet:ref/Module] does:
ok  {Module[{x}, x], Unique[x]}    ==>     {x$1672, x$1673} # skip
# RefLink[Unique,paclet:ref/Unique]["x"] uses the first unused symbol of the form xnnn:
ok  {x1, x2, x4}; Unique["x"]    ==>     x3 # skip
