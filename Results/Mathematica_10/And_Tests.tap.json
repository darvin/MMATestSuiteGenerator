{
    "stats": {
        "suites": 0,
        "tests": 37,
        "passes": 36,
        "pending": 0,
        "failures": 1,
        "start": "2018-06-11T04:13:30.476Z",
        "end": "2018-06-11T04:13:30.476Z",
        "duration": 0,
        "testsRegistered": 37,
        "passPercent": 97.2972972972973,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "2 > 1 && Pi > 3    ➡️     True",
                "fullTitle": "2 > 1 && Pi > 3    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c0c01af4-c0d1-4259-b83b-14e760024f6f",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/And_Tests.m\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n#! 1\\n#! 1\\n#! 2\\n#! TextForm[ColonForm[MessageName[Power, infy], StringForm[Infinite expression `1` encountered., Short[HoldForm[0^(-1)], 3]]]]\\n#! TextForm[ColonForm[MessageName[Greater, nord], StringForm[Invalid comparison with `1` attempted., Short[HoldForm[I], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: And_Tests\\n# Combine assertions with &&:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "a && b &&  !c    ➡️     a && b &&  !c",
                "fullTitle": "a && b &&  !c    ➡️     a && b &&  !c",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1dbce88b-a9bc-442c-84d0-b74889ddc98b",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# A symbolic conjunction:\\n\\n\\ndata: \\n  got:              a && b && !c\\n  expect:           a && b &&  !c\\n  expect_evaluated: a && b && !c\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a && b && !c",
                    "expected": "a && b &&  !c"
                }
            },
            {
                "title": "x + 2*y == 3 && 4*x + 5*y == 6    ➡️     x + 2*y == 3 && 4*x + 5*y == 6",
                "fullTitle": "x + 2*y == 3 && 4*x + 5*y == 6    ➡️     x + 2*y == 3 && 4*x + 5*y == 6",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4c70d8b1-daf2-4c91-a77a-2d61aef626dc",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# A system of equations:\\n\\n\\ndata: \\n  got:              x + 2 y == 3 && 4 x + 5 y == 6\\n  expect:           x + 2*y == 3 && 4*x + 5*y == 6\\n  expect_evaluated: x + 2 y == 3 && 4 x + 5 y == 6\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x + 2 y == 3 && 4 x + 5 y == 6",
                    "expected": "x + 2*y == 3 && 4*x + 5*y == 6"
                }
            },
            {
                "title": "p && q    ➡️     p && q",
                "fullTitle": "p && q    ➡️     p && q",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7c7fcdb7-fcc2-4e9c-8384-3376afe960ab",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter using Esc\\\\[ThinSpace]and\\\\[ThinSpace]Esc:\\n\\n\\ndata: \\n  got:              p && q\\n  expect:           p && q\\n  expect_evaluated: p && q\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "p && q",
                    "expected": "p && q"
                }
            },
            {
                "title": "x && y && z    ➡️     x && y && z",
                "fullTitle": "x && y && z    ➡️     x && y && z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "58f26669-699a-45d8-8a92-2ff92635eca6",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[And,paclet:ref/And] works with any number of arguments:\\n\\n\\ndata: \\n  got:              x && y && z\\n  expect:           x && y && z\\n  expect_evaluated: x && y && z\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x && y && z",
                    "expected": "x && y && z"
                }
            },
            {
                "title": "FullForm[x && (y && z)]    ➡️     x && y && z",
                "fullTitle": "FullForm[x && (y && z)]    ➡️     x && y && z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9165497f-c42c-4a9d-a74b-4b45eb0150cf",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[And,paclet:ref/And] is associative:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x && True && z    ➡️     x && z",
                "fullTitle": "x && True && z    ➡️     x && z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3b089bfb-d672-40c8-94a6-02907abfb2d1",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[And,paclet:ref/And] with explicit RefLink[True,paclet:ref/True] or RefLink[False,paclet:ref/False] arguments will simplify:\\n\\n\\ndata: \\n  got:              x && z\\n  expect:           x && z\\n  expect_evaluated: x && z\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x && z",
                    "expected": "x && z"
                }
            },
            {
                "title": "x && False && z    ➡️     False",
                "fullTitle": "x && False && z    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "85ea3ba4-3eb6-48e2-910b-a8378b39d48e",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "(Print[1]; False) && (Print[2]; True)    ➡️     False",
                "fullTitle": "(Print[1]; False) && (Print[2]; True)    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "607486a0-3052-4386-8cba-9ad456a10d75",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[And,paclet:ref/And] evaluates its arguments in order, stopping when an argument evaluates to RefLink[False,paclet:ref/False]:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "(Print[1]; True) && (Print[2]; True)    ➡️     True",
                "fullTitle": "(Print[1]; True) && (Print[2]; True)    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "057c4ae6-5e27-4edc-a5f3-6afe4828eacf",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x != 0 && y == 1/x /. x -> 0    ➡️     False",
                "fullTitle": "x != 0 && y == 1/x /. x -> 0    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4537d56b-a650-42b0-bbab-8e062eb4e5e8",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# The order of arguments may be important:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "y == 1/x && x != 0 /. x -> 0    ➡️     False",
                "fullTitle": "y == 1/x && x != 0 /. x -> 0    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d4fc84db-0182-4ac5-9dc0-9293c99a9bc2",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "z && y && y && x    ➡️     z && y && y && x",
                "fullTitle": "z && y && y && x    ➡️     z && y && y && x",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d3310b7b-1016-4928-abe1-7cd5259acb88",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# Symbolic transformations will not preserve argument ordering:\\n\\n\\ndata: \\n  got:              z && y && y && x\\n  expect:           z && y && y && x\\n  expect_evaluated: z && y && y && x\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "z && y && y && x",
                    "expected": "z && y && y && x"
                }
            },
            {
                "title": "Simplify[%]    ➡️     x && y && z",
                "fullTitle": "Simplify[%]    ➡️     x && y && z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9f979e7c-42a7-4478-9778-1e941450d838",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x && y && z    ➡️     x && y && z",
                "fullTitle": "x && y && z    ➡️     x && y && z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "ced2d42d-1a4f-4c4e-b39c-7222b4815a0b",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[TraditionalForm,paclet:ref/TraditionalForm] formatting:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PositiveNumberQ[x_] := NumberQ[x] && Head[x] =!= Complex && x > 0; PositiveNumberQ[1]    ➡️     True",
                "fullTitle": "PositiveNumberQ[x_] := NumberQ[x] && Head[x] =!= Complex && x > 0; PositiveNumberQ[1]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "04a5a7da-3ba5-4b32-89eb-33428f75986c",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# Combine conditions in Wolfram Language code:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "PositiveNumberQ[I]    ➡️     False",
                "fullTitle": "PositiveNumberQ[I]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5c3e85e6-b0c9-4d0d-b927-12ec2350fb4e",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# If an argument of RefLink[And,paclet:ref/And] evaluates to RefLink[False,paclet:ref/False], any subsequent arguments are not evaluated:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "PositiveNumberQ2[x_] := NumberQ[x] && x > 0 && Head[x] =!= Complex; PositiveNumberQ2[I]    ➡️     False",
                "fullTitle": "PositiveNumberQ2[x_] := NumberQ[x] && x > 0 && Head[x] =!= Complex; PositiveNumberQ2[I]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "c8b45555-756b-4539-a107-252fce917aae",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# The argument order in RefLink[And,paclet:ref/And] matters; if the last two arguments are reversed, RefLink[I,paclet:ref/I]>0 is evaluated:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "Refine[(a^b)^c, a >= 0 && Element[b, Reals]]    ➡️     a^(b*c)",
                "fullTitle": "Refine[(a^b)^c, a >= 0 && Element[b, Reals]]    ➡️     a^(b*c)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b79ff3de-6338-4ca0-9df2-c417217d1531",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# Combine assumptions:\\n\\n\\ndata: \\n  got:              b c\\n  expect:           a^(b*c)\\n  expect_evaluated: b c\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "b c",
                    "expected": "a^(b*c)"
                }
            },
            {
                "title": "Reduce[x^2 + y^2 == 1 && x >= y, {x, y}]    ➡️     (Inequality[-(1/Sqrt[2]), LessEqual, x, Less, 1/Sqrt[2]] && y == -Sqrt[1 - x^2]) || (Inequality[1/Sqrt[2], LessEqual, x, Less, 1] && (y == -Sqrt[1 - x^2] || y == Sqrt[1 - x^2])) || (x == 1 && y == 0)",
                "fullTitle": "Reduce[x^2 + y^2 == 1 && x >= y, {x, y}]    ➡️     (Inequality[-(1/Sqrt[2]), LessEqual, x, Less, 1/Sqrt[2]] && y == -Sqrt[1 - x^2]) || (Inequality[1/Sqrt[2], LessEqual, x, Less, 1] && (y == -Sqrt[1 - x^2] || y == Sqrt[1 - x^2])) || (x == 1 && y == 0)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5857f7aa-9f16-4d78-813a-cfdb47b66e85",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"#! a\\n#! a\\n# Combine equations and inequalities; RefLink[And,paclet:ref/And] is used both in the input and in the output:\\n\\n\\ndata: \\n  got:              1               1                       2          1                                 2                    2\\n  expect:           (Inequality[-(1/Sqrt[2]), LessEqual, x, Less, 1/Sqrt[2]] && y == -Sqrt[1 - x^2]) || (Inequality[1/Sqrt[2], LessEqual, x, Less, 1] && (y == -Sqrt[1 - x^2] || y == Sqrt[1 - x^2])) || (x == 1 && y == 0)\\n  expect_evaluated: 1               1                       2          1                                 2                    2\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "1               1                       2          1                                 2                    2",
                    "expected": "(Inequality[-(1/Sqrt[2]), LessEqual, x, Less, 1/Sqrt[2]] && y == -Sqrt[1 - x^2]) || (Inequality[1/Sqrt[2], LessEqual, x, Less, 1] && (y == -Sqrt[1 - x^2] || y == Sqrt[1 - x^2])) || (x == 1 && y == 0)"
                }
            },
            {
                "title": "HoldComplete[RegionPlot[x^2 + y^2 < 1 && x + y > 0, {x, -2, 2}, {y, -2, 2}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[RegionPlot[x^2 + y^2 < 1 && x + y > 0, {x, -2, 2}, {y, -2, 2}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "3fccdfcc-7004-4d93-a9c6-557720ad74b5",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": true,
                "isHook": false,
                "context": "\"#! (-(-------) <= x < ------- && y == -Sqrt[1 - x ]) || (------- <= x < 1 && (y == -Sqrt[1 - x ] || y == Sqrt[1 - x ])) || (x == 1 && y == 0)\\n#!    Sqrt[2]         Sqrt[2]                            Sqrt[2]\\n#! (-(-------) <= x < ------- && y == -Sqrt[1 - x ]) || (------- <= x < 1 && (y == -Sqrt[1 - x ] || y == Sqrt[1 - x ])) || (x == 1 && y == 0)\\n#!    Sqrt[2]         Sqrt[2]                            Sqrt[2]\\n# Use RefLink[And,paclet:ref/And] to combine conditions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[RegionPlot3D[x^2 + y^2 + z^2 < 1 && x^2 + y^2 < z^2, {x, -1, 1}, {y, -1, 1}, {z, -1, 1}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[RegionPlot3D[x^2 + y^2 + z^2 < 1 && x^2 + y^2 < z^2, {x, -1, 1}, {y, -1, 1}, {z, -1, 1}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "09a43dda-db38-4e41-a67e-94ac6ee74739",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[ArrayPlot[Boole[CellularAutomaton[{And @@ #1 & , {}}, RandomChoice[{True, False}, 40], 20]]]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[ArrayPlot[Boole[CellularAutomaton[{And @@ #1 & , {}}, RandomChoice[{True, False}, 40], 20]]]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6577c2b9-b566-438d-86b9-00db619bb9d3",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# A cellular automaton based on RefLink[And,paclet:ref/And]:\\n\\n\\ndata: \\n  got:              -Graphics-\\n  expect:           $Failed\\n  expect_evaluated: $Failed\"",
                "state": "failed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "-Graphics-",
                    "expected": "$Failed"
                }
            },
            {
                "title": "Integrate[Boole[x^2 + y^2 < 1 && (x - 1)^2 + y^2 < 2], {x, -Infinity, Infinity}, {y, -Infinity, Infinity}]    ➡️     -1 + Pi",
                "fullTitle": "Integrate[Boole[x^2 + y^2 < 1 && (x - 1)^2 + y^2 < 2], {x, -Infinity, Infinity}, {y, -Infinity, Infinity}]    ➡️     -1 + Pi",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a6dda100-1cde-4860-bb4b-a6b96cf5ae19",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the area of the intersection of sets given by algebraic conditions:\\n\\n\\ndata: \\n  got:              -1 + Pi\\n  expect:           -1 + Pi\\n  expect_evaluated: -1 + Pi\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "-1 + Pi",
                    "expected": "-1 + Pi"
                }
            },
            {
                "title": "HoldComplete[RegionPlot[x^2 + y^2 < 1 && (x - 1)^2 + y^2 < 2, {x, -1.5, 2.5}, {y, -2, 2}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[RegionPlot[x^2 + y^2 < 1 && (x - 1)^2 + y^2 < 2, {x, -1.5, 2.5}, {y, -2, 2}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2c7c6132-6aa3-41bd-876c-3e8bd1109b53",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": true,
                "isHook": false,
                "context": "\"# This shows the set:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Grid[Outer[And, {True, False}, {True, False}]]    ➡️     True*False*False*False",
                "fullTitle": "Grid[Outer[And, {True, False}, {True, False}]]    ➡️     True*False*False*False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4232bf85-d4a2-44a3-8d62-0e24ac1bacb3",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": true,
                "isHook": false,
                "context": "\"# Truth table for RefLink[And,paclet:ref/And]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "FullForm[p || (q && r)]    ➡️     p || (q && r)",
                "fullTitle": "FullForm[p || (q && r)]    ➡️     p || (q && r)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8f199d2d-b200-4313-8a62-1bdffdaee82c",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": true,
                "isHook": false,
                "context": "\"# && has higher precedence than ||:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "(a || b) && (c || d || e)    ➡️     (a || b) && (c || d || e)",
                "fullTitle": "(a || b) && (c || d || e)    ➡️     (a || b) && (c || d || e)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "77afd318-019e-4cef-8922-047a58b3bbd6",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[BooleanConvert,paclet:ref/BooleanConvert] to expand RefLink[And,paclet:ref/And] with respect to RefLink[Or,paclet:ref/Or]:\\n\\n\\ndata: \\n  got:              (a || b) && (c || d || e)\\n  expect:           (a || b) && (c || d || e)\\n  expect_evaluated: (a || b) && (c || d || e)\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(a || b) && (c || d || e)",
                    "expected": "(a || b) && (c || d || e)"
                }
            },
            {
                "title": "BooleanConvert[%]    ➡️     (a && c) || (a && d) || (a && e) || (b && c) || (b && d) || (b && e)",
                "fullTitle": "BooleanConvert[%]    ➡️     (a && c) || (a && d) || (a && e) || (b && c) || (b && d) || (b && e)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "dcd2eb26-35be-494d-8a8f-8103ce2d5bae",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "BooleanConvert[ !(a && b)]    ➡️      !a ||  !b",
                "fullTitle": "BooleanConvert[ !(a && b)]    ➡️      !a ||  !b",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4c2bb118-69d5-4603-a461-13cb852356e3",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# De Morgan's laws relate RefLink[And,paclet:ref/And], RefLink[Or,paclet:ref/Or], and RefLink[Not,paclet:ref/Not]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "BooleanConvert[ !(a || b || c)]    ➡️      !a &&  !b &&  !c",
                "fullTitle": "BooleanConvert[ !(a || b || c)]    ➡️      !a &&  !b &&  !c",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "297075ea-96dc-452d-9d40-ca9722d3706e",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Boole[a]*Boole[b] - Boole[a && b]    ➡️     Boole[a]*Boole[b] - Boole[a && b]",
                "fullTitle": "Boole[a]*Boole[b] - Boole[a && b]    ➡️     Boole[a]*Boole[b] - Boole[a && b]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8f7c80d2-c771-4d93-a77d-985e095c85f9",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# Conjunction of conditions corresponds to the product or RefLink[Min,paclet:ref/Min] of RefLink[Boole,paclet:ref/Boole] functions:\\n\\n\\ndata: \\n  got:              Boole[a] Boole[b] - Boole[a && b]\\n  expect:           Boole[a]*Boole[b] - Boole[a && b]\\n  expect_evaluated: Boole[a] Boole[b] - Boole[a && b]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Boole[a] Boole[b] - Boole[a && b]",
                    "expected": "Boole[a]*Boole[b] - Boole[a && b]"
                }
            },
            {
                "title": "Simplify[%]    ➡️     0",
                "fullTitle": "Simplify[%]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "72975a26-fef0-4b26-a92c-f6b2913f45c7",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Min[Boole[a], Boole[b]] - Boole[a && b]    ➡️     -Boole[a && b] + Min[Boole[a], Boole[b]]",
                "fullTitle": "Min[Boole[a], Boole[b]] - Boole[a && b]    ➡️     -Boole[a && b] + Min[Boole[a], Boole[b]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "382ae7dc-9645-408a-9166-9da67d98d43a",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              -Boole[a && b] + Min[Boole[a], Boole[b]]\\n  expect:           -Boole[a && b] + Min[Boole[a], Boole[b]]\\n  expect_evaluated: -Boole[a && b] + Min[Boole[a], Boole[b]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "-Boole[a && b] + Min[Boole[a], Boole[b]]",
                    "expected": "-Boole[a && b] + Min[Boole[a], Boole[b]]"
                }
            },
            {
                "title": "Simplify[%]    ➡️     0",
                "fullTitle": "Simplify[%]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f85690b9-75a0-4f00-9745-4fd75e1ef115",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{p, q} && {r, s}    ➡️     {p, q} && {r, s}",
                "fullTitle": "{p, q} && {r, s}    ➡️     {p, q} && {r, s}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f7c20811-cd24-48f0-ba63-ec9cd872b668",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Thread,paclet:ref/Thread] to thread over lists:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Thread[%]    ➡️     {p && r, q && s}",
                "fullTitle": "Thread[%]    ➡️     {p && r, q && s}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "75aa7810-9eed-4b6a-b200-4704273de86d",
                "parentUUID": "b9c68630-420a-400e-a9a4-708073848257",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "c0c01af4-c0d1-4259-b83b-14e760024f6f",
            "1dbce88b-a9bc-442c-84d0-b74889ddc98b",
            "4c70d8b1-daf2-4c91-a77a-2d61aef626dc",
            "7c7fcdb7-fcc2-4e9c-8384-3376afe960ab",
            "58f26669-699a-45d8-8a92-2ff92635eca6",
            "9165497f-c42c-4a9d-a74b-4b45eb0150cf",
            "3b089bfb-d672-40c8-94a6-02907abfb2d1",
            "85ea3ba4-3eb6-48e2-910b-a8378b39d48e",
            "607486a0-3052-4386-8cba-9ad456a10d75",
            "057c4ae6-5e27-4edc-a5f3-6afe4828eacf",
            "4537d56b-a650-42b0-bbab-8e062eb4e5e8",
            "d4fc84db-0182-4ac5-9dc0-9293c99a9bc2",
            "d3310b7b-1016-4928-abe1-7cd5259acb88",
            "9f979e7c-42a7-4478-9778-1e941450d838",
            "ced2d42d-1a4f-4c4e-b39c-7222b4815a0b",
            "04a5a7da-3ba5-4b32-89eb-33428f75986c",
            "5c3e85e6-b0c9-4d0d-b927-12ec2350fb4e",
            "c8b45555-756b-4539-a107-252fce917aae",
            "b79ff3de-6338-4ca0-9df2-c417217d1531",
            "5857f7aa-9f16-4d78-813a-cfdb47b66e85",
            "3fccdfcc-7004-4d93-a9c6-557720ad74b5",
            "09a43dda-db38-4e41-a67e-94ac6ee74739",
            "a6dda100-1cde-4860-bb4b-a6b96cf5ae19",
            "2c7c6132-6aa3-41bd-876c-3e8bd1109b53",
            "4232bf85-d4a2-44a3-8d62-0e24ac1bacb3",
            "8f199d2d-b200-4313-8a62-1bdffdaee82c",
            "77afd318-019e-4cef-8922-047a58b3bbd6",
            "dcd2eb26-35be-494d-8a8f-8103ce2d5bae",
            "4c2bb118-69d5-4603-a461-13cb852356e3",
            "297075ea-96dc-452d-9d40-ca9722d3706e",
            "8f7c80d2-c771-4d93-a77d-985e095c85f9",
            "72975a26-fef0-4b26-a92c-f6b2913f45c7",
            "382ae7dc-9645-408a-9166-9da67d98d43a",
            "f85690b9-75a0-4f00-9745-4fd75e1ef115",
            "f7c20811-cd24-48f0-ba63-ec9cd872b668",
            "75aa7810-9eed-4b6a-b200-4704273de86d"
        ],
        "failures": [
            "6577c2b9-b566-438d-86b9-00db619bb9d3"
        ],
        "skipped": [
            "9165497f-c42c-4a9d-a74b-4b45eb0150cf",
            "9f979e7c-42a7-4478-9778-1e941450d838",
            "ced2d42d-1a4f-4c4e-b39c-7222b4815a0b",
            "3fccdfcc-7004-4d93-a9c6-557720ad74b5",
            "09a43dda-db38-4e41-a67e-94ac6ee74739",
            "2c7c6132-6aa3-41bd-876c-3e8bd1109b53",
            "4232bf85-d4a2-44a3-8d62-0e24ac1bacb3",
            "8f199d2d-b200-4313-8a62-1bdffdaee82c",
            "dcd2eb26-35be-494d-8a8f-8103ce2d5bae",
            "72975a26-fef0-4b26-a92c-f6b2913f45c7",
            "f85690b9-75a0-4f00-9745-4fd75e1ef115",
            "75aa7810-9eed-4b6a-b200-4704273de86d"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "b9c68630-420a-400e-a9a4-708073848257",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
