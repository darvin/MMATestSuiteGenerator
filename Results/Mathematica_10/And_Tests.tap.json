{
    "stats": {
        "suites": 0,
        "tests": 37,
        "passes": 37,
        "pending": 0,
        "failures": 0,
        "start": "2018-06-03T23:01:27.000Z",
        "end": "2018-06-03T23:01:27.000Z",
        "duration": 0,
        "testsRegistered": 37,
        "passPercent": 100,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "2 > 1 && Pi > 3    ➡️     True",
                "fullTitle": "2 > 1 && Pi > 3    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "46c727df-74a9-41aa-a577-dd13cf0b0060",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script output/Tests/And_Tests.m\\n#! 1\\n#! 1\\n#! 2\\n#! TextForm[ColonForm[MessageName[Power, infy], StringForm[Infinite expression `1` encountered., Short[HoldForm[0^(-1)], 3]]]]\\n# SYSTEM: Mathematica_10\\n# TEST: And_Tests\\n# Combine assertions with &&:\\n\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "a && b &&  !c    ➡️     a && b &&  !c",
                "fullTitle": "a && b &&  !c    ➡️     a && b &&  !c",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "69546ec1-3924-4344-82bf-c574f6f8ae0b",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"# A symbolic conjunction:\\n\\n\\ndata: \\n  got:              a && b &&  !c\\n  expect:           a && b &&  !c\\n  expect_evaluated: a && b &&  !c\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a && b &&  !c",
                    "expected": "a && b &&  !c"
                }
            },
            {
                "title": "x + 2*y == 3 && 4*x + 5*y == 6    ➡️     x + 2*y == 3 && 4*x + 5*y == 6",
                "fullTitle": "x + 2*y == 3 && 4*x + 5*y == 6    ➡️     x + 2*y == 3 && 4*x + 5*y == 6",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6adcc67e-a902-4698-9396-1701f0a57720",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"# A system of equations:\\n\\n\\ndata: \\n  got:              x + 2*y == 3 && 4*x + 5*y == 6\\n  expect:           x + 2*y == 3 && 4*x + 5*y == 6\\n  expect_evaluated: x + 2*y == 3 && 4*x + 5*y == 6\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x + 2*y == 3 && 4*x + 5*y == 6",
                    "expected": "x + 2*y == 3 && 4*x + 5*y == 6"
                }
            },
            {
                "title": "p && q    ➡️     p && q",
                "fullTitle": "p && q    ➡️     p && q",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "14376a22-aa56-415c-ac28-8ab86a36075d",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Enter using Esc\\\\[ThinSpace]and\\\\[ThinSpace]Esc:\\n\\n\\ndata: \\n  got:              p && q\\n  expect:           p && q\\n  expect_evaluated: p && q\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "p && q",
                    "expected": "p && q"
                }
            },
            {
                "title": "x && y && z    ➡️     x && y && z",
                "fullTitle": "x && y && z    ➡️     x && y && z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6c0bba3d-3af4-4593-b597-b6836558519c",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[And,paclet:ref/And] works with any number of arguments:\\n\\n\\ndata: \\n  got:              x && y && z\\n  expect:           x && y && z\\n  expect_evaluated: x && y && z\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x && y && z",
                    "expected": "x && y && z"
                }
            },
            {
                "title": "FullForm[x && (y && z)]    ➡️     x && y && z",
                "fullTitle": "FullForm[x && (y && z)]    ➡️     x && y && z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "9cad35a3-922c-4675-8a9f-32060e97a4c5",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[And,paclet:ref/And] is associative:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x && True && z    ➡️     x && z",
                "fullTitle": "x && True && z    ➡️     x && z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "021ee5f1-3c1e-4f37-bd31-ea1845ee2bf1",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[And,paclet:ref/And] with explicit RefLink[True,paclet:ref/True] or RefLink[False,paclet:ref/False] arguments will simplify:\\n\\n\\ndata: \\n  got:              x && z\\n  expect:           x && z\\n  expect_evaluated: x && z\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "x && z",
                    "expected": "x && z"
                }
            },
            {
                "title": "x && False && z    ➡️     False",
                "fullTitle": "x && False && z    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b9e139f3-6184-48b4-a53f-c7459e2e6ef1",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "(Print[1]; False) && (Print[2]; True)    ➡️     False",
                "fullTitle": "(Print[1]; False) && (Print[2]; True)    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "692166b0-fdd7-406d-941a-dc560549f408",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"# RefLink[And,paclet:ref/And] evaluates its arguments in order, stopping when an argument evaluates to RefLink[False,paclet:ref/False]:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "(Print[1]; True) && (Print[2]; True)    ➡️     True",
                "fullTitle": "(Print[1]; True) && (Print[2]; True)    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6ccc2bb5-d80f-46f1-8d36-a4b5aa77907a",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              true\\n  expect:           true\\n  expect_evaluated: true\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": true,
                    "expected": true
                }
            },
            {
                "title": "x != 0 && y == 1/x /. x -> 0    ➡️     False",
                "fullTitle": "x != 0 && y == 1/x /. x -> 0    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "df2784bc-d839-4a53-b0d9-e037e58c6c88",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"# The order of arguments may be important:\\n\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "y == 1/x && x != 0 /. x -> 0    ➡️     False",
                "fullTitle": "y == 1/x && x != 0 /. x -> 0    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "cc718621-d5ec-4594-9aaf-fa310c3b717a",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              false\\n  expect:           false\\n  expect_evaluated: false\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "expected": false
                }
            },
            {
                "title": "z && y && y && x    ➡️     z && y && y && x",
                "fullTitle": "z && y && y && x    ➡️     z && y && y && x",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "e093104e-49dd-4f0e-a765-1ba97bc4dd9e",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Symbolic transformations will not preserve argument ordering:\\n\\n\\ndata: \\n  got:              z && y && y && x\\n  expect:           z && y && y && x\\n  expect_evaluated: z && y && y && x\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "z && y && y && x",
                    "expected": "z && y && y && x"
                }
            },
            {
                "title": "Simplify[%]    ➡️     x && y && z",
                "fullTitle": "Simplify[%]    ➡️     x && y && z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "10f3e979-3823-4811-97db-6cf59ba5371a",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "x && y && z    ➡️     x && y && z",
                "fullTitle": "x && y && z    ➡️     x && y && z",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "09a4d60c-a4d4-486f-bdcb-5d54b742d13b",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": true,
                "isHook": false,
                "context": "\"# RefLink[TraditionalForm,paclet:ref/TraditionalForm] formatting:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PositiveNumberQ[1]    ➡️     True",
                "fullTitle": "PositiveNumberQ[1]    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "7600e4b0-c542-4699-b6e9-852629905d18",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PositiveNumberQ[I]    ➡️     False",
                "fullTitle": "PositiveNumberQ[I]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "b6772927-5588-4649-a0b0-d7c0b374a715",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": true,
                "isHook": false,
                "context": "\"# If an argument of RefLink[And,paclet:ref/And] evaluates to RefLink[False,paclet:ref/False], any subsequent arguments are not evaluated:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "PositiveNumberQ2[I]    ➡️     False",
                "fullTitle": "PositiveNumberQ2[I]    ➡️     False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1331d32b-c200-47a8-87bc-f4be7110b473",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Refine[(a^b)^c, a >= 0 && Element[b, Reals]]    ➡️     a^(b*c)",
                "fullTitle": "Refine[(a^b)^c, a >= 0 && Element[b, Reals]]    ➡️     a^(b*c)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "885ce96e-7f68-4191-b7e8-32b31fb07e43",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Combine assumptions:\\n\\n\\ndata: \\n  got:              a^(b*c)\\n  expect:           a^(b*c)\\n  expect_evaluated: a^(b*c)\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "a^(b*c)",
                    "expected": "a^(b*c)"
                }
            },
            {
                "title": "Reduce[x^2 + y^2 == 1 && x >= y, {x, y}]    ➡️     (Inequality[-(1/Sqrt[2]), LessEqual, x, Less, 1/Sqrt[2]] && y == -Sqrt[1 - x^2]) || (Inequality[1/Sqrt[2], LessEqual, x, Less, 1] && (y == -Sqrt[1 - x^2] || y == Sqrt[1 - x^2])) || (x == 1 && y == 0)",
                "fullTitle": "Reduce[x^2 + y^2 == 1 && x >= y, {x, y}]    ➡️     (Inequality[-(1/Sqrt[2]), LessEqual, x, Less, 1/Sqrt[2]] && y == -Sqrt[1 - x^2]) || (Inequality[1/Sqrt[2], LessEqual, x, Less, 1] && (y == -Sqrt[1 - x^2] || y == Sqrt[1 - x^2])) || (x == 1 && y == 0)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "a5c561a9-57a9-4917-83f0-954866f00063",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Combine equations and inequalities; RefLink[And,paclet:ref/And] is used both in the input and in the output:\\n\\n\\ndata: \\n  got:              (Inequality[-(1/Sqrt[2]), LessEqual, x, Less, 1/Sqrt[2]] && y == -Sqrt[1 - x^2]) || (Inequality[1/Sqrt[2], LessEqual, x, Less, 1] && (y == -Sqrt[1 - x^2] || y == Sqrt[1 - x^2])) || (x == 1 && y == 0)\\n  expect:           (Inequality[-(1/Sqrt[2]), LessEqual, x, Less, 1/Sqrt[2]] && y == -Sqrt[1 - x^2]) || (Inequality[1/Sqrt[2], LessEqual, x, Less, 1] && (y == -Sqrt[1 - x^2] || y == Sqrt[1 - x^2])) || (x == 1 && y == 0)\\n  expect_evaluated: (Inequality[-(1/Sqrt[2]), LessEqual, x, Less, 1/Sqrt[2]] && y == -Sqrt[1 - x^2]) || (Inequality[1/Sqrt[2], LessEqual, x, Less, 1] && (y == -Sqrt[1 - x^2] || y == Sqrt[1 - x^2])) || (x == 1 && y == 0)\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(Inequality[-(1/Sqrt[2]), LessEqual, x, Less, 1/Sqrt[2]] && y == -Sqrt[1 - x^2]) || (Inequality[1/Sqrt[2], LessEqual, x, Less, 1] && (y == -Sqrt[1 - x^2] || y == Sqrt[1 - x^2])) || (x == 1 && y == 0)",
                    "expected": "(Inequality[-(1/Sqrt[2]), LessEqual, x, Less, 1/Sqrt[2]] && y == -Sqrt[1 - x^2]) || (Inequality[1/Sqrt[2], LessEqual, x, Less, 1] && (y == -Sqrt[1 - x^2] || y == Sqrt[1 - x^2])) || (x == 1 && y == 0)"
                }
            },
            {
                "title": "HoldComplete[RegionPlot[x^2 + y^2 < 1 && x + y > 0, {x, -2, 2}, {y, -2, 2}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[RegionPlot[x^2 + y^2 < 1 && x + y > 0, {x, -2, 2}, {y, -2, 2}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fa20724f-b4c4-4f92-a00c-a9bfdfce8dd9",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": true,
                "isHook": false,
                "context": "\"# Use RefLink[And,paclet:ref/And] to combine conditions:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[RegionPlot3D[x^2 + y^2 + z^2 < 1 && x^2 + y^2 < z^2, {x, -1, 1}, {y, -1, 1}, {z, -1, 1}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[RegionPlot3D[x^2 + y^2 + z^2 < 1 && x^2 + y^2 < z^2, {x, -1, 1}, {y, -1, 1}, {z, -1, 1}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "93b90a94-7ae5-42d8-ac8c-6dae4ae188dc",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "HoldComplete[ArrayPlot[Boole[CellularAutomaton[{And @@ #1 & , {}}, RandomChoice[{True, False}, 40], 20]]]]    ➡️     $Failed # skip",
                "fullTitle": "HoldComplete[ArrayPlot[Boole[CellularAutomaton[{And @@ #1 & , {}}, RandomChoice[{True, False}, 40], 20]]]]    ➡️     $Failed # skip",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f1c84950-b247-42ac-aaa6-2744b719a1a2",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"# A cellular automaton based on RefLink[And,paclet:ref/And]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Integrate[Boole[x^2 + y^2 < 1 && (x - 1)^2 + y^2 < 2], {x, -Infinity, Infinity}, {y, -Infinity, Infinity}]    ➡️     -1 + Pi",
                "fullTitle": "Integrate[Boole[x^2 + y^2 < 1 && (x - 1)^2 + y^2 < 2], {x, -Infinity, Infinity}, {y, -Infinity, Infinity}]    ➡️     -1 + Pi",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f76b9e64-eadb-4545-bd73-8bb6752b12cc",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Find the area of the intersection of sets given by algebraic conditions:\\n\\n\\ndata: \\n  got:              -1 + Pi\\n  expect:           -1 + Pi\\n  expect_evaluated: -1 + Pi\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "-1 + Pi",
                    "expected": "-1 + Pi"
                }
            },
            {
                "title": "HoldComplete[RegionPlot[x^2 + y^2 < 1 && (x - 1)^2 + y^2 < 2, {x, -1.5, 2.5}, {y, -2, 2}]]    ➡️     $Failed",
                "fullTitle": "HoldComplete[RegionPlot[x^2 + y^2 < 1 && (x - 1)^2 + y^2 < 2, {x, -1.5, 2.5}, {y, -2, 2}]]    ➡️     $Failed",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "fc64af52-86a1-471f-b26b-7e77d12ac81a",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": true,
                "isHook": false,
                "context": "\"# This shows the set:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Grid[Outer[And, {True, False}, {True, False}]]    ➡️     True*False*False*False",
                "fullTitle": "Grid[Outer[And, {True, False}, {True, False}]]    ➡️     True*False*False*False",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5e01d110-0da3-4c1e-8be3-152616e1773e",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": true,
                "isHook": false,
                "context": "\"# Truth table for RefLink[And,paclet:ref/And]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "FullForm[p || (q && r)]    ➡️     p || (q && r)",
                "fullTitle": "FullForm[p || (q && r)]    ➡️     p || (q && r)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "5ca1916f-748b-433e-b8b7-049863768db0",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": true,
                "isHook": false,
                "context": "\"# && has higher precedence than ||:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "(a || b) && (c || d || e)    ➡️     (a || b) && (c || d || e)",
                "fullTitle": "(a || b) && (c || d || e)    ➡️     (a || b) && (c || d || e)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "d1e0cb90-1f7f-449d-8f8a-157183f36e35",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[BooleanConvert,paclet:ref/BooleanConvert] to expand RefLink[And,paclet:ref/And] with respect to RefLink[Or,paclet:ref/Or]:\\n\\n\\ndata: \\n  got:              (a || b) && (c || d || e)\\n  expect:           (a || b) && (c || d || e)\\n  expect_evaluated: (a || b) && (c || d || e)\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "(a || b) && (c || d || e)",
                    "expected": "(a || b) && (c || d || e)"
                }
            },
            {
                "title": "BooleanConvert[%]    ➡️     (a && c) || (a && d) || (a && e) || (b && c) || (b && d) || (b && e)",
                "fullTitle": "BooleanConvert[%]    ➡️     (a && c) || (a && d) || (a && e) || (b && c) || (b && d) || (b && e)",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "0b9f68bc-41aa-45c0-9967-32e321cf6ad3",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "BooleanConvert[ !(a && b)]    ➡️      !a ||  !b",
                "fullTitle": "BooleanConvert[ !(a && b)]    ➡️      !a ||  !b",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "37816de4-a55e-47a6-b79b-8a862a2f5b32",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"# De Morgan's laws relate RefLink[And,paclet:ref/And], RefLink[Or,paclet:ref/Or], and RefLink[Not,paclet:ref/Not]:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "BooleanConvert[ !(a || b || c)]    ➡️      !a &&  !b &&  !c",
                "fullTitle": "BooleanConvert[ !(a || b || c)]    ➡️      !a &&  !b &&  !c",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "720f5458-c4fd-4450-b321-eeab6b7f254c",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Boole[a]*Boole[b] - Boole[a && b]    ➡️     Boole[a]*Boole[b] - Boole[a && b]",
                "fullTitle": "Boole[a]*Boole[b] - Boole[a && b]    ➡️     Boole[a]*Boole[b] - Boole[a && b]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1ee34ef0-ca27-4fed-a8fa-50bccef50950",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Conjunction of conditions corresponds to the product or RefLink[Min,paclet:ref/Min] of RefLink[Boole,paclet:ref/Boole] functions:\\n\\n\\ndata: \\n  got:              Boole[a]*Boole[b] - Boole[a && b]\\n  expect:           Boole[a]*Boole[b] - Boole[a && b]\\n  expect_evaluated: Boole[a]*Boole[b] - Boole[a && b]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "Boole[a]*Boole[b] - Boole[a && b]",
                    "expected": "Boole[a]*Boole[b] - Boole[a && b]"
                }
            },
            {
                "title": "Simplify[%]    ➡️     0",
                "fullTitle": "Simplify[%]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "2ce6e8f8-287b-4b5b-b830-e3f9fd009182",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Min[Boole[a], Boole[b]] - Boole[a && b]    ➡️     -Boole[a && b] + Min[Boole[a], Boole[b]]",
                "fullTitle": "Min[Boole[a], Boole[b]] - Boole[a && b]    ➡️     -Boole[a && b] + Min[Boole[a], Boole[b]]",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "53dc9b04-85d2-4564-a497-0149f5927756",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"\\n\\ndata: \\n  got:              -Boole[a && b] + Min[Boole[a], Boole[b]]\\n  expect:           -Boole[a && b] + Min[Boole[a], Boole[b]]\\n  expect_evaluated: -Boole[a && b] + Min[Boole[a], Boole[b]]\"",
                "state": "passed",
                "err": {
                    "name": "",
                    "message": "",
                    "showDiff": true,
                    "actual": "-Boole[a && b] + Min[Boole[a], Boole[b]]",
                    "expected": "-Boole[a && b] + Min[Boole[a], Boole[b]]"
                }
            },
            {
                "title": "Simplify[%]    ➡️     0",
                "fullTitle": "Simplify[%]    ➡️     0",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "8b3b6a1c-1a75-4915-816d-0343f4002f69",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "{p, q} && {r, s}    ➡️     {p, q} && {r, s}",
                "fullTitle": "{p, q} && {r, s}    ➡️     {p, q} && {r, s}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "56f9966f-2863-4e4f-8a85-a5437aa59423",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": false,
                "isHook": false,
                "context": "\"# Use RefLink[Thread,paclet:ref/Thread] to thread over lists:\\n\"",
                "state": "passed",
                "err": {}
            },
            {
                "title": "Thread[%]    ➡️     {p && r, q && s}",
                "fullTitle": "Thread[%]    ➡️     {p && r, q && s}",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "6b35f8a2-3207-4516-a185-b324c94540de",
                "parentUUID": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
                "skipped": true,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "46c727df-74a9-41aa-a577-dd13cf0b0060",
            "69546ec1-3924-4344-82bf-c574f6f8ae0b",
            "6adcc67e-a902-4698-9396-1701f0a57720",
            "14376a22-aa56-415c-ac28-8ab86a36075d",
            "6c0bba3d-3af4-4593-b597-b6836558519c",
            "9cad35a3-922c-4675-8a9f-32060e97a4c5",
            "021ee5f1-3c1e-4f37-bd31-ea1845ee2bf1",
            "b9e139f3-6184-48b4-a53f-c7459e2e6ef1",
            "692166b0-fdd7-406d-941a-dc560549f408",
            "6ccc2bb5-d80f-46f1-8d36-a4b5aa77907a",
            "df2784bc-d839-4a53-b0d9-e037e58c6c88",
            "cc718621-d5ec-4594-9aaf-fa310c3b717a",
            "e093104e-49dd-4f0e-a765-1ba97bc4dd9e",
            "10f3e979-3823-4811-97db-6cf59ba5371a",
            "09a4d60c-a4d4-486f-bdcb-5d54b742d13b",
            "7600e4b0-c542-4699-b6e9-852629905d18",
            "b6772927-5588-4649-a0b0-d7c0b374a715",
            "1331d32b-c200-47a8-87bc-f4be7110b473",
            "885ce96e-7f68-4191-b7e8-32b31fb07e43",
            "a5c561a9-57a9-4917-83f0-954866f00063",
            "fa20724f-b4c4-4f92-a00c-a9bfdfce8dd9",
            "93b90a94-7ae5-42d8-ac8c-6dae4ae188dc",
            "f1c84950-b247-42ac-aaa6-2744b719a1a2",
            "f76b9e64-eadb-4545-bd73-8bb6752b12cc",
            "fc64af52-86a1-471f-b26b-7e77d12ac81a",
            "5e01d110-0da3-4c1e-8be3-152616e1773e",
            "5ca1916f-748b-433e-b8b7-049863768db0",
            "d1e0cb90-1f7f-449d-8f8a-157183f36e35",
            "0b9f68bc-41aa-45c0-9967-32e321cf6ad3",
            "37816de4-a55e-47a6-b79b-8a862a2f5b32",
            "720f5458-c4fd-4450-b321-eeab6b7f254c",
            "1ee34ef0-ca27-4fed-a8fa-50bccef50950",
            "2ce6e8f8-287b-4b5b-b830-e3f9fd009182",
            "53dc9b04-85d2-4564-a497-0149f5927756",
            "8b3b6a1c-1a75-4915-816d-0343f4002f69",
            "56f9966f-2863-4e4f-8a85-a5437aa59423",
            "6b35f8a2-3207-4516-a185-b324c94540de"
        ],
        "failures": [],
        "skipped": [
            "9cad35a3-922c-4675-8a9f-32060e97a4c5",
            "10f3e979-3823-4811-97db-6cf59ba5371a",
            "09a4d60c-a4d4-486f-bdcb-5d54b742d13b",
            "7600e4b0-c542-4699-b6e9-852629905d18",
            "b6772927-5588-4649-a0b0-d7c0b374a715",
            "1331d32b-c200-47a8-87bc-f4be7110b473",
            "fa20724f-b4c4-4f92-a00c-a9bfdfce8dd9",
            "93b90a94-7ae5-42d8-ac8c-6dae4ae188dc",
            "fc64af52-86a1-471f-b26b-7e77d12ac81a",
            "5e01d110-0da3-4c1e-8be3-152616e1773e",
            "5ca1916f-748b-433e-b8b7-049863768db0",
            "0b9f68bc-41aa-45c0-9967-32e321cf6ad3",
            "2ce6e8f8-287b-4b5b-b830-e3f9fd009182",
            "8b3b6a1c-1a75-4915-816d-0343f4002f69",
            "6b35f8a2-3207-4516-a185-b324c94540de"
        ],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "b577e16e-e120-4f14-ab78-e7bcbb69556d",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
