#! DOCKER > wolfram -script output/Tests/Expand_Tests.m
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
#! TextForm[ColonForm[MessageName[Thread, tdlen], StringForm[Objects of unequal length in `1` cannot be combined., Short[HoldForm[{1}*{1, 1}*{1, 0, 1}*{1, 1, 1, 1}*{1, 0, 0, 0, 1}*{1, 1, 0, 0, 1, 1}*{1, 0, 1, 0, 1, 0, 1}*{1, 1, 1, 1, 1, 1, 1, 1}*{1, 0, 0, 0, 0, 0, 0, 0, 1}*{1, 1, 0, 0, 0, 0, 0, 0, 1, 1}*{1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1}*{1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1}*{1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1}*{1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1}*{1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1}*{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}*{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1}*{1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}*{1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}*{1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1}*{1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1}*{1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1}*{1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}*{1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1}*{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1}*{1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}*{1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1}*{1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1}*{1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1}*{1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1}*{1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1}*{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}], 3]]]]
# SYSTEM: Mathematica_10
# TEST: Expand_Tests
# Expand polynomial expressions:
ok  Expand[(1 + x)^10]    ==>     1 + 10*x + 45*x^2 + 120*x^3 + 210*x^4 + 252*x^5 + 210*x^6 + 120*x^7 + 45*x^8 + 10*x^9 + x^10
    ---
    data:
        got:                2        3        4        5        6        7       8       9    10
#! 1 + 10 x + 45 x  + 120 x  + 210 x  + 252 x  + 210 x  + 120 x  + 45 x  + 10 x  + x
        expect: 1 + 10*x + 45*x^2 + 120*x^3 + 210*x^4 + 252*x^5 + 210*x^6 + 120*x^7 + 45*x^8 + 10*x^9 + x^10
        expect_evaluated:                2        3        4        5        6        7       8       9    10
#! 1 + 10 x + 45 x  + 120 x  + 210 x  + 252 x  + 210 x  + 120 x  + 45 x  + 10 x  + x
    ...
ok  Expand[(1 + x + y)*(2 - x)^3]    ==>     8 - 4*x - 6*x^2 + 5*x^3 - x^4 + 8*y - 12*x*y + 6*x^2*y - x^3*y
    ---
    data:
        got:              2      3    4                     2      3
#! 8 - 4 x - 6 x  + 5 x  - x  + 8 y - 12 x y + 6 x  y - x  y
        expect: 8 - 4*x - 6*x^2 + 5*x^3 - x^4 + 8*y - 12*x*y + 6*x^2*y - x^3*y
        expect_evaluated:              2      3    4                     2      3
#! 8 - 4 x - 6 x  + 5 x  - x  + 8 y - 12 x y + 6 x  y - x  y
    ...
# Variables need not be symbols:
ok  Expand[(f[Subscript[x, 1]] + f[Subscript[x, 2]])^3]    ==>     f[Subscript[x, 1]]^3 + 3*f[Subscript[x, 1]]^2*f[Subscript[x, 2]] + 3*f[Subscript[x, 1]]*f[Subscript[x, 2]]^2 + f[Subscript[x, 2]]^3
    ---
    data:
        got:      3          2                      2        3
#! f[x ]  + 3 f[x ]  f[x ] + 3 f[x ] f[x ]  + f[x ]
#!    1          1      2         1     2        2
        expect: f[Subscript[x, 1]]^3 + 3*f[Subscript[x, 1]]^2*f[Subscript[x, 2]] + 3*f[Subscript[x, 1]]*f[Subscript[x, 2]]^2 + f[Subscript[x, 2]]^3
        expect_evaluated:      3          2                      2        3
#! f[x ]  + 3 f[x ]  f[x ] + 3 f[x ] f[x ]  + f[x ]
#!    1          1      2         1     2        2
    ...
ok  Expand[(x + y)/z]    ==>     x/z + y/z
    ---
    data:
        got: x   y
#! - + -
#! z   z
        expect: x/z + y/z
        expect_evaluated: x   y
#! - + -
#! z   z
    ...
# Some powers can be symbolic:
ok  Expand[(x^s + y^s)^4]    ==>     x^(4*s) + 4*x^(3*s)*y^s + 6*x^(2*s)*y^(2*s) + 4*x^s*y^(3*s) + y^(4*s)
    ---
    data:
        got:  4 s      3 s  s      2 s  2 s      s  3 s    4 s
#! x    + 4 x    y  + 6 x    y    + 4 x  y    + y
        expect: x^(4*s) + 4*x^(3*s)*y^s + 6*x^(2*s)*y^(2*s) + 4*x^s*y^(3*s) + y^(4*s)
        expect_evaluated:  4 s      3 s  s      2 s  2 s      s  3 s    4 s
#! x    + 4 x    y  + 6 x    y    + 4 x  y    + y
    ...
# RefLink[Expand,paclet:ref/Expand] does not go into subexpressions; RefLink[ExpandAll,paclet:ref/ExpandAll] does:
ok  Expand[Sqrt[(1 + x)^2]]    ==>     Sqrt[(1 + x)^2]
    ---
    data:
        got:             2
#! Sqrt[(1 + x) ]
        expect: Sqrt[(1 + x)^2]
        expect_evaluated:             2
#! Sqrt[(1 + x) ]
    ...
ok  ExpandAll[Sqrt[(1 + x)^2]]    ==>     Sqrt[1 + 2*x + x^2]
    ---
    data:
        got:                 2
#! Sqrt[1 + 2 x + x ]
        expect: Sqrt[1 + 2*x + x^2]
        expect_evaluated:                 2
#! Sqrt[1 + 2 x + x ]
    ...
# Leave parts free of x unexpanded:
ok  Expand[(a + b)^2*(1 + x)^2, x]    ==>     (a + b)^2 + 2*(a + b)^2*x + (a + b)^2*x^2
    ---
    data:
        got:        2            2            2  2
#! (a + b)  + 2 (a + b)  x + (a + b)  x
        expect: (a + b)^2 + 2*(a + b)^2*x + (a + b)^2*x^2
        expect_evaluated:        2            2            2  2
#! (a + b)  + 2 (a + b)  x + (a + b)  x
    ...
# Leave parts free of 1+x unexpanded:
ok  Expand[(1 + x)^2 + (2 + x)^2, 1 + x]    ==>     1 + 2*x + x^2 + (2 + x)^2
    ---
    data:
        got:            2          2
#! 1 + 2 x + x  + (2 + x)
        expect: 1 + 2*x + x^2 + (2 + x)^2
        expect_evaluated:            2          2
#! 1 + 2 x + x  + (2 + x)
    ...
# Leave anything not matching x[_] unexpanded:
ok  Expand[(a[1] + a[2])*(x[1] + x[2])^2, x[_]]    ==>     (a[1] + a[2])*x[1]^2 + 2*(a[1] + a[2])*x[1]*x[2] + (a[1] + a[2])*x[2]^2
    ---
    data:
        got:                   2                                                 2
#! (a[1] + a[2]) x[1]  + 2 (a[1] + a[2]) x[1] x[2] + (a[1] + a[2]) x[2]
        expect: (a[1] + a[2])*x[1]^2 + 2*(a[1] + a[2])*x[1]*x[2] + (a[1] + a[2])*x[2]^2
        expect_evaluated:                   2                                                 2
#! (a[1] + a[2]) x[1]  + 2 (a[1] + a[2]) x[1] x[2] + (a[1] + a[2]) x[2]
    ...
# Work in the field GF(2):
ok  Expand[(1 + x)^10, Modulus -> 2]    ==>     1 + x^2 + x^8 + x^10
    ---
    data:
        got:      2    8    10
#! 1 + x  + x  + x
        expect: 1 + x^2 + x^8 + x^10
        expect_evaluated:      2    8    10
#! 1 + x  + x  + x
    ...
# The modulus does not have to be a prime:
ok  Expand[(1 + x)^10, Modulus -> 4]    ==>     1 + 2*x + x^2 + 2*x^4 + 2*x^6 + x^8 + 2*x^9 + x^10
    ---
    data:
        got:            2      4      6    8      9    10
#! 1 + 2 x + x  + 2 x  + 2 x  + x  + 2 x  + x
        expect: 1 + 2*x + x^2 + 2*x^4 + 2*x^6 + x^8 + 2*x^9 + x^10
        expect_evaluated:            2      4      6    8      9    10
#! 1 + 2 x + x  + 2 x  + 2 x  + x  + 2 x  + x
    ...
# Expand a trigonometric expression:
ok  Expand[Sin[x + y], Trig -> True]    ==>     Cos[y]*Sin[x] + Cos[x]*Sin[y]
    ---
    data:
        got: Cos[y] Sin[x] + Cos[x] Sin[y]
        expect: Cos[y]*Sin[x] + Cos[x]*Sin[y]
        expect_evaluated: Cos[y] Sin[x] + Cos[x] Sin[y]
    ...
# Many functions give results in unexpanded form:
ok  Product[x + i, {i, 6}]    ==>     (1 + x)*(2 + x)*(3 + x)*(4 + x)*(5 + x)*(6 + x)
    ---
    data:
        got: (1 + x) (2 + x) (3 + x) (4 + x) (5 + x) (6 + x)
        expect: (1 + x)*(2 + x)*(3 + x)*(4 + x)*(5 + x)*(6 + x)
        expect_evaluated: (1 + x) (2 + x) (3 + x) (4 + x) (5 + x) (6 + x)
    ...
ok  Expand[Product[x + i, {i, 6}]]    ==>     720 + 1764*x + 1624*x^2 + 735*x^3 + 175*x^4 + 21*x^5 + x^6
    ---
    data:
        got:                      2        3        4       5    6
#! 720 + 1764 x + 1624 x  + 735 x  + 175 x  + 21 x  + x
        expect: 720 + 1764*x + 1624*x^2 + 735*x^3 + 175*x^4 + 21*x^5 + x^6
        expect_evaluated:                      2        3        4       5    6
#! 720 + 1764 x + 1624 x  + 735 x  + 175 x  + 21 x  + x
    ...
# RefLink[Factor,paclet:ref/Factor] is essentially the inverse of RefLink[Expand,paclet:ref/Expand]:
ok  Expand[(1 + x + y)*(2 - x)^3]    ==>     8 - 4*x - 6*x^2 + 5*x^3 - x^4 + 8*y - 12*x*y + 6*x^2*y - x^3*y
    ---
    data:
        got:              2      3    4                     2      3
#! 8 - 4 x - 6 x  + 5 x  - x  + 8 y - 12 x y + 6 x  y - x  y
        expect: 8 - 4*x - 6*x^2 + 5*x^3 - x^4 + 8*y - 12*x*y + 6*x^2*y - x^3*y
        expect_evaluated:              2      3    4                     2      3
#! 8 - 4 x - 6 x  + 5 x  - x  + 8 y - 12 x y + 6 x  y - x  y
    ...
ok  Factor[%]    ==>     (-(-2 + x)^3)*(1 + x + y) # skip
# When no powers are involved, RefLink[Distribute,paclet:ref/Distribute] gives the same results as RefLink[Expand,paclet:ref/Expand]:
ok  Distribute[(1 + x)*(2 + x)*(3 + x)]    ==>     6 + 11*x + 6*x^2 + x^3
    ---
    data:
        got:               2    3
#! 6 + 11 x + 6 x  + x
        expect: 6 + 11*x + 6*x^2 + x^3
        expect_evaluated:               2    3
#! 6 + 11 x + 6 x  + x
    ...
ok  Expand[(1 + x)*(2 + x)*(3 + x)]    ==>     6 + 11*x + 6*x^2 + x^3
    ---
    data:
        got:               2    3
#! 6 + 11 x + 6 x  + x
        expect: 6 + 11*x + 6*x^2 + x^3
        expect_evaluated:               2    3
#! 6 + 11 x + 6 x  + x
    ...
# Direct application of the distributive law often generates far more terms than are needed:
ok  Distribute[Factor[x^6 - 1], Plus, Times, List, Times]    ==>     {-1, -x, -x^2, x, x^2, x^3, -x^2, -x^3, -x^4, -x, -x^2, -x^3, x^2, x^3, x^4, -x^3, -x^4, -x^5, x, x^2, x^3, -x^2, -x^3, -x^4, x^3, x^4, x^5, x^2, x^3, x^4, -x^3, -x^4, -x^5, x^4, x^5, x^6}
    ---
    data:
        got:            2      2   3    2    3    4        2    3   2   3   4    3    4    5      2   3    2    3    4   3   4   5   2   3   4    3    4    5   4   5   6
#! {-1, -x, -x , x, x , x , -x , -x , -x , -x, -x , -x , x , x , x , -x , -x , -x , x, x , x , -x , -x , -x , x , x , x , x , x , x , -x , -x , -x , x , x , x }
        expect: {-1, -x, -x^2, x, x^2, x^3, -x^2, -x^3, -x^4, -x, -x^2, -x^3, x^2, x^3, x^4, -x^3, -x^4, -x^5, x, x^2, x^3, -x^2, -x^3, -x^4, x^3, x^4, x^5, x^2, x^3, x^4, -x^3, -x^4, -x^5, x^4, x^5, x^6}
        expect_evaluated:            2      2   3    2    3    4        2    3   2   3   4    3    4    5      2   3    2    3    4   3   4   5   2   3   4    3    4    5   4   5   6
#! {-1, -x, -x , x, x , x , -x , -x , -x , -x, -x , -x , x , x , x , -x , -x , -x , x, x , x , -x , -x , -x , x , x , x , x , x , x , -x , -x , -x , x , x , x }
    ...
ok  Total[%]    ==>     -1 + x^6 # skip
ok  Style[Expand[(:-) + :-()^5], 20]    ==>     :-)^5 + 5*:-)^4*:-( + 10*:-)^3*:-(^2 + 10*:-)^2*:-(^3 + 5*:-)*:-(^4 + :-(^5
    ---
    data:
        got:  5      4         3  2       2  3        4    5
#! :-)  + 5 :-)  :-( + 10 :-)  :-(  + 10 :-)  :-(  + 5 :-) :-(  + :-(
        expect: :-)^5 + 5*:-)^4*:-( + 10*:-)^3*:-(^2 + 10*:-)^2*:-(^3 + 5*:-)*:-(^4 + :-(^5
        expect_evaluated:  5      4         3  2       2  3        4    5
#! :-)  + 5 :-)  :-( + 10 :-)  :-(  + 10 :-)  :-(  + 5 :-) :-(  + :-(
    ...
ok  Expand[(1 + x)^100]    ==>     1 + 100*x + 4950*x^2 + 161700*x^3 + 3921225*x^4 + 75287520*x^5 + 1192052400*x^6 + 16007560800*x^7 + 186087894300*x^8 + 1902231808400*x^9 + 17310309456440*x^10 + 141629804643600*x^11 + 1050421051106700*x^12 + 7110542499799200*x^13 + 44186942677323600*x^14 + 253338471349988640*x^15 + 1345860629046814650*x^16 + 6650134872937201800*x^17 + 30664510802988208300*x^18 + 132341572939212267400*x^19 + 535983370403809682970*x^20 + 2041841411062132125600*x^21 + 7332066885177656269200*x^22 + 24865270306254660391200*x^23 + 79776075565900368755100*x^24 + 242519269720337121015504*x^25 + 699574816500972464467800*x^26 + 1917353200780443050763600*x^27 + 4998813702034726525205100*x^28 + 12410847811948286545336800*x^29 + 29372339821610944823963760*x^30 + 66324638306863423796047200*x^31 + 143012501349174257560226775*x^32 + 294692427022540894366527900*x^33 + 580717429720889409486981450*x^34 + 1095067153187962886461165020*x^35 + 1977204582144932989443770175*x^36 + 3420029547493938143902737600*x^37 + 5670048986634686922786117600*x^38 + 9013924030034630492634340800*x^39 + 13746234145802811501267369720*x^40 + 20116440213369968050635175200*x^41 + 28258808871162574166368460400*x^42 + 38116532895986727945334202400*x^43 + 49378235797073715747364762200*x^44 + 61448471214136179596720592960*x^45 + 73470998190814997343905056800*x^46 + 84413487283064039501507937600*x^47 + 93206558875049876949581681100*x^48 + 98913082887808032681188722800*x^49 + 100891344545564193334812497256*x^50 + 98913082887808032681188722800*x^51 + 93206558875049876949581681100*x^52 + 84413487283064039501507937600*x^53 + 73470998190814997343905056800*x^54 + 61448471214136179596720592960*x^55 + 49378235797073715747364762200*x^56 + 38116532895986727945334202400*x^57 + 28258808871162574166368460400*x^58 + 20116440213369968050635175200*x^59 + 13746234145802811501267369720*x^60 + 9013924030034630492634340800*x^61 + 5670048986634686922786117600*x^62 + 3420029547493938143902737600*x^63 + 1977204582144932989443770175*x^64 + 1095067153187962886461165020*x^65 + 580717429720889409486981450*x^66 + 294692427022540894366527900*x^67 + 143012501349174257560226775*x^68 + 66324638306863423796047200*x^69 + 29372339821610944823963760*x^70 + 12410847811948286545336800*x^71 + 4998813702034726525205100*x^72 + 1917353200780443050763600*x^73 + 699574816500972464467800*x^74 + 242519269720337121015504*x^75 + 79776075565900368755100*x^76 + 24865270306254660391200*x^77 + 7332066885177656269200*x^78 + 2041841411062132125600*x^79 + 535983370403809682970*x^80 + 132341572939212267400*x^81 + 30664510802988208300*x^82 + 6650134872937201800*x^83 + 1345860629046814650*x^84 + 253338471349988640*x^85 + 44186942677323600*x^86 + 7110542499799200*x^87 + 1050421051106700*x^88 + 141629804643600*x^89 + 17310309456440*x^90 + 1902231808400*x^91 + 186087894300*x^92 + 16007560800*x^93 + 1192052400*x^94 + 75287520*x^95 + 3921225*x^96 + 161700*x^97 + 4950*x^98 + 100*x^99 + x^100
    ---
    data:
        got:                   2           3            4             5               6                7                 8                  9                   10                    11                     12                     13                      14                       15                        16                        17                         18                          19                          20                           21                           22                            23                            24                             25                             26                              27                              28                               29                               30                               31                                32                                33                                34                                 35                                 36                                 37                                 38                                 39                                  40                                  41                                  42                                  43                                  44                                  45                                  46                                  47                                  48                                  49                                   50                                  51                                  52                                  53                                  54                                  55                                  56                                  57                                  58                                  59                                  60                                 61                                 62                                 63                                 64                                 65                                66                                67                                68                               69                               70                               71                              72                              73                             74                             75                            76                            77                           78                           79                          80                          81                         82                        83                        84                       85                      86                     87                     88                    89                   90                  91                 92                93               94             95            96           97         98        99    100
#! 1 + 100 x + 4950 x  + 161700 x  + 3921225 x  + 75287520 x  + 1192052400 x  + 16007560800 x  + 186087894300 x  + 1902231808400 x  + 17310309456440 x   + 141629804643600 x   + 1050421051106700 x   + 7110542499799200 x   + 44186942677323600 x   + 253338471349988640 x   + 1345860629046814650 x   + 6650134872937201800 x   + 30664510802988208300 x   + 132341572939212267400 x   + 535983370403809682970 x   + 2041841411062132125600 x   + 7332066885177656269200 x   + 24865270306254660391200 x   + 79776075565900368755100 x   + 242519269720337121015504 x   + 699574816500972464467800 x   + 1917353200780443050763600 x   + 4998813702034726525205100 x   + 12410847811948286545336800 x   + 29372339821610944823963760 x   + 66324638306863423796047200 x   + 143012501349174257560226775 x   + 294692427022540894366527900 x   + 580717429720889409486981450 x   + 1095067153187962886461165020 x   + 1977204582144932989443770175 x   + 3420029547493938143902737600 x   + 5670048986634686922786117600 x   + 9013924030034630492634340800 x   + 13746234145802811501267369720 x   + 20116440213369968050635175200 x   + 28258808871162574166368460400 x   + 38116532895986727945334202400 x   + 49378235797073715747364762200 x   + 61448471214136179596720592960 x   + 73470998190814997343905056800 x   + 84413487283064039501507937600 x   + 93206558875049876949581681100 x   + 98913082887808032681188722800 x   + 100891344545564193334812497256 x   + 98913082887808032681188722800 x   + 93206558875049876949581681100 x   + 84413487283064039501507937600 x   + 73470998190814997343905056800 x   + 61448471214136179596720592960 x   + 49378235797073715747364762200 x   + 38116532895986727945334202400 x   + 28258808871162574166368460400 x   + 20116440213369968050635175200 x   + 13746234145802811501267369720 x   + 9013924030034630492634340800 x   + 5670048986634686922786117600 x   + 3420029547493938143902737600 x   + 1977204582144932989443770175 x   + 1095067153187962886461165020 x   + 580717429720889409486981450 x   + 294692427022540894366527900 x   + 143012501349174257560226775 x   + 66324638306863423796047200 x   + 29372339821610944823963760 x   + 12410847811948286545336800 x   + 4998813702034726525205100 x   + 1917353200780443050763600 x   + 699574816500972464467800 x   + 242519269720337121015504 x   + 79776075565900368755100 x   + 24865270306254660391200 x   + 7332066885177656269200 x   + 2041841411062132125600 x   + 535983370403809682970 x   + 132341572939212267400 x   + 30664510802988208300 x   + 6650134872937201800 x   + 1345860629046814650 x   + 253338471349988640 x   + 44186942677323600 x   + 7110542499799200 x   + 1050421051106700 x   + 141629804643600 x   + 17310309456440 x   + 1902231808400 x   + 186087894300 x   + 16007560800 x   + 1192052400 x   + 75287520 x   + 3921225 x   + 161700 x   + 4950 x   + 100 x   + x
        expect: 1 + 100*x + 4950*x^2 + 161700*x^3 + 3921225*x^4 + 75287520*x^5 + 1192052400*x^6 + 16007560800*x^7 + 186087894300*x^8 + 1902231808400*x^9 + 17310309456440*x^10 + 141629804643600*x^11 + 1050421051106700*x^12 + 7110542499799200*x^13 + 44186942677323600*x^14 + 253338471349988640*x^15 + 1345860629046814650*x^16 + 6650134872937201800*x^17 + 30664510802988208300*x^18 + 132341572939212267400*x^19 + 535983370403809682970*x^20 + 2041841411062132125600*x^21 + 7332066885177656269200*x^22 + 24865270306254660391200*x^23 + 79776075565900368755100*x^24 + 242519269720337121015504*x^25 + 699574816500972464467800*x^26 + 1917353200780443050763600*x^27 + 4998813702034726525205100*x^28 + 12410847811948286545336800*x^29 + 29372339821610944823963760*x^30 + 66324638306863423796047200*x^31 + 143012501349174257560226775*x^32 + 294692427022540894366527900*x^33 + 580717429720889409486981450*x^34 + 1095067153187962886461165020*x^35 + 1977204582144932989443770175*x^36 + 3420029547493938143902737600*x^37 + 5670048986634686922786117600*x^38 + 9013924030034630492634340800*x^39 + 13746234145802811501267369720*x^40 + 20116440213369968050635175200*x^41 + 28258808871162574166368460400*x^42 + 38116532895986727945334202400*x^43 + 49378235797073715747364762200*x^44 + 61448471214136179596720592960*x^45 + 73470998190814997343905056800*x^46 + 84413487283064039501507937600*x^47 + 93206558875049876949581681100*x^48 + 98913082887808032681188722800*x^49 + 100891344545564193334812497256*x^50 + 98913082887808032681188722800*x^51 + 93206558875049876949581681100*x^52 + 84413487283064039501507937600*x^53 + 73470998190814997343905056800*x^54 + 61448471214136179596720592960*x^55 + 49378235797073715747364762200*x^56 + 38116532895986727945334202400*x^57 + 28258808871162574166368460400*x^58 + 20116440213369968050635175200*x^59 + 13746234145802811501267369720*x^60 + 9013924030034630492634340800*x^61 + 5670048986634686922786117600*x^62 + 3420029547493938143902737600*x^63 + 1977204582144932989443770175*x^64 + 1095067153187962886461165020*x^65 + 580717429720889409486981450*x^66 + 294692427022540894366527900*x^67 + 143012501349174257560226775*x^68 + 66324638306863423796047200*x^69 + 29372339821610944823963760*x^70 + 12410847811948286545336800*x^71 + 4998813702034726525205100*x^72 + 1917353200780443050763600*x^73 + 699574816500972464467800*x^74 + 242519269720337121015504*x^75 + 79776075565900368755100*x^76 + 24865270306254660391200*x^77 + 7332066885177656269200*x^78 + 2041841411062132125600*x^79 + 535983370403809682970*x^80 + 132341572939212267400*x^81 + 30664510802988208300*x^82 + 6650134872937201800*x^83 + 1345860629046814650*x^84 + 253338471349988640*x^85 + 44186942677323600*x^86 + 7110542499799200*x^87 + 1050421051106700*x^88 + 141629804643600*x^89 + 17310309456440*x^90 + 1902231808400*x^91 + 186087894300*x^92 + 16007560800*x^93 + 1192052400*x^94 + 75287520*x^95 + 3921225*x^96 + 161700*x^97 + 4950*x^98 + 100*x^99 + x^100
        expect_evaluated:                   2           3            4             5               6                7                 8                  9                   10                    11                     12                     13                      14                       15                        16                        17                         18                          19                          20                           21                           22                            23                            24                             25                             26                              27                              28                               29                               30                               31                                32                                33                                34                                 35                                 36                                 37                                 38                                 39                                  40                                  41                                  42                                  43                                  44                                  45                                  46                                  47                                  48                                  49                                   50                                  51                                  52                                  53                                  54                                  55                                  56                                  57                                  58                                  59                                  60                                 61                                 62                                 63                                 64                                 65                                66                                67                                68                               69                               70                               71                              72                              73                             74                             75                            76                            77                           78                           79                          80                          81                         82                        83                        84                       85                      86                     87                     88                    89                   90                  91                 92                93               94             95            96           97         98        99    100
#! 1 + 100 x + 4950 x  + 161700 x  + 3921225 x  + 75287520 x  + 1192052400 x  + 16007560800 x  + 186087894300 x  + 1902231808400 x  + 17310309456440 x   + 141629804643600 x   + 1050421051106700 x   + 7110542499799200 x   + 44186942677323600 x   + 253338471349988640 x   + 1345860629046814650 x   + 6650134872937201800 x   + 30664510802988208300 x   + 132341572939212267400 x   + 535983370403809682970 x   + 2041841411062132125600 x   + 7332066885177656269200 x   + 24865270306254660391200 x   + 79776075565900368755100 x   + 242519269720337121015504 x   + 699574816500972464467800 x   + 1917353200780443050763600 x   + 4998813702034726525205100 x   + 12410847811948286545336800 x   + 29372339821610944823963760 x   + 66324638306863423796047200 x   + 143012501349174257560226775 x   + 294692427022540894366527900 x   + 580717429720889409486981450 x   + 1095067153187962886461165020 x   + 1977204582144932989443770175 x   + 3420029547493938143902737600 x   + 5670048986634686922786117600 x   + 9013924030034630492634340800 x   + 13746234145802811501267369720 x   + 20116440213369968050635175200 x   + 28258808871162574166368460400 x   + 38116532895986727945334202400 x   + 49378235797073715747364762200 x   + 61448471214136179596720592960 x   + 73470998190814997343905056800 x   + 84413487283064039501507937600 x   + 93206558875049876949581681100 x   + 98913082887808032681188722800 x   + 100891344545564193334812497256 x   + 98913082887808032681188722800 x   + 93206558875049876949581681100 x   + 84413487283064039501507937600 x   + 73470998190814997343905056800 x   + 61448471214136179596720592960 x   + 49378235797073715747364762200 x   + 38116532895986727945334202400 x   + 28258808871162574166368460400 x   + 20116440213369968050635175200 x   + 13746234145802811501267369720 x   + 9013924030034630492634340800 x   + 5670048986634686922786117600 x   + 3420029547493938143902737600 x   + 1977204582144932989443770175 x   + 1095067153187962886461165020 x   + 580717429720889409486981450 x   + 294692427022540894366527900 x   + 143012501349174257560226775 x   + 66324638306863423796047200 x   + 29372339821610944823963760 x   + 12410847811948286545336800 x   + 4998813702034726525205100 x   + 1917353200780443050763600 x   + 699574816500972464467800 x   + 242519269720337121015504 x   + 79776075565900368755100 x   + 24865270306254660391200 x   + 7332066885177656269200 x   + 2041841411062132125600 x   + 535983370403809682970 x   + 132341572939212267400 x   + 30664510802988208300 x   + 6650134872937201800 x   + 1345860629046814650 x   + 253338471349988640 x   + 44186942677323600 x   + 7110542499799200 x   + 1050421051106700 x   + 141629804643600 x   + 17310309456440 x   + 1902231808400 x   + 186087894300 x   + 16007560800 x   + 1192052400 x   + 75287520 x   + 3921225 x   + 161700 x   + 4950 x   + 100 x   + x
    ...
# Create a nested pattern corresponding to an additive cellular automaton (rule 60):
ok  Column[Table[CoefficientList[Expand[(1 + x)^t, Modulus -> 2], x], {t, 0, 31}]]    ==>     {1}*{1, 1}*{1, 0, 1}*{1, 1, 1, 1}*{1, 0, 0, 0, 1}*{1, 1, 0, 0, 1, 1}*{1, 0, 1, 0, 1, 0, 1}*{1, 1, 1, 1, 1, 1, 1, 1}*{1, 0, 0, 0, 0, 0, 0, 0, 1}*{1, 1, 0, 0, 0, 0, 0, 0, 1, 1}*{1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1}*{1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1}*{1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1}*{1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1}*{1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1}*{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}*{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1}*{1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1}*{1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1}*{1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1}*{1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1}*{1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1}*{1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1}*{1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1}*{1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1}*{1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1}*{1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1}*{1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1}*{1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1}*{1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1}*{1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1}*{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1} # skip
