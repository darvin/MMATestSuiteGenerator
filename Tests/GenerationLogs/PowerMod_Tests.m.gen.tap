#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/PowerMod.nb output/Tests/PowerMod_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/PowerMod.nb
# WRITING OUTPUT TO:     output/Tests/PowerMod_Tests.m
ok  PowerMod[2,10,3]    ==>     1
ok  Mod[2^10,3]    ==>     1
ok  PowerMod[3,-1,7]    ==>     5
ok  Mod[3 5,7]    ==>     1
ok  PowerMod[2,10^9,18]    ==>     16
ok  PowerMod[2,{10,11,12,13,14},5]    ==>     {4,3,1,2,4}
ok  PowerMod[6,1/2,10]    ==>     4
not ok  {p,q}=Prime[RandomInteger[{10^4,10^5},{2}]];
#! n=p q    ==>     441596560183
not ok  \[Lambda]=CarmichaelLambda[n]    ==>     73599183960
not ok  d=NestWhile[#1+1& ,Round[n/3],GCD[\[Lambda],#1]=!=1&]    ==>     147198853397
not ok  e =PowerMod[d,-1,\[Lambda]]    ==>     43827926933
not ok  PowerMod[ToCharacterCode["RSA in Mathematica"],e,n]    ==>     {370588429072,31547009034,13929388044,384734377610,162556565179,299295617632,384734377610,75741462274,285710361035,176224883944,85403059458,342434320296,188016646930,285710361035,176224883944,162556565179,65047462332,285710361035}
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[FromCharacterCode, intnm], StringForm[Non-negative machine-sized integer expected at position `2` in `1`., Short[HoldForm[FromCharacterCode[PowerMod[Hold[Out[$Line - 1]], 28655281537, 85965844609]]], 3], Short[HoldForm[1], 3]]]]
not ok  FromCharacterCode[PowerMod[%,d,n]]    ==>     RSA in Mathematica
#! TextForm[ColonForm[MessageName[PowerMod, root], StringForm[The equation x^`1` = `2` (mod `3`) has no integer solutions., Short[HoldForm[2], 3], Short[HoldForm[2], 3], Short[HoldForm[5], 3]]]]
#! TextForm[ColonForm[MessageName[PowerMod, root], StringForm[The equation x^`1` = `2` (mod `3`) has no integer solutions., Short[HoldForm[2], 3], Short[HoldForm[2], 3], Short[HoldForm[5], 3]]]]
ok  PowerMod[2,1/2,5]    ==>     PowerMod[2,1/2,5]
