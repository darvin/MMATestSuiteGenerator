#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/Indeterminate.nb output/Tests/Indeterminate_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/Indeterminate.nb
# WRITING OUTPUT TO:     output/Tests/Indeterminate_Tests.m
#! TextForm[ColonForm[MessageName[Power, infy], StringForm[Infinite expression `1` encountered., Short[HoldForm[0^(-1)], 3]]]]
#! TextForm[ColonForm[MessageName[Infinity, indet], StringForm[Indeterminate expression `1` encountered., Short[HoldForm[0*ComplexInfinity], 3]]]]
ok  0/0    ==>     Indeterminate
ok  Sin[Indeterminate]    ==>     Indeterminate
not ok  f[Indeterminate]    ==>     Indeterminate
ok  SetAccuracy[2,-1]    ==>     0.
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
not ok  %/%    ==>     Indeterminate
ok  DirectedInfinity[Indeterminate]    ==>     ComplexInfinity
ok  Interval[{0,1}]+Indeterminate    ==>     Indeterminate
ok  f[x]+Indeterminate    ==>     Indeterminate
ok  Integrate[Indeterminate,x]    ==>     Indeterminate
ok  D[Indeterminate,z]    ==>     Indeterminate
ok  {1,2,3}+Indeterminate    ==>     {Indeterminate,Indeterminate,Indeterminate}
ok  {1,2,3} Indeterminate    ==>     {Indeterminate,Indeterminate,Indeterminate}
ok  RealDigits[6.7,10,20]    ==>     {{6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,Indeterminate,Indeterminate,Indeterminate,Indeterminate},1}
ok  FromDigits[{{6,7,0,0,0,Indeterminate},1}]    ==>     6.7000
ok  NumberQ[Indeterminate]    ==>     False
ok  {Re[Indeterminate],Im[Indeterminate]}    ==>     {Indeterminate,Indeterminate}
#! TextForm[ColonForm[MessageName[Power, indet], StringForm[Indeterminate expression `1` encountered., Short[HoldForm[0^0], 3]]]]
ok  t^t/.t->0    ==>     Indeterminate
ok  Limit[t^t,t->0]    ==>     1
ok  s=Sum[Exp[k x],{k,n}]    ==>     (E^x (-1+E^(n x)))/(-1+E^x)
#! TextForm[ColonForm[MessageName[Power, infy], StringForm[Infinite expression `1` encountered., Short[HoldForm[0^(-1)], 3]]]]
#! TextForm[ColonForm[MessageName[Infinity, indet], StringForm[Indeterminate expression `1` encountered., Short[HoldForm[0*ComplexInfinity], 3]]]]
ok  s/.x->0    ==>     Indeterminate
ok  Limit[s,x->0]    ==>     n
#! TextForm[ColonForm[MessageName[Power, infy], StringForm[Infinite expression `1` encountered., Short[HoldForm[0``-0.7398225701435863^(-1)], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[Power, infy]], 3]]]]
#! TextForm[ColonForm[MessageName[Infinity, indet], StringForm[Indeterminate expression `1` encountered., Short[HoldForm[0``-1.4796451402871726*ComplexInfinity], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[Infinity, indet]], 3]]]]
not ok  NestList[Function[x,(x^2-1)/(x-1)-1],3`10,16]    ==>     {3.000000000,3.00000000,3.00000000,3.0000000,3.000000,3.000000,3.00000,3.0000,3.000,3.000,3.00,3.0,3.0,3.,0.,0.,Indeterminate}
ok  Simplify[(x^2-1)/(x-1)-1]    ==>     x
ok  NestList[Function[x,x],3`10,16]    ==>     {3.000000000,3.000000000,3.000000000,3.000000000,3.000000000,3.000000000,3.000000000,3.000000000,3.000000000,3.000000000,3.000000000,3.000000000,3.000000000,3.000000000,3.000000000,3.000000000,3.000000000}
ok  NestList[Function[x,(x^2-1)/(x-1)-1],3`20,16]    ==>     {3.0000000000000000000,3.000000000000000000,3.000000000000000000,3.00000000000000000,3.0000000000000000,3.0000000000000000,3.000000000000000,3.00000000000000,3.0000000000000,3.0000000000000,3.000000000000,3.00000000000,3.00000000000,3.0000000000,3.000000000,3.000000000,3.00000000}
ok  Indeterminate==Indeterminate    ==>     Indeterminate==Indeterminate
ok  Indeterminate===Indeterminate    ==>     True
ok  {And[True,Indeterminate],And[False,Indeterminate]}    ==>     {Indeterminate,False}
