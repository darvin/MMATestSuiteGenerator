{
    "stats": {
        "suites": 0,
        "tests": 4,
        "passes": 1,
        "pending": 0,
        "failures": 3,
        "start": "2018-06-11T04:15:26.036Z",
        "end": "2018-06-11T04:15:26.036Z",
        "duration": 0,
        "testsRegistered": 4,
        "passPercent": 25,
        "pendingPercent": 0,
        "other": 0,
        "hasOther": false,
        "skipped": 0,
        "hasSkipped": false,
        "passPercentClass": "danger",
        "pendingPercentClass": "danger"
    },
    "suites": {
        "title": "",
        "suites": [],
        "tests": [
            {
                "title": "originalcontext = Context[]    ➡️     Global`",
                "fullTitle": "originalcontext = Context[]    ➡️     Global`",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "4b4f5465-574c-4141-b064-e24a0538b4d7",
                "parentUUID": "629df07e-e020-496e-b4e3-b57f5af0df7d",
                "skipped": false,
                "isHook": false,
                "context": "\"#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/End.nb output/Tests/End_Tests.m\\n# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/End.nb\\n# WRITING OUTPUT TO:     output/Tests/End_Tests.m\\n#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]\\n#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[3], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]\\n#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[Syntax, sntxi], StringForm[Incomplete expression; more input is needed `4`., Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[], 3]]]]\\n#! TextForm[ColonForm[MessageName[ToExpression, sntx], StringForm[Invalid syntax in or before \\\"`1`\\\"`4`., Short[HoldForm[\\\\!\\\\(StandardForm\\\\`Global`\\\\)\\n#!                            ^], 3], Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[\\n#! ], 3]]]]\\n\"",
                "state": "failed",
                "err": {}
            },
            {
                "title": "Begin[\"MyContext`\"]    ➡️     MyContext`",
                "fullTitle": "Begin[\"MyContext`\"]    ➡️     MyContext`",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "711b16ae-5836-4755-b263-3cf6f6f06582",
                "parentUUID": "629df07e-e020-496e-b4e3-b57f5af0df7d",
                "skipped": false,
                "isHook": false,
                "context": "\"#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[Syntax, sntxi], StringForm[Incomplete expression; more input is needed `4`., Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[], 3]]]]\\n#! TextForm[ColonForm[MessageName[ToExpression, sntx], StringForm[Invalid syntax in or before \\\"`1`\\\"`4`., Short[HoldForm[\\\\!\\\\(StandardForm\\\\`MyContext`\\\\)\\n#!                               ^], 3], Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[\\n#! ], 3]]]]\\n\"",
                "state": "failed",
                "err": {}
            },
            {
                "title": "End[]    ➡️     MyContext`",
                "fullTitle": "End[]    ➡️     MyContext`",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "907ecd64-be26-4463-8c98-acc3c948111d",
                "parentUUID": "629df07e-e020-496e-b4e3-b57f5af0df7d",
                "skipped": false,
                "isHook": false,
                "context": "\"#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]\\n#! TextForm[ColonForm[MessageName[Syntax, sntxi], StringForm[Incomplete expression; more input is needed `4`., Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[], 3]]]]\\n#! TextForm[ColonForm[MessageName[ToExpression, sntx], StringForm[Invalid syntax in or before \\\"`1`\\\"`4`., Short[HoldForm[\\\\!\\\\(StandardForm\\\\`MyContext`\\\\)\\n#!                               ^], 3], Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[\\n#! ], 3]]]]\\n#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[ToExpression, sntx]], 3]]]]\\n\"",
                "state": "failed",
                "err": {}
            },
            {
                "title": "Context[] === originalcontext    ➡️     True",
                "fullTitle": "Context[] === originalcontext    ➡️     True",
                "timedOut": false,
                "duration": 0,
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "1c38c854-1de5-4cfc-ad0e-3e8b55f47f7c",
                "parentUUID": "629df07e-e020-496e-b4e3-b57f5af0df7d",
                "skipped": false,
                "isHook": false,
                "context": "\"\"",
                "state": "passed",
                "err": {}
            }
        ],
        "root": true,
        "fullFile": "",
        "file": "",
        "pending": [],
        "passes": [
            "1c38c854-1de5-4cfc-ad0e-3e8b55f47f7c"
        ],
        "failures": [
            "4b4f5465-574c-4141-b064-e24a0538b4d7",
            "711b16ae-5836-4755-b263-3cf6f6f06582",
            "907ecd64-be26-4463-8c98-acc3c948111d"
        ],
        "skipped": [],
        "duration": 0,
        "rootEmpty": false,
        "_timeout": 0,
        "uuid": "629df07e-e020-496e-b4e3-b57f5af0df7d",
        "beforeHooks": [],
        "afterHooks": []
    },
    "copyrightYear": 2018
}
