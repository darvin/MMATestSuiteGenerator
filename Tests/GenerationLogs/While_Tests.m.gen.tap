#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/While.nb output/Tests/While_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/While.nb
# WRITING OUTPUT TO:     output/Tests/While_Tests.m
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[3], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
ok  n=1;While[++n<4];n    ==>     4
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
ok  n=1;While[n<4,n++];n    ==>     4
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
ok  n=1;While[True,If[n>10,Break[]];n++]; n    ==>     11
ok  {a,b}={27,6};
#! While[b!=0,{a,b}={b,Mod[a,b]}];
#! a    ==>     3
ok  x=1.0;i=0;
#! While[Cos[x]!=x,x=Cos[x];i++];{x,i}    ==>     {0.739085,80}
ok  FullForm[n=1;While[n<5,n++]]    ==>     Null
#! 8
#! 4
#! 2
#! 1
ok  n=17;While[(n=Floor[n/2])!=0,Print[n]];n    ==>     0
ok  x=1.0;
#! Do[x=(x+2/x)/2,{5}];x    ==>     1.41421
ok  NestWhile[Floor[#/2]&,10,#>0&]    ==>     0
ok  x=10;While[x>0,x=Floor[x/2]];x    ==>     0
