#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/BlankSequence.nb output/Tests/BlankSequence_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/BlankSequence.nb
# WRITING OUTPUT TO:     output/Tests/BlankSequence_Tests.m
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[3], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
ok  f[x__]:= Length[{x}]; {f[x,y,z], f[]}    ==>     {3,f[]}
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
ok  f[x__Real]:=Plus[x]/Length[{x}]; {f[1.,N[Pi]],f[1,N[Pi]]}    ==>     {2.0708,f[1,3.14159]}
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
ok  f[x_Symbol, p__Integer]:= Apply[Plus, x^{p}]; {f[x,1,2],f[0,1,2],f[x,1,2.]}    ==>     {x+x^2,f[0,1,2],f[x,1,2.]}
