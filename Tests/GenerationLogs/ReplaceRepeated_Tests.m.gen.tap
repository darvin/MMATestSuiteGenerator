#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/ReplaceRepeated.nb output/Tests/ReplaceRepeated_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/ReplaceRepeated.nb
# WRITING OUTPUT TO:     output/Tests/ReplaceRepeated_Tests.m
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[3], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[ReplaceRepeated, reps], StringForm[`1` is neither a list of replacement rules nor a valid dispatch table, and so cannot be used for replacing., Short[HoldForm[{rules}], 3]]]]
#! TextForm[ColonForm[MessageName[$RecursionLimit, reclim], StringForm[Recursion depth of `1` exceeded., Short[HoldForm[1024], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
not ok  rules={Log[x_ y_]:>Log[x]+Log[y],Log[x_^k_]:>k Log[x]};; Log[Sqrt[a (b c^d)^e]]//.rules    ==>     1/2 (Log[a]+e (Log[b]+d Log[c]))
#! TextForm[ColonForm[MessageName[$RecursionLimit, reclim], StringForm[Recursion depth of `1` exceeded., Short[HoldForm[1024], 3]]]]
#! TextForm[ColonForm[MessageName[ReplaceAll, reps], StringForm[`1` is neither a list of replacement rules nor a valid dispatch table, and so cannot be used for replacing., Short[HoldForm[{Hold[Span[{Log[(x_)*(y_)] :> Log[x] + Log[y], Log[(x_)^(k_)] :> k*Log[x]}, Log[Sqrt[a*(b*c^d)^e]]]]}], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
not ok  Log[Sqrt[a (b c^d)^e]]/.rules    ==>     1/2 Log[a (b c^d)^e]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
ok  f[a][b][c][d]//.g_[x_][y__]->g[x,y]    ==>     f[a,b,c,d]
