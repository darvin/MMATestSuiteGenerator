#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/Catch.nb output/Tests/Catch_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/Catch.nb
# WRITING OUTPUT TO:     output/Tests/Catch_Tests.m
ok  Catch[a;b;Throw[c];d;e]    ==>     c
not ok  Catch[f[2]+f[11]]    ==>     overflow
not ok  Catch[f[2]+f[3]]    ==>     8
ok  Catch[Do[If[i!>10^10,Throw[i]],{i,100}]]    ==>     14
ok  Catch[If[#<0,Throw[#]]&/@{1,2,0,-1,5,6}]    ==>     -1
ok  Catch[{a,Throw[b],c}]    ==>     b
ok  Catch[a^2+b^2+c^2/.b:>Throw[bbb]]    ==>     bbb
ok  Catch[{Catch[{a,Throw[b],c}],d,e}]    ==>     {b,d,e}
ok  Catch[{Throw[a],Throw[b],Throw[c]}]    ==>     a
ok  Catch[Throw/@{a,b,c}]    ==>     a
not ok  Catch[Sum[f[i],{i,5,-5,-1}]]    ==>     negative
not ok  ff/@{-1,0,1}    ==>     {Indeterminate,\[Infinity],1}
ok  Catch[Throw[a,u],u]    ==>     a
ok  Catch[f[Catch[Throw[a,u],u]],v]    ==>     f[a]
ok  Catch[f[Catch[Throw[a,u],v]],u]    ==>     a
ok  Module[{u},Catch[Throw[a,u],u]]    ==>     a
ok  Catch[Do[If[PrimeQ[i],Throw[i]],{i,10^10,10^10+1000}]]    ==>     10000000019
ok  Catch[Do[If[Mod[17^i,19]==1,Throw[i]],{i,19}]]    ==>     9
ok  NestList[#^2+1&,2,6]    ==>     {2,5,26,677,458330,210066388901,44127887745906175987802}
ok  Catch[NestList[If[#>1000,Throw[#],#^2+1]&,2,6]]    ==>     458330
#! TextForm[ColonForm[MessageName[Power, infy], StringForm[Infinite expression `1` encountered., Short[HoldForm[0^(-1)], 3]]]]
ok  Catch[2+Check[1/(1+1/0),Throw[error]]]    ==>     error
ok  Catch[2+Check[1/(1+1/2),Throw[error]]]    ==>     8/3
