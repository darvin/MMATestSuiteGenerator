#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/ComplexExpand.nb output/Tests/ComplexExpand_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/ComplexExpand.nb
# WRITING OUTPUT TO:     output/Tests/ComplexExpand_Tests.m
ok  ComplexExpand[Sin[x + I y]]    ==>     Cosh[y] Sin[x]+I Cos[x] Sinh[y]
ok  ComplexExpand[Sin[x],x]    ==>     Cosh[Im[x]] Sin[Re[x]]+I Cos[Re[x]] Sinh[Im[x]]
ok  ComplexExpand[Re[z^5-2z^3-z+1],z]    ==>     1-Re[z]+6 Im[z]^2 Re[z]+5 Im[z]^4 Re[z]-2 Re[z]^3-10 Im[z]^2 Re[z]^3+Re[z]^5
ok  ComplexExpand[Cos[x+I y]+Tanh[z],{z}]    ==>     Cos[x] Cosh[y]+I (Sin[2 Im[z]]/(Cos[2 Im[z]]+Cosh[2 Re[z]])-Sin[x] Sinh[y])+Sinh[2 Re[z]]/(Cos[2 Im[z]]+Cosh[2 Re[z]])
ok  ComplexExpand[Re[ArcCot[x+I y]]+Im[ArcSinh[x-I y]]]    ==>     -(1/2) Arg[1-I/(x+I y)]+1/2 Arg[1+I/(x+I y)]+Arg[x+Sqrt[1+(x-I y)^2]-I y]
ok  ComplexExpand[Abs[2^z Log[2z]],z]    ==>     2^Re[z] Sqrt[Arg[z]^2+(Log[2]+1/2 Log[Im[z]^2+Re[z]^2])^2]
ok  ComplexExpand[Re[Log[Sin[Exp[x+I y]^2]]]]    ==>     1/2 Log[Cosh[E^(2 x) Sin[2 y]]^2 Sin[E^(2 x) Cos[2 y]]^2+Cos[E^(2 x) Cos[2 y]]^2 Sinh[E^(2 x) Sin[2 y]]^2]
ok  ComplexExpand[Re[Tan[z]],z]    ==>     Sin[2 Re[z]]/(Cos[2 Re[z]]+Cosh[2 Im[z]])
ok  ComplexExpand[Re[Tan[z]],z,TargetFunctions->{Abs,Arg}]    ==>     Sin[2 Abs[z] Cos[Arg[z]]]/(Cos[2 Abs[z] Cos[Arg[z]]]+Cosh[2 Abs[z] Sin[Arg[z]]])
ok  ComplexExpand[Re[Tan[z]],z,TargetFunctions->Conjugate]    ==>     Sin[z+Conjugate[z]]/(Cos[z-Conjugate[z]]+Cos[z+Conjugate[z]])
ok  ComplexExpand[Re[Sin[x+I y]]]    ==>     Cosh[y] Sin[x]
ok  TrigExpand[Sin[x+I y]]    ==>     Cosh[y] Sin[x]+I Cos[x] Sinh[y]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
not ok  Refine[Re[%],Element[x|y,Reals]]    ==>     Cosh[y] Sin[x]
