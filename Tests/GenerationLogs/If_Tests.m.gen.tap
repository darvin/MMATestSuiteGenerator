#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/If.nb output/Tests/If_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/If.nb
# WRITING OUTPUT TO:     output/Tests/If_Tests.m
not ok  abs/@{-1,0,1}    ==>     {1,0,1}
ok  If[a<b,1,0]    ==>     If[a<b,1,0]
ok  If[a<b,1,0,Indeterminate]    ==>     Indeterminate
ok  If[TrueQ[a<b],1,0]    ==>     0
ok  f=If[Round[x]>x,x,-x]    ==>     If[Round[x]>x,x,-x]
#! TextForm[ColonForm[MessageName[Piecewise, pairs], StringForm[The first argument `1` of Piecewise is not a list of pairs., Short[HoldForm[-x], 3]]]]
not ok  PiecewiseExpand[f,0<x<5]    ==>     \[Piecewise]-x	1<=x<3/2||2<=x<=5/2||3<=x<7/2||4<=x<=9/2||x<=1/2
#! x	True
not ok  Reduce[f<5&&0<x<10,x,Reals]    ==>     0<x<11/2||6<=x<=13/2||7<=x<15/2||8<=x<=17/2||9<=x<19/2
ok  Integrate[f,{x,0,10}]    ==>     5/2
ok  D[f,x]    ==>     If[Round[x]>x,1,-1]
#! TextForm[ColonForm[MessageName[Syntax, sntxi], StringForm[Incomplete expression; more input is needed `4`., Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[], 3]]]]
#! TextForm[ColonForm[MessageName[ToExpression, sntx], StringForm[Invalid syntax in or before "`1`"`4`., Short[HoldForm[PlotRange->{{0, 240}, {0, 155}}]\)\)
#!                                     ^], 3], Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[
#! ], 3]]]]
#! TextForm[ColonForm[MessageName[Syntax, sntxi], StringForm[Incomplete expression; more input is needed `4`., Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[], 3]]]]
#! TextForm[ColonForm[MessageName[ToExpression, sntx], StringForm[Invalid syntax in or before "`1`"`4`., Short[HoldForm[PlotRange->{{0, 240}, {0, 155}}]\)\)
#!                                     ^], 3], Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[
#! ], 3]]]]
not ok  Plot[f,{x,-2,2}]    ==>     \!\(\*
#! GraphicsBox[
#! TagBox[RasterBox[CompressedData["
#! 1:eJztnftbE1cax/vs7g/7b+yfsvtsFZWLiOKttl6n9dJg1U5129Rqsa3SqvQi
#! 2kaBQYgIEQ2KKF64BCVC0CAECRowwGCUAMEAEQLsm8RAkEjuc2YO7+epbQyH
#! mbeT75zzPZP3nPdfm9NWMH/74IMP9v4T/rVi01f/3rNn04GUf8Bf/nNg37bN
#! f4cXf8GfQfjjej2FIAiCILTgtOgyZIybdI3Z7vMTh0Yhd78vr5z1PoKIFmeF
#! nJEp9c6pKaM6nWHLHN4f2PQcwyh4xxSvUUALm/d90DeZSBEkME6jptJgBTlP
#! 2fVZDMNNd8QGTibjDO4mBpaR6b0/QD0j4sdp1YG3UGgt0+8YOHmW1up+aeNk
#! ch3qWQRoajpGR8dJRyF2eJ0SVMpped839Rzr1bNVwbC+ep5G6EDpheeH7t59
#! FrAZ6Hl1akFLiyVgywWLuTKTYVgt79Kr0+k2Hlar3Tll0WQyrBrstMNcBlNF
#! k/Nte5Rx1Cm/3rZsSXZ7e18wjWuqO+IWnc3J1k1MTMY6MOnhNGX4drisyjZl
#! h3kgZwB529TeBx8qg3X6N1DPUWRoyCH/5ubGT4pMJmvg1l76+ob37L66c/tl
#! vscWuDXig8NudzhnvYN6jhaNjT2J8bmZJ2vHxpyBW8+h6GJT3KJzZdeeRD2w
#! BQWa58gZH5/IOnU/JTnvgbYrkuM8e2bdsL7w4LcVr1+/iVZsCw1UcoR0dvSD
#! CMFmgNmI/Ghwa/z+2z24NXQN3ZEfbQGCeo6ES6pmmPpdLW2N7mEbGrrBupz6
#! 4z7IO7pHph7Uc3hYra5J3PZPS3piM4mD3v7r/93YvLGoo6M/FsenFfTPYVCr
#! 6YRu+ayiPtYP2WB6uDQuu7jocUzPQhOo5JAYHR3POFa1KiW/ufmFMGfke2zb
#! tqj27b3W3z8izBklDeo5eFoNltSV+T/9WDkyMibkeScnJ7PPNSQvz6up7hDy
#! vFIE9RwM4CvO5z2MW3SuqtJEKgZDi2XlivPHjlZhysc8oH8OCM8P7dpxBWZ/
#! fa+GyUbicIz/+MPddWuVra0vyUYiWlDJ81Ne3rb4w7OFhXrSgcxQXWWC2Sg4
#! EPAhpGMRHajn92G3vzl08NaG9YVBZhYJCYwUu3ZegX96e4dIxyIuUM9+adT1
#! JCXk/poZZjKGMFwsbEqMzy2/3kY6EBGB/vkdxscnzpzWxi/NqX8QUTKGMJhM
#! 1nVrlAfllKd8GNXpLPeO5ZvJF2Xkqul1WKhkXzo7+rdtUX194IbNNko6lmCB
#! ESTzZO3KFecbG3tIxxIL7DpluluzhllvOwwsI9eaLVYLz/PW6UEU9TzNJVXz
#! ksXnrkkzY7OhoXt5Ivf7b/coS/mwG1XyDCUomlXO0rPDpGaY9EqtRqM1+CYc
#! oJ6B/v4R9ssy6Jm7uyWcUT805NjPXt+yqZh0INHHpGLfrub2wldmMaDxsgpl
#! JriOrOm1hbh+EGQAPdtZRb3TSUPPJtHxZX4Mynf1/HYxoQubgmHU5rfJugtW
#! xtO0t/cJloyBhIevnj3rYY1KlsnSuv5u1clw/w1EUoCJ9urZux7WZszyPt7g
#! NObplqhnRLr4XQ+7kM0zQhmoZIQmUM8ITaCeEZpA/4zQBCoZoQnUM0ITqGeE
#! JtA/IzSBSkZoAvWM0ATqGaEJ9M+I+PG3ftB/PU1UMiJu/K8fxHqaiBR53/pB
#! rKeJRILR+Irg2eeuH5ynnqZULLTTOVFfL4E9Magk//zD7w/fttvJ7PIxd/3g
#! PPU0hQ4uLMzmgU2fFN24YSQdyAIFOpOTJzTLEzn9Iz5w62gzd/2gpOtpqq8Y
#! khJySy41kw5koXP/3vP4pTl//flA4LXwftYPSrOe5sDA6N4917ZuUUH/TDoW
#! xAV8Ivu/ur55Y9Hz5+Q/EWmtH6yrMycncVmn6ujYGYMmLpe0LP7wLIybpAN5
#! F3Eq2eEY/+Xn6tSV+U1NvaRjQfzTZR5ktqoO7C+HHpt0LDOIUM/t7X1rVyu/
#! O1hBajaNBAmMm+ClE5blgK8mHctbxKbnwgv6xPjciop20oEgwaJ/xKck5508
#! oYFRlXQsIvLPL1/ad+24kva52mJ5TToWJDSGh8fSD99ev/YC2a9dpkTTP9+5
#! /XRpXHYe10g6ECR8bt1qX7L4XEH+I4KFXYjrGW7t7w/f/mjdhbYnhG9tJHJg
#! bN21k+QgS1bPzY9fJCdxx3+uEYP1QqIFdNHLlmTfvvVU+FOT8s8TE5NnFfUw
#! 9aut7RT41IgAgJFenVpwJP0OjL9CnpdI/9xlHty8sWg/e31gAGtSUwuMucd/
#! qUldmS9kyofwer5a2rr4w7Oq4scCnxchwv17z8F7CJbyIaSeBwdHoU/GZIyF
#! BozCX+4rY7Zd6uoajPW5BPPP9Q+64D49nVVHWQEmJEgul7QsjcsOOeXDYeZY
#! t0BZhbdGigdi9Qc9BfJSkvMoLZCHBAuMyxs/vhhSeUc9x8qyNA7X6lfZrJR+
#! QvUH29v71q+9cPgQsaUNiKgAF33mtBY6t7o6c+DWU3bl22znKYcRXs6seyVS
#! f/BiYRMMMRU3MRkDmYVe35ucxGWe0ARqaFOyrNajV7uO9VnHLXD9QTDJX6SV
#! fr7riuUFJmMgfoDx+tDBW4Fa2TiZV882LSvjZrpiYesPdnfbMBkDiRinJoOR
#! q03wylSWzsjLHFh/EJE0NkPGW/uQoXf1zlh/EJE6Trvd7vT3A2mtH0SQUEEl
#! IzSBekZoAvWM0AT6Z4QmUMkITaCeEZpAPSM0gf4ZoQlUMkITqGeEJlDPCE2g
#! f0ZoApVMEKlcfKnEOYWhxoYgQw3YLPIGEjpLVA6CoQp5FgZBqCDgPYJEzvj4
#! BFzqrZuLy649IR0LgkSEyWTd+PFF0HN39+CWTcUH9pcPDTkC/xqCiI/CQleZ
#! kvLrbZ6hEDrq33+9l7Asp6Ghm3RoCBICfa+Gd6eVMltVPD80Nfv5s66he1VK
#! Pggbt5hDJEF1lSk5icvJbpiucPHOVAUsx7ff3Fy3VvnsmdXfAZCo4uRV3k0F
#! fRfdixajOp3l9KSjcDEyMnYk/c7qVfmtBovv+36n3teuti5bkl10sUmo6IJC
#! PBdzHpwWnVeh6Rqzff7GfIWckSmtzimbUe1bVF2U2HXKdMa1lyf5mrCg4dWp
#! BT8cuTu3TMn7HiX19g7t3H4ZnAn4k9gHGBARXcx5cboVqne67z6GLZt/gm01
#! ajRG9zjo0DE+m/yIELtRJc9QwofAKkl+BOArwF0kJeTWVHf4bTDPA9KJicns
#! cw3QUVe/53cFQyQXMwicRk2lwb17q12fBSbCV6EOK28ymcxu4IV1ZosUi5Jl
#! ZAqteLpnK2/2hgr/5acjNanYWZvWCgvM+GDet+eLq3197+1jAz7qN7RY1q1R
#! HjtaNTpKuAQV2YsZEk6rTs4wCu0sa2cqy2RkrAcZI1Mb3dvA8loYeOSciMQM
#! 92JFJuuNlJXJMgze29KgJPYRlJe3JcbnXiwM4IGD+eoKlJxxtGplyvmWFkvA
#! xrGD4MUMCV6ndM3vtIGL4DjMFe6WrpngzH6ZIobIRzA05Diwv3zTJ0UdHf0B
#! Gwf/VWx1lWlpXHZujg58SGQBhokk9GyuzGQYVsu7erRAEnVUZDA+yMXsnz2A
#! 7xP4I9A1dEO3nHmydmwsqPs9pAQDq3V4395rnzElPT22wK2jjfAXM2ScplkK
#! ZVUELhMteL7jA1cQ0nd8YaTKFBc9XvTfs9fL2kL9RQQJErAW69de+PrAjVBz
#! MMJL/YLZOfiZb7+5iSkfSNQpLn4MHqNU3RrG74adygjDwak/7sN56+u7wjsC
#! grwDGNrdaaXbPyvhwzW0EabmgphB0iBsTPlAIkRT0+GpJDvrgUPo9QcjTDj3
#! pHxs3lgEJiTsgyALmdHR8WNHq9akFsx9IEyq/iBMD+MWnSvGqtxIiLQaLCtT
#! zv/0w92RkbE5PyRZfxA8z6fMpX17r4ELitYxEbrJ4xrjl+ZUVZo8f53zPXs4
#! 9QejGJ4nXQQcda2mM4qHRagEnKorGWMm4W3u9+zh1B+M+ppNQ4sFvFC0jobQ
#! ShAZQWKpP0g8eQmhBKw/iNBGaPUHBQkJQYQANzxBaAKVjNAE6hmhCdQzQhPo
#! nxGaQCUjNIF6RmgC9YzQBPpnhCZQyQhNoJ4RmkA9I+LH39ayDo1C7lk9WOmz
#! jyv6Z0Tc+N9a1qbnGEbBO6Z4jYLxWbeCSkbEzPu2ljVw3uWxTgMb+3x+BAmD
#! 4PfpNXDyLK1nPwEbJ5PrUM9I0NRqOo8drYr9eULYp1fPsV49WxUM66tnCVno
#! zBOazs4B0lEsIByO8YxjVcsTObOZ5GX31bNn/aBFk8mwaodrv5ky31IdkpDx
#! NHV15sT43JJLzaQDWRAY216tX3vh+8O3h4fn7owhbCQzW8t61w/67I+kMsxs
#! ZCQtPQPd3TZmq+qLtNKBgVHSsdBMHteYsCzn7p1npAOZDzrWD05MTJ45rYVB
#! 8F7tc9KxUIjlxWvZLvWuHVdevRL9ButzkJB5fofm5herUwtgnjK3aBcSNhU3
#! 25MSci8oxV4X731IUcnTgK8Dd7d6VX7bk1ekY5E8w8NvDh28tSa1oL29j3Qs
#! 4SNpPXsAjwddSkH+Q9KBSBj9Ix66heO/1ARZpkS0UKBn4OVLe9rn6u2flYD3
#! Ix2LxHA6J05n1a1YnvdAS8O+9NL1z3PJP/8wMT63oqKddCCSwWwe2LKp+Mt9
#! ZYODlDwsokPJ04D32/BR4XcHK8ANko5F7JSUtMDtf+VyC+lAogllegbevHGe
#! OF4Dn5Re30s6FpEyMDC654ur0DN3dQ2SjiXK0KdnD3X3n4Mn/POMFvwh6VjE
#! BVyZ5CQu61QdlVeGJv/8Djbb6P8OlH/8USHZ3APxACPXzxnVqSvzm5qoHbmo
#! VLIvl0taliw+p74i7sKyscdodCVjuGcWhJMxYgr1ep7ypnzALH7Bpnycz3uY
#! lJB76xb9T34Wgp6n3E9ZwUsvjcu+f29hpXy8fGnfuf3yju2XLRYJP5n3t34w
#! VvUHJYT+EQ/u8cTxmgWS8nHn9tPE+Nw8rpF0IJHgf/1grOsPSgVwj0fS76xJ
#! LQA/STqWGDI8/Obwodsb1hdK/X/zfesHBag/KCHASS5bkq0seDQ5ORm4tdRo
#! aupNXp6XcUx6mYfBrx8Upv6ghAA/uTutNE1WKsUs33mAmQKIWZrThBDWDwpZ
#! f1BCFOQ/XLE8j3QU0WR8fIK+xzhz1w8KXH9QQjx7ag3cCCGKn/WDWH8QoQ46
#! 1g8iCIIgCIIgCEI9/wcAyrXn
#! "], {{0, 155}, {240, 0}}, {0, 255},
#! ColorFunction->RGBColor],
#! BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
#! Selectable->False],
#! BaseStyle->"ImageGraphics",
#! ImageSize->Automatic,
#! ImageSizeRaw->{240, 155},
#! PlotRange->{{0, 240}, {0, 155}}]\)
ok  x=-2;
#! If[x<0,y=-x,y=x];y    ==>     2
ok  y=If[x<0,-x,x]    ==>     2
ok  x=1;
#! If[x!=0,1/x,Indeterminate]    ==>     1
#! TextForm[ColonForm[MessageName[Less, nord], StringForm[Invalid comparison with `1` attempted., Short[HoldForm[I], 3]]]]
not ok  sign/@{-1,0,1,I}    ==>     {-1,1,1,If[I<0,-1,1]}
not ok  sign2/@{-1,0,1,I}    ==>     {-1,0,1,sign2[I]}
not ok  cut/@{-2,-1,0,1,2}    ==>     {-1,-1,0,1,1}
not ok  cut2/@{-2,-1,0,1,2}    ==>     {-1,-1,0,1,1}
#! TextForm[ColonForm[MessageName[Piecewise, pairs], StringForm[The first argument `1` of Piecewise is not a list of pairs., Short[HoldForm[a], 3]]]]
not ok  PiecewiseExpand[If[c,a,b]]    ==>     \[Piecewise]a	c
#! b	True
#! TextForm[ColonForm[MessageName[Piecewise, pairs], StringForm[The first argument `1` of Piecewise is not a list of pairs., Short[HoldForm[a], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[Piecewise, pairs]], 3]]]]
not ok  PiecewiseExpand[If[If[c1,a1,b1],a,b]]    ==>     \[Piecewise]a	(a1&&c1)||(b1&&!c1)
#! b	True
not ok  PiecewiseExpand[If[c,If[c2,a2,b2],b]]    ==>     \[Piecewise]a2	c&&c2
#! b	!c
#! b2	True
