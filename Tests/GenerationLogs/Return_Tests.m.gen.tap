#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/Return.nb output/Tests/Return_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/Return.nb
# WRITING OUTPUT TO:     output/Tests/Return_Tests.m
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[3], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
ok  f[x_]:=(If[x>5,Return[a]];x+3); f[6]    ==>     a
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
ok  f[x_]:=(If[x>5,Return[a]];x); f[6]    ==>     a
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
ok  g[x_]:=(Do[If[x>5,Return[a]],{3}];x); g[6]    ==>     6
ok  h[x_]:=Catch[Do[If[x>5,Throw[a]],{3}];x]; h[6]    ==>     a
