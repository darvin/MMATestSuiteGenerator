#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/Count.nb output/Tests/Count_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/Count.nb
# WRITING OUTPUT TO:     output/Tests/Count_Tests.m
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[3], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
ok  Count[{a,b,a,a,b,c,b},b]    ==>     3
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
ok  Count[<|1->1+x^2,2->x^4,3->a+(1+x^2)^2|>,x^_]    ==>     1
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
ok  Count[<|1->1+x^2,2->x^4,3->a+(1+x^2)^2|>,x^_,Infinity]    ==>     3
ok  Count[<|1->1+x^2,2->x^4,3->a+(1+x^2)^2|>,_Symbol,Infinity]    ==>     4
ok  Count[{a,2,a,a,1,c,b,3,3},_Integer]    ==>     4
ok  Count[{a,b,a,a,b,c,b,a,a},Except[b]]    ==>     6
ok  Count[{{a,a,b},b,{a,b,a}},b,2]    ==>     3
ok  Count[{{a,a,b},b,{a,b,a}},b,{2}]    ==>     2
ok  Count[x^3+1.5x^2+Pi x +7,_?NumericQ,-1]     ==>     5
ok  Count[5,_?NumericQ,-1]    ==>     0
ok  Count[5,_?NumericQ,{0,-1}]    ==>     1
ok  Count[f[a,b,b,a],b]    ==>     2
ok  Count[Sin[x]+Cos[x]+Sin[x]^2,Sin,-1]    ==>     0
ok  Count[Sin[x]+Cos[x]+Sin[x]^2,Sin,-1,Heads->True]    ==>     2
ok  Count[a+b^2/(a+b),_Symbol,Infinity]    ==>     4
not ok  Count[RandomReal[1,{100}],u_/;u>0.5]    ==>     40
ok  Count[{{1,2},{2,3},{1,5}},{u_,_}/;u==1]    ==>     2
ok  Count[{1,"f",g,"h","7"},_?StringQ]    ==>     3
ok  Length[Cases[{1,"f",g,"h","7"},_?StringQ]]    ==>     3
ok  Count[{1,"f",g,"h","7"},_?StringQ]    ==>     3
ok  Length[Position[{1,"f",g,"h","7"},_?StringQ]]    ==>     3
ok  MatchQ[5,_Integer]    ==>     True
ok  Count[5,_Integer,{0}]==1    ==>     True
ok  LeafCount[1+a+b^2]    ==>     6
ok  Count[1+a+b^2,_,{-1},Heads->True]    ==>     6
ok  AtomQ/@{1/2,1+I}    ==>     {True,True}
ok  Count[{1/2,1+I},_,{-1},Heads->True]    ==>     3
not ok  {1/2,1+I}//FullForm    ==>     List[Rational[1,2],Complex[1,1]]
ok  LeafCount[{1/2,1+I}]    ==>     7
ok  Count[{0.9,.15*6,1.8/2},0.9]    ==>     2
ok  Count[{0.9,.15*6,1.8/2},n_/;n==0.9]    ==>     3
