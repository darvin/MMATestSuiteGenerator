#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/DownValues.nb output/Tests/DownValues_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/DownValues.nb
# WRITING OUTPUT TO:     output/Tests/DownValues_Tests.m
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[3], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
not ok  DownValues[f]    ==>     {HoldPattern[f[1]]:>2,HoldPattern[f[2]]:>3,HoldPattern[f[x_]]:>x^2}
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
ok  f[x_]:=x^2; DownValues[f]    ==>     {HoldPattern[f[x_]]:>x^2}
#! TextForm[ColonForm[MessageName[DownValues, vlist], StringForm[Cannot set `1` to `2`; value must be a list of rules., Short[HoldForm[DownValues[g]], 3], Short[HoldForm[Span[{g[1] :> 1, g[x_] :> 2*g[x - 1]}, Null]], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
#! TextForm[ColonForm[MessageName[$RecursionLimit, reclim], StringForm[Recursion depth of `1` exceeded., Short[HoldForm[1024], 3]]]]
not ok  DownValues[g]={g[1]:>1,g[x_]:>2g[x-1]};; Definition[g]    ==>     g[1]:=1
#!  
#! g[x_]:=2 g[x-1]
ok  g[5]    ==>     16
not ok  f[x_/;x>-2]:=g1[x]
#! f[x_/;x<2]:=g2[x]; DownValues[f]    ==>     {HoldPattern[f[x_/;x>-2]]:>g1[x],HoldPattern[f[x_/;x<2]]:>g2[x]}
ok  f[0]    ==>     g1[0]
not ok  DownValues[f]=Reverse[DownValues[f]]    ==>     {HoldPattern[f[x_/;x<2]]:>g2[x],HoldPattern[f[x_/;x>-2]]:>g1[x]}
not ok  f[0]    ==>     g2[0]
not ok  f[1]=1;
#! f[x_]:=2f[x-1]; DownValues[g]=DownValues[f]/.f->g    ==>     {HoldPattern[g[1]]:>1,HoldPattern[g[x_]]:>2 g[x-1]}
ok  g[10]    ==>     512
not ok  f[1]=1;
#! f[n_]:=n*f[n-1]; DownValues[f]    ==>     {HoldPattern[f[1]]:>1,HoldPattern[f[n_]]:>n f[n-1]}
not ok  f[x_]:=x^2; DownValues[f]    ==>     {HoldPattern[f[x_]]:>x^2}
ok  f[x_]:>x^2    ==>     x_^2:>x^2
not ok  f[x_]:=x^3; Definition[f]    ==>     f[x_]:=x^3
not ok  DownValues[f]    ==>     {HoldPattern[f[x_]]:>x^3}
ok  f[x_]:=x^3; Hold[f[2]]/.DownValues[f]    ==>     Hold[2^3]
