#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/MatchQ.nb output/Tests/MatchQ_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/MatchQ.nb
# WRITING OUTPUT TO:     output/Tests/MatchQ_Tests.m
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[3], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
ok  MatchQ[12345,_Integer]    ==>     True
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
ok  MatchQ[(x-1)(1 + 2 x + 3 x^2),Plus[_,__]]    ==>     False
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
ok  MatchQ[Expand[x(1 + 2 x + 3 x^2)],Plus[_,__]]    ==>     True
ok  MatchQ[1+1/GoldenRatio-GoldenRatio,0]    ==>     False
ok  MatchQ[Simplify[1+1/GoldenRatio-GoldenRatio],0]    ==>     True
