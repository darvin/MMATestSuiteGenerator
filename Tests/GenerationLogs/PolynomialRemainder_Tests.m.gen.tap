#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/PolynomialRemainder.nb output/Tests/PolynomialRemainder_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/PolynomialRemainder.nb
# WRITING OUTPUT TO:     output/Tests/PolynomialRemainder_Tests.m
ok  PolynomialRemainder[x^2,x+a,x]    ==>     a^2
ok  PolynomialRemainder[x^2+x+1,2x+1,x]    ==>     3/4
ok  PolynomialRemainder[x^2+ b x+1,a x+1,x]    ==>     1+1/a^2-b/a
ok  PolynomialRemainder[x^2+x+1,Pi x+1,x]    ==>     1+1/\[Pi]^2-1/\[Pi]
ok  PolynomialRemainder[(x+1)/(x+2),(x+1)/(x+3),x]    ==>     0
ok  PolynomialRemainder[x^2+4 x+1,2x+1,x,Modulus->2]    ==>     0
ok  PolynomialRemainder[x^2+4 x+1,2x+1,x,Modulus->5]    ==>     3
not ok  Euclid[(x+1)(x+2),(x+2)(x+3),x]    ==>     -4-2 x
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[Power, infy], StringForm[Infinite expression `1` encountered., Short[HoldForm[0^(-1)], 3]]]]
not ok  Expand[%/Coefficient[%,x,1]]    ==>     2+x
ok  PolynomialGCD[(x+1)(x+2),(x+2)(x+3)]    ==>     2+x
not ok  q=PolynomialQuotient[f,g,x]    ==>     2+x
not ok  r=PolynomialRemainder[f,g,x]    ==>     -3
ok  Expand[q g+r]==f    ==>     True
not ok  PolynomialQuotientRemainder[f,g,x]    ==>     {2+x,-3}
ok  PolynomialReduce[x^2+4x+1,{x+2},{x}]    ==>     {{2+x},-3}
ok  PolynomialRemainder[x^2,x+a,x]    ==>     a^2
ok  PolynomialMod[x^2,x+a]    ==>     x^2
ok  {PolynomialRemainder[x+y,x-y,x],PolynomialRemainder[x+y,x-y,y]}    ==>     {2 y,2 x}
