#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/IntegerPartitions.nb output/Tests/IntegerPartitions_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/IntegerPartitions.nb
# WRITING OUTPUT TO:     output/Tests/IntegerPartitions_Tests.m
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[3], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
ok  IntegerPartitions[5]    ==>     {{5},{4,1},{3,2},{3,1,1},{2,2,1},{2,1,1,1},{1,1,1,1,1}}
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
ok  IntegerPartitions[8,3]    ==>     {{8},{7,1},{6,2},{6,1,1},{5,3},{5,2,1},{4,4},{4,3,1},{4,2,2},{3,3,2}}
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
ok  IntegerPartitions[8,{3}]    ==>     {{6,1,1},{5,2,1},{4,3,1},{4,2,2},{3,3,2}}
ok  IntegerPartitions[8,All,{1,2,5}]    ==>     {{5,2,1},{5,1,1,1},{2,2,2,2},{2,2,2,1,1},{2,2,1,1,1,1},{2,1,1,1,1,1,1},{1,1,1,1,1,1,1,1}}
ok  IntegerPartitions[6,{2,Infinity,2}]    ==>     {{5,1},{4,2},{3,3},{3,1,1,1},{2,2,1,1},{1,1,1,1,1,1}}
ok  IntegerPartitions[3,10,{1,1/3,3/4}]    ==>     {{3/4,3/4,3/4,3/4},{1/3,1/3,1/3,1/3,1/3,1/3,1/3,1/3,1/3},{1/3,1/3,1/3,1/3,1/3,1/3,1},{1/3,1/3,1/3,1,1},{1,1,1}}
ok  IntegerPartitions[5,10,{1,-1}]    ==>     {{-1,-1,1,1,1,1,1,1,1},{-1,1,1,1,1,1,1},{1,1,1,1,1}}
ok  IntegerPartitions[15,All,All,10]    ==>     {{15},{14,1},{13,2},{13,1,1},{12,3},{12,2,1},{12,1,1,1},{11,4},{11,3,1},{11,2,2}}
ok  IntegerPartitions[15,All,All,-3]    ==>     {{2,2,1,1,1,1,1,1,1,1,1,1,1},{2,1,1,1,1,1,1,1,1,1,1,1,1,1},{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}}
ok  IntegerPartitions[156,10,{1,5,10,25}]    ==>     {{25,25,25,25,25,25,5,1},{25,25,25,25,25,10,10,10,1},{25,25,25,25,25,10,10,5,5,1}}
ok  IntegerPartitions[50,All,{6,9,20}]    ==>     {{20,9,9,6,6},{20,6,6,6,6,6}}
ok  Table[Length[IntegerPartitions[i,All,{6,9,20}]],{i,50}]    ==>     {0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,2,0,1,1,0,0,2,0,1,2,0,1,2,0,1,2,0,1,3,0,2,2,1,1,3,0,2,3,1,2,3,1,2}
not ok  Position[%,0]//Flatten    ==>     {1,2,3,4,5,7,8,10,11,13,14,16,17,19,22,23,25,28,31,34,37,43}
ok  FrobeniusNumber[{6,9,20}]    ==>     43
ok  IntegerPartitions[4]    ==>     {{4},{3,1},{2,2},{2,1,1},{1,1,1,1}}
not ok  Total/@%    ==>     {4,4,4,4,4}
ok  Length[IntegerPartitions[10]]    ==>     42
ok  PartitionsP[10]    ==>     42
ok  IntegerPartitions[5]    ==>     {{5},{4,1},{3,2},{3,1,1},{2,2,1},{2,1,1,1},{1,1,1,1,1}}
not ok  Sort[%]    ==>     {{5},{3,2},{4,1},{2,2,1},{3,1,1},{2,1,1,1},{1,1,1,1,1}}
ok  Reverse[Sort[ToString/@IntegerPartitions[5]]]    ==>     {{5},{4, 1},{3, 2},{3, 1, 1},{2, 2, 1},{2, 1, 1, 1},{1, 1, 1, 1, 1}}
ok  FrobeniusSolve[{6,9,20},24]    ==>     {{1,2,0},{4,0,0}}
ok  IntegerPartitions[24,All,{6,9,20}]    ==>     {{9,9,6},{6,6,6,6}}
#! TextForm[ColonForm[MessageName[IntegerPartitions, undef], StringForm[`1` contains partitions that are undefined because they are infinitely large., Short[HoldForm[IntegerPartitions[5, All, {1, -1}]], 3]]]]
#! TextForm[ColonForm[MessageName[IntegerPartitions, undef], StringForm[`1` contains partitions that are undefined because they are infinitely large., Short[HoldForm[IntegerPartitions[5, All, {1, -1}]], 3]]]]
ok  IntegerPartitions[5,All,{1,-1}]    ==>     IntegerPartitions[5,All,{1,-1}]
ok  IntegerPartitions[5,10,{1,-1}]    ==>     {{-1,-1,1,1,1,1,1,1,1},{-1,1,1,1,1,1,1},{1,1,1,1,1}}
ok  IntegerPartitions[1/2]    ==>     {}
ok  IntegerPartitions[1/2,All,{1/6,1/3}]    ==>     {{1/3,1/6},{1/6,1/6,1/6}}
#! TextForm[ColonForm[MessageName[IntegerPartitions, take], StringForm[Warning: not all elements were found when attempting to take the sequence `1` from `2`, which has length `3`., Short[HoldForm[{1, 7, 1}], 3], Short[HoldForm[IntegerPartitions[3, All, All]], 3], Short[HoldForm[3], 3]]]]
ok  IntegerPartitions[3,All,All,7]    ==>     {{3},{2,1},{1,1,1}}
ok  Off[IntegerPartitions::take]; IntegerPartitions[3,All,All,7]    ==>     {{3},{2,1},{1,1,1}}
