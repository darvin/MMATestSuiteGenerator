#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/Equal.nb output/Tests/Equal_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/Equal.nb
# WRITING OUTPUT TO:     output/Tests/Equal_Tests.m
ok  2+2==4    ==>     True
ok  x^2==1+x    ==>     x^2==1+x
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[Solve, naqs], StringForm[`1` is not a quantified system of equations and inequalities., Short[HoldForm[Hold[Out[$Line - 1]]], 3]]]]
not ok  Solve[%,x]    ==>     {{x->1/2 (1-Sqrt[5])},{x->1/2 (1+Sqrt[5])}}
ok  3/2==5/3    ==>     False
ok  2^^1.000000000000000000000000000000000000000000000000000000000000==2^^1.000000000000000000000000000000000000000000000000000001111111    ==>     True
ok  N[Pi,20]==Pi    ==>     True
ok  N[Pi,20]==Pi(1+2^8 10^-20)    ==>     False
ok  Pi^E==E^Pi    ==>     False
ok  Sqrt[2]+Sqrt[3]==Sqrt[5+2Sqrt[6]]    ==>     True
ok  Sqrt[2]+Sqrt[3]==Root[#^4-10#^2+1&,4]    ==>     Sqrt[2]+Sqrt[3]==Root[1-10 #1^2+#1^4&,4]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
not ok  RootReduce[%]    ==>     True
ok  Sqrt[2]+Sqrt[3]==Root[#^4-10#^2+1&,4]+10^-100    ==>     Sqrt[2]+Sqrt[3]==1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000+Root[1-10 #1^2+#1^4&,4]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
not ok  RootReduce[%]    ==>     False
ok  Block[{$MaxExtraPrecision=100},Sqrt[2]+Sqrt[3]==Root[#^4-10#^2+1&,4]+10^-100]    ==>     False
ok  x==x    ==>     True
ok  (x+1)^2==x^2+2x+1    ==>     (1+x)^2==1+2 x+x^2
not ok  Expand[%]    ==>     True
ok  a x==b    ==>     a x==b
#! TextForm[ColonForm[MessageName[Solve, naqs], StringForm[`1` is not a quantified system of equations and inequalities., Short[HoldForm[Hold[Out[$Line - 1]]], 3]]]]
not ok  Solve[%,x]    ==>     {{x->b/a}}
#! TextForm[ColonForm[MessageName[Reduce, naqs], StringForm[`1` is not a quantified system of equations and inequalities., Short[HoldForm[Hold[Out[$Line - 2]]], 3]]]]
not ok  Reduce[%%,x]    ==>     (b==0&&a==0)||(a!=0&&x==b/a)
ok  3==3.==3.000000    ==>     True
ok  x+y+z==x^2-y^2-z^2==x y z==3    ==>     x+y+z==x^2-y^2-z^2==x y z==3
#! TextForm[ColonForm[MessageName[Reduce, naqs], StringForm[`1` is not a quantified system of equations and inequalities., Short[HoldForm[Hold[Out[$Line - 1]]], 3]]]]
not ok  Reduce[%,{x,y,z}]    ==>     x==1&&(y==1/2 (2-2 I Sqrt[2])||y==1/2 (2+2 I Sqrt[2]))&&z==2-y
ok  {1,2}=={1,2}    ==>     True
ok  {a,b,c}=={d,e}    ==>     False
ok  "abc"=="ABC"    ==>     False
ok  Not[x==y]    ==>     x!=y
ok  Not[x==y==z]    ==>     !x==y==z
not ok  LogicalExpand[%]    ==>     y!=x||z!=x
ok  LogicalExpand[x!=y!=z]    ==>     y!=x&&z!=x&&z!=y
ok  {x==x,x==y,Sqrt[2]+Sqrt[3]==Sqrt[5+2Sqrt[6]],Pi==N[Pi]}    ==>     {True,x==y,True,True}
ok  {x===x,x===y,Sqrt[2]+Sqrt[3]===Sqrt[5+2Sqrt[6]],Pi===N[Pi]}    ==>     {True,False,False,False}
ok  a=Log[Sqrt[2]+Sqrt[3]];
#! b=Log[5+2Sqrt[6]]/2;
#! a==b    ==>     Log[Sqrt[2]+Sqrt[3]]==1/2 Log[5+2 Sqrt[6]]
ok  FullSimplify[a==b]    ==>     True
#! TextForm[ColonForm[MessageName[PossibleZeroQ, ztest1], StringForm[Unable to decide whether numeric quantity `1` is equal to zero. Assuming it is., Short[HoldForm[Log[Sqrt[2] + Sqrt[3]] - Log[5 + 2*Sqrt[6]]/2], 3]]]]
ok  PossibleZeroQ[a-b]    ==>     True
#! TextForm[ColonForm[MessageName[PossibleZeroQ, ztest1], StringForm[Unable to decide whether numeric quantity `1` is equal to zero. Assuming it is., Short[HoldForm[1/10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 + Log[Sqrt[2] + Sqrt[3]] - Log[5 + 2*Sqrt[6]]/2], 3]]]]
ok  PossibleZeroQ[a-b+10^-100]    ==>     True
not ok  Solve[a x^2+b x+c==0,x]    ==>     {{x->(-b-Sqrt[b^2-4 a c])/(2 a)},{x->(-b+Sqrt[b^2-4 a c])/(2 a)}}
not ok  Reduce[a x^2+b x+c==0,x]    ==>     (a!=0&&(x==(-b-Sqrt[b^2-4 a c])/(2 a)||x==(-b+Sqrt[b^2-4 a c])/(2 a)))||(a==0&&b!=0&&x==-(c/b))||(c==0&&b==0&&a==0)
not ok  Reduce[x^2+y^2==5,{x,y},Reals]    ==>     -Sqrt[5]<=x<=Sqrt[5]&&(y==-Sqrt[5-x^2]||y==Sqrt[5-x^2])
ok  Reduce[x^2+y^2==5,{x,y},Integers]    ==>     (x==-2&&y==-1)||(x==-2&&y==1)||(x==-1&&y==-2)||(x==-1&&y==2)||(x==1&&y==-2)||(x==1&&y==2)||(x==2&&y==-1)||(x==2&&y==1)
ok  2.00006-2.00005==0.00001    ==>     False
not ok  2.00006-2.00005//InputForm    ==>     0.000010000000000065512
ok  2.00006`16-2.00005`16==0.00001`16    ==>     True
not ok  Precision[2.00006`16-2.00005`16]    ==>     10.3979
ok  2.6-2.5==0.1    ==>     True
not ok  2.6-2.5//InputForm    ==>     0.10000000000000009
not ok  x==y    ==>     True
not ok  y==z    ==>     True
not ok  x==z    ==>     False
ok  (p||q)==(q||p)//FullSimplify    ==>     (p||q)==(q||p)
ok  p||q\[Equivalent]q||p//FullSimplify    ==>     True
