#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/Divide.nb output/Tests/Divide_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/Divide.nb
# WRITING OUTPUT TO:     output/Tests/Divide_Tests.m
ok  77/11    ==>     7
ok  77/11    ==>     7
ok  616/33    ==>     56/3
not ok  616./33    ==>     18.6667
ok  a/b/c/d    ==>     a/(b c d)
not ok  FullForm[a^2/b^3]    ==>     Times[Power[a,2],Power[b,-3]]
ok  20/4    ==>     5
ok  {2,3,4,5}/3    ==>     {2/3,1,4/3,5/3}
ok  {x,y,z}/{a,b,c}    ==>     {x/a,y/b,z/c}
ok  FoldList[Divide,1,Range[10]]    ==>     {1,1,1/2,1/6,1/24,1/120,1/720,1/5040,1/40320,1/362880,1/3628800}
ok  Divide@@@Partition[{a,b,c,d,e},2,1]    ==>     {a/b,b/c,c/d,d/e}
ok  (x+y)/z    ==>     (x+y)/z
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
not ok  Expand[%]    ==>     x/z+y/z
ok  Cancel[(1-x^2)/(1-x)]    ==>     1+x
ok  Apart[1/(x^2-1)]    ==>     1/(2 (-1+x))-1/(2 (1+x))
#! TextForm[ColonForm[MessageName[Power, infy], StringForm[Infinite expression `1` encountered., Short[HoldForm[0^(-1)], 3]]]]
ok  1/0    ==>     ComplexInfinity
#! TextForm[ColonForm[MessageName[Power, infy], StringForm[Infinite expression `1` encountered., Short[HoldForm[0^(-1)], 3]]]]
#! TextForm[ColonForm[MessageName[Infinity, indet], StringForm[Indeterminate expression `1` encountered., Short[HoldForm[0*ComplexInfinity], 3]]]]
ok  0/0    ==>     Indeterminate
ok  1/Infinity    ==>     0
ok  Replace[x^2/y^3,a_/b_->f[a,b]]    ==>     x^2/y^3
not ok  FullForm[x^2/y^3]    ==>     Times[Power[x,2],Power[y,-3]]
ok  Replace[x^2/y^3,(a:(_^_.))(b:(_^_.))->f[a,b]]    ==>     f[x^2,1/y^3]
ok  NestList[1/(1+#)&,x,5]    ==>     {x,1/(1+x),1/(1+1/(1+x)),1/(1+1/(1+1/(1+x))),1/(1+1/(1+1/(1+1/(1+x)))),1/(1+1/(1+1/(1+1/(1+1/(1+x)))))}
ok  Array[Divide,{4,4}]    ==>     {{1,1/2,1/3,1/4},{2,1,2/3,1/2},{3,3/2,1,3/4},{4,2,4/3,1}}
#! TextForm[ColonForm[MessageName[Syntax, sntxi], StringForm[Incomplete expression; more input is needed `4`., Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[], 3]]]]
#! TextForm[ColonForm[MessageName[ToExpression, sntx], StringForm[Invalid syntax in or before "`1`"`4`., Short[HoldForm[PlotRangePadding->{Scaled[0.02], Scaled[0.02]}]\)\)
#!                                                    ^], 3], Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[
#! ], 3]]]]
#! TextForm[ColonForm[MessageName[Syntax, sntxi], StringForm[Incomplete expression; more input is needed `4`., Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[], 3]]]]
#! TextForm[ColonForm[MessageName[ToExpression, sntx], StringForm[Invalid syntax in or before "`1`"`4`., Short[HoldForm[PlotRangePadding->{Scaled[0.02], Scaled[0.02]}]\)\)
#!                                                    ^], 3], Short[HoldForm[], 3], Short[HoldForm[], 3], Short[HoldForm[
#! ], 3]]]]
not ok  ListPlot[Position[Array[Divide,{20,20}],_Integer]]    ==>     \!\(\*
#! GraphicsBox[{
#! {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
#! 1:eJx1krEKwjAURYNTxgwZOnSIpYiIiLXdLX6CnyA4++t+goo5gwdbKIfz7stL
#! SLu+Pa73VQjh8n4//D6H+T9z5bHyef7N7VH9RW4Gearcaf5O9W1lI4f7ylZu
#! Mh/nPJPySfmofFSd/l5uJjn3fdJ8nP0H5YPq9HdyM8obMcjZD2d9Vp5Vb8Wi
#! fu/bKuccMCo3g3LumXoSo0id9ZsFh3znLIf8l1Ge5MzHOW8RO/WXhX7m9+rv
#! 1c+8KO/mF+BXQ/0=
#! "]]}, {}},
#! AspectRatio->0.618033988749895,
#! Axes->True,
#! PlotRange->{{0., 20.}, {0., 20.}},
#! PlotRangeClipping->True,
#! PlotRangePadding->{Scaled[0.02], Scaled[0.02]}]\)
