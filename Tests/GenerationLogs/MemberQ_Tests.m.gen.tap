#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/MemberQ.nb output/Tests/MemberQ_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/MemberQ.nb
# WRITING OUTPUT TO:     output/Tests/MemberQ_Tests.m
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[3], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
ok  MemberQ[{1,3,4,1,2},2]    ==>     True
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
ok  MemberQ[{x^2,y^2,x^3},x^_]    ==>     True
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
ok  MemberQ[{{1,1,3,0},{2,1,2,2}},0,2]    ==>     True
ok  MemberQ[{{1,1,3,0},{2,1,2,2}},0]    ==>     False
ok  Table[Mod[2^i,7],{i,10}]    ==>     {2,4,1,2,4,1,2,4,1,2}
ok  MemberQ[Table[Mod[2^i,7],{i,10}],1]    ==>     True
ok  MemberQ[{1,2,1,3},1.]    ==>     False
ok  MemberQ[a+b+c,a+c]    ==>     False
ok  FreeQ[a+b+c,a+c]    ==>     False
ok  MemberQ[{{x^2,y^2}},x^_]    ==>     False
ok  MemberQ[{{x^2,y^2}},x^_,2]    ==>     True
