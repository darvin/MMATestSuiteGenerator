#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/PatternTest.nb output/Tests/PatternTest_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/PatternTest.nb
# WRITING OUTPUT TO:     output/Tests/PatternTest_Tests.m
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[1], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[StringJoin, string], StringForm[String expected at position `1` in `2`., Short[HoldForm[3], 3], Short[HoldForm[StringJoin[inNew, ; , inOld]], 3]]]]
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
ok  Cases[{1,2,3.5,x,y,4},_?NumberQ]    ==>     {1,2,3.5,4}
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
ok  MatchQ[{1,E,Pi},{__?Positive}]    ==>     True
#! TextForm[ColonForm[MessageName[$IterationLimit, itlim], StringForm[Iteration limit of `1` exceeded., Short[HoldForm[4096], 3]]]]
#! TextForm[ColonForm[MessageName[General, stop], StringForm[Further output of `1` will be suppressed during this calculation., Short[HoldForm[MessageName[$IterationLimit, itlim]], 3]]]]
ok  MatchQ[{1,I,0},{__?Positive}]    ==>     False
ok  f[x_?NumericQ] := NIntegrate[Sin[t^3],{t,0,x}]; f[2]    ==>     0.451948
ok  f[(1+Sqrt[2])/5]    ==>     0.0135768
ok  f[a]    ==>     f[a]
ok  {3,-5,2,7,-6,3}/._?Negative:>0    ==>     {3,0,2,7,0,3}
ok  Cases[Range[0,70],_?(Divisible[#,7]&)]    ==>     {0,7,14,21,28,35,42,49,56,63,70}
ok  Cases[Range[0,350],_?(Divisible[#,7] && Divisible[#,5]&)]    ==>     {0,35,70,105,140,175,210,245,280,315,350}
ok  Cases[Range[0,35],_?(Divisible[#,7]||Divisible[#,5]&)]    ==>     {0,5,7,10,14,15,20,21,25,28,30,35}
ok  f[n_?NonNegative, p_?PrimeQ]:= n^p; f[0,3]    ==>     0
ok  f[2,4]    ==>     f[2,4]
ok  f[-1,3]    ==>     f[-1,3]
not ok  f[p_?(Negative[#] && PrimeQ[#]&)]:= p^p; f[-2]    ==>     1/4
ok  f[2]    ==>     f[2]
ok  f[-4]    ==>     f[-4]
ok  MatchQ[{{a,b},{c,d}}, {_,_}?MatrixQ]    ==>     True
ok  MatchQ[{a,b}, {_,_}?MatrixQ]    ==>     False
ok  Cases[Hold[Print[5], Sin, 2+2, 7, Sqrt[2]], _?(Function[{n},NumberQ[Unevaluated@n],HoldAll])]    ==>     {7}
#! 5
ok  Cases[Hold[Print[5], Sin, 2+2, 7, Sqrt[2]], _?NumberQ]    ==>     {4,7}
ok  Cases[{{a,b}, {1,2,3}, {{d,6},{d,10}}}, {_,_}?VectorQ]    ==>     {{a,b}}
ok  Cases[{{a,b},{1,2,3},{{d,6},{d,10}}},{x_,y_}/;!ListQ[x]&&!ListQ[y]]    ==>     {{a,b}}
ok  Replace[{1,7,"Hi",3,Indeterminate},Except[_?NumericQ]:>0,1]    ==>     {1,7,0,3,0}
ok  MatchQ[Hold[2+3], Hold[_?IntegerQ]]    ==>     True
ok  MatchQ[Hold[2+3], Hold[_?(IntegerQ[Unevaluated@#]&)]]    ==>     True
ok  MatchQ[Hold[2+3],Hold[_?(Function[{n},IntegerQ[Unevaluated@n],HoldAll])]]    ==>     False
ok  MatchQ[Hold[2+3], Hold[n_] /; IntegerQ[Unevaluated@n]]    ==>     False
