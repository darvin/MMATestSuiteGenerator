#! DOCKER > wolfram -script ./export_tests_from_docs.m build_docs/ReferencePages/Symbols/Sequence.nb output/Tests/Sequence_Tests.m
# GENERATING TESTS FROM: build_docs/ReferencePages/Symbols/Sequence.nb
# WRITING OUTPUT TO:     output/Tests/Sequence_Tests.m
ok  f[a,Sequence[b,c],d]    ==>     f[a,b,c,d]
ok  {u,u,u}/.u->Sequence[a,b,c]    ==>     {a,b,c,a,b,c,a,b,c}
not ok  u=Sequence[a,b,c]    ==>     Sequence[a,b,c]
ok  {u,u,u}    ==>     {a,b,c,a,b,c,a,b,c}
ok  f[{{a,b},{c,d},{a}}]/.List->Sequence    ==>     f[a,b,c,d,a]
not ok  f[a,b,c]/.f[x__]->x    ==>     Sequence[a,b,c]
not ok  ##&[a,b,c]    ==>     Sequence[a,b,c]
ok  {a,Sequence[b],c,Identity[d]}    ==>     {a,b,c,d}
#! TextForm[ColonForm[MessageName[Head, argx], StringForm[`1` called with `2` arguments; 1 argument is expected., Short[HoldForm[Head], 3], Short[HoldForm[2], 3]]]]
#! TextForm[ColonForm[MessageName[Head, argx], StringForm[`1` called with `2` arguments; 1 argument is expected., Short[HoldForm[Head], 3], Short[HoldForm[2], 3]]]]
ok  Head[Sequence[a,b]]    ==>     Head[a,b]
ok  u->Sequence[a,b]    ==>     u->Sequence[a,b]
