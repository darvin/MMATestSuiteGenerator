(* Created by Wolfram Mathematica 10.0 : www.wolfram.com *)
Import["CompatTests.m"]; 
TapSuite[TapComment["Sort a list:"], TapTestSame[Sort[{d, b, c, a}], 
  {a, b, c, d}], TapComment[
  "Sort using RefLink[Greater,paclet:ref/Greater] as the ordering function:"]\
, TapTestSame[Sort[{4, 1, 3, 2, 2}, Greater], {4, 3, 2, 2, 1}], 
 TapTestSame[Sort[{4, 1, 3, 2, 2}, #1 > #2 & ], {4, 3, 2, 2, 1}], 
 TapComment["Sort by comparing the second part of each element:"], 
 TapTestSame[Sort[{{a, 2}, {c, 1}, {d, 3}}, #1[[2]] < #2[[2]] & ], 
  {{c, 1}, {a, 2}, {d, 3}}], TapComment["Sort elements in an \
RefLink[Association,paclet:ref/Association] according to their values:"], 
 TapTestSameBROKEN[HoldComplete[Sort[\[LeftAssociation] a -> 4, b -> 1, 
     c -> 3, d -> 2, e -> 2 \[RightAssociation]]], $Failed], 
 TapComment[
  "Sort RefLink[Association,paclet:ref/Association] in reverse order:"], 
 TapTestSameBROKEN[HoldComplete[Sort[\[LeftAssociation] a -> 4, b -> 1, 
     c -> 3, d -> 2, e -> 2 \[RightAssociation], Greater]], $Failed], 
 TapComment["Sort any expressions:"], TapTestSame[Sort[{y, x^2, x + y, y^3}], 
  {x^2, y, y^3, x + y}], TapComment["Sort strings into dictionary order:"], 
 TapTestSameBROKEN[Sort[{"cat", "fish", "catfish", "Cat"}], 
  {cat, Cat, catfish, fish}], TapComment["Sort by structure:"], 
 TapTestSame[Sort[{Pi, E, 2, 3, 1, Sqrt[2]}], {1, 2, 3, Sqrt[2], E, Pi}], 
 TapComment["Sort by numerical value:"], 
 TapTestSame[Sort[{Pi, E, 2, 3, 1, Sqrt[2]}, Less], 
  {1, Sqrt[2], 2, E, 3, Pi}], TapComment["Sort expressions with any head:"], 
 TapTestSame[Sort[f[4, 2, 1, 3]], f[1, 2, 3, 4]], 
 TapTestSame[Sort[b . c . d . a], a . b . c . d], 
 TapComment["Sort integers by magnitude:"], 
 TapTestSame[Sort[{-11, 10, 2, 1, -4}], {-11, -4, 1, 2, 10}], 
 TapComment["Sort by absolute value:"], 
 TapTestSame[Sort[{-11, 10, 2, 1, -4}, Abs[#1] < Abs[#2] & ], 
  {1, 2, -4, 10, -11}], TapComment["Sort by structure:"], 
 TapTestSame[Sort[Join[Log[Range[10]], Sqrt[Range[10]]]], 
  {0, 1, 2, 3, Sqrt[2], 2*Sqrt[2], Sqrt[3], Sqrt[5], Sqrt[6], Sqrt[7], 
   Sqrt[10], Log[2], Log[3], Log[4], Log[5], Log[6], Log[7], Log[8], Log[9], 
   Log[10]}], TapComment["Sort by numerical value:"], 
 TapTestSame[Sort[Join[Log[Range[10]], Sqrt[Range[10]]], Less], 
  {0, Log[2], 1, Log[3], Log[4], Sqrt[2], Log[5], Sqrt[3], Log[6], Log[7], 2, 
   Log[8], Log[9], Sqrt[5], Log[10], Sqrt[6], Sqrt[7], 2*Sqrt[2], 3, 
   Sqrt[10]}], TapComment["Sort strings by dictionary order:"], 
 TapTestSameBROKEN[Sort[{"aa", "abb", "ba", "b", "aaa"}], 
  {aa, aaa, abb, b, ba}], TapComment["Sort strings by length:"], 
 TapTestSameBROKEN[Sort[{"aa", "abb", "ba", "b", "aaa"}, 
   StringLength[#1] < StringLength[#2] & ], {b, ba, aa, aaa, abb}], 
 TapComment["Sort by norm:"], TapTestSameBROKEN[
  RandomInteger[{-5, 5}, {10, 3}], {{3, 1, 4}, {5, -3, -3}, {-4, 4, 3}, 
   {5, 2, -3}, {3, 3, -1}, {2, -4, 4}, {0, 3, 5}, {-5, 5, -4}, {1, 0, 0}, 
   {-2, -1, -3}}], TapTestSameBROKEN[Sort[%, Norm[#1] < Norm[#2] & ], 
  {{1, 0, 0}, {-2, -1, -3}, {3, 3, -1}, {3, 1, 4}, {0, 3, 5}, {2, -4, 4}, 
   {5, 2, -3}, {-4, 4, 3}, {5, -3, -3}, {-5, 5, -4}}], 
 TapComment["Sort by real part:"], 
 TapTestSame[Sort[{I, 1 + I, 1 - I, 2 + 3*I}, Re[#1] < Re[#2] & ], 
  {I, 1 - I, 1 + I, 2 + 3*I}], 
 TapComment["Shorter expressions are sorted before longer ones:"], 
 TapTestSame[Sort[{a + b + c, a + b, a + c}], {a + b, a + c, a + b + c}], 
 TapComment["Explicit numbers are sorted in numerical order:"], 
 TapTestSame[Sort[{5.6, 5, 2.3, -1, 4/3, 1}], {-1, 1, 4/3, 2.3, 5, 5.6}], 
 TapComment["Sort in reverse order:"], 
 TapTestSame[Sort[{a + b + c, a + b, a + c}, OrderedQ[{#2, #1}] & ], 
  {a + b + c, a + c, a + b}], TapComment["Orderless functions sort in the \
same order as RefLink[Sort,paclet:ref/Sort]:"], 
 TapTestSame[(a + b + c)*(a + b)*(a + c), (a + b)*(a + c)*(a + b + c)], 
 TapComment["Print each comparison done:"], 
 TapTestSame[Sort[{4, 1, 3, 2}, (Print[{#1, #2}]; #1 > #2) & ], 
  {4, 3, 2, 1}], TapComment["Collect a list of the comparisons done:"], 
 TapTestSameBROKEN[Reap[Sort[{4, 1, 3, 2}, (Sow[{#1, #2}]; #1 > #2) & ]], 
  {{4, 3, 2, 1}, {{{4, 1}, {1, 3}, {4, 1}, {3, 2}, {4, 3}, {1, 3}, 
     {1, 2}}}}], TapTestSameBROKEN[Sort[list], {0, 0, 1, 3, 3, 6, 6, 7, 8, 
   10}], TapTestSameBROKEN[list[[Ordering[list]]], 
  {0, 0, 1, 3, 3, 6, 6, 7, 8, 10}], 
 TapComment[
  "Numeric expressions are sorted by structure as well as numerical value:"], 
 TapTestSame[Sort[{Infinity, Sqrt[2], 1, 2, -Infinity, 1/Sqrt[2]}], 
  {1, 2, 1/Sqrt[2], Sqrt[2], -Infinity, Infinity}], 
 TapComment["Sort by numerical value only:"], 
 TapTestSame[Sort[{Infinity, Sqrt[2], 1, 2, -Infinity, 1/Sqrt[2]}, Less], 
  {-Infinity, 1/Sqrt[2], 1, Sqrt[2], 2, Infinity}], 
 TapComment["Elements whose order is not determined by the ordering function \
may not be kept in order:"], TapTestSame[Sort[{4, 1, 3, 7, 9}, #1 > 3 & ], 
  {4, 7, 9, 3, 1}], TapTestSame[Sort[{4, 3, 1, 7, 9}, #1 > 3 & ], 
  {4, 7, 9, 1, 3}], TapComment["Show comparisons made in doing a sort:"], 
 TapTestSameBROKEN[HoldComplete[
   ListPlot[Reap[Sort[Table[Round[10*Sin[t]], {t, 0, 50}], 
       (Sow[#1]; #1 > #2) & ]][[2,1]]]], $Failed]]
