(* Created by Wolfram Mathematica 10.0 : www.wolfram.com *)
Import["CompatTests.m"]; 
TapSuite[TapComment["Pure function with one parameter:"], 
 TapTestSame[Function[u, 3 + u][x], 3 + x], TapTestSame[(3 + #1 & )[x], 
  3 + x], TapTestSame[(3 + #1 & )[x], 3 + x], 
 TapComment["Pure function with two parameters:"], 
 TapTestSame[Function[{u, v}, u^2 + v^4][x, y], x^2 + y^4], 
 TapTestSame[(#1^2 + #2^4 & )[x, y], x^2 + y^4], 
 TapComment["Set f to be a pure function:"], TapTestSame[f = 3 + #1 & , 
  3 + #1 & ], TapComment["Use the pure function:"], 
 TapTestSame[{f[a], f[b]}, {3 + a, 3 + b}], 
 TapComment["Pick out named arguments from an association:"], 
 TapTestSameBROKEN[(f[u, v, u] & )[\[LeftAssociation] "u" -> x, 
    "v" -> y \[RightAssociation]], f[x, y, x]], 
 TapComment["Map a pure function over a list:"], 
 TapTestSame[(g[#1, #1^2] & ) /@ {x, y, z}, {g[x, x^2], g[y, y^2], 
   g[z, z^2]}], TapComment["Select with a pure function:"], 
 TapTestSame[Select[{1, -1, 2, -2, 3}, #1 > 0 & ], {1, 2, 3}], 
 TapComment["Use a pure function as a predicate:"], 
 TapTestSame[Cases[{1, -1, 2, -2, 3}, _Integer?(#1 > 0 & )], {1, 2, 3}], 
 TapComment["Create an array from a pure function:"], 
 TapTestSame[Array[1 + #1^2 & , 10], {2, 5, 10, 17, 26, 37, 50, 65, 82, 
   101}], TapComment["Sort by comparing the second part of each element:"], 
 TapTestSame[Sort[{{a, 2}, {c, 1}, {d, 3}}, #1[[2]] < #2[[2]] & ], 
  {{c, 1}, {a, 2}, {d, 3}}], TapComment["Specify a custom comparison function \
in RefLink[FixedPoint,paclet:ref/FixedPoint]:"], 
 TapTestSame[FixedPoint[(#1 + 2/#1)/2 & , 1.`20., 
   SameTest -> (Abs[#1 - #2] < 1/10000000000 & )], 
  1.4142135623730950488`19.15051499783199], 
 TapComment["Specify a custom color function:"], 
 TapTestSameBROKEN[HoldComplete[DensityPlot[Sin[x*y], {x, 0, 3}, {y, 0, 3}, 
    ColorFunction -> (RGBColor[1 - #1, #1, 1 - #1] & )]], $Failed], 
 TapComment["Provide a custom distance function:"], 
 TapTestSame[Nearest[{1, 2, 4, 8, 16}, 5, DistanceFunction -> 
    ((#1 - #2)^2 & )], {4}], TapComment["Derivative of a pure function:"], 
 TapTestSame[Derivative[1][Function[x, x^2]], Function[x, 2*x]], 
 TapComment["Derivative of RefLink[Tan,paclet:ref/Tan]:"], 
 TapTestSame[Derivative[1][Tan], Sec[#1]^2 & ], 
 TapComment[
  "Solutions of differential equations may be expressed as pure functions:"], 
 TapTestSame[DSolve[{Derivative[1][y][x] == a*y[x], y[0] == 1}, y, x], 
  {{y -> Function[{x}, E^(a*x)]}}], 
 TapComment["Difference equations may return pure functions:"], 
 TapTestSame[RSolve[{a[n + 1] - 2*a[n] == 1, a[0] == 1}, a, n], 
  {{a -> Function[{n}, -1 + 2^(1 + n)]}}], 
 TapComment["#name is effectively a short form of #[\"name\"]:"], 
 TapTestSameBROKEN[(x & )[\[LeftAssociation] "x" -> a, 
    "y" -> b \[RightAssociation]], a], 
 TapTestSame[(#1["x"] & )[\[LeftAssociation] "x" -> a, 
    "y" -> b \[RightAssociation]], a], 
 TapComment["#name always refers to the association in the first argument:"], 
 TapTestSameBROKEN[(y & )[\[LeftAssociation] "x" -> 1, 
    "y" -> 2 \[RightAssociation], \[LeftAssociation] "x" -> 3, 
    "y" -> 4 \[RightAssociation]], 2], 
 TapComment["Extract from an association slot other than the first:"], 
 TapTestSame[(#2["y"] & )[\[LeftAssociation] "x" -> 1, 
    "y" -> 2 \[RightAssociation], \[LeftAssociation] "x" -> 3, 
    "y" -> 4 \[RightAssociation]], 4], 
 TapComment["## stands for all arguments:"], 
 TapTestSame[(f[##1] & )[a, b, c, d], f[a, b, c, d]], 
 TapTestSame[(f[X, ##1, Y, ##1] & )[a, b, c, d], 
  f[X, a, b, c, d, Y, a, b, c, d]], 
 TapComment["##n stands for arguments n and onward:"], 
 TapTestSame[(f[##2] & )[a, b, c, d], f[b, c, d]], 
 TapTestSame[(f[##1, X, ##2, Y, ##3, Z, ##4] & )[a, b, c, d], 
  f[a, b, c, d, X, b, c, d, Y, c, d, Z, d]], TapComment["Create a pure \
function with attribute RefLink[Listable,paclet:ref/Listable]:"], 
 TapTestSame[Function[{u}, g[u], Listable][{a, b, c}], {g[a], g[b], g[c]}], 
 TapTestSame[Function[{u}, g[u]][{a, b, c}], g[{a, b, c}]], 
 TapComment["#0 stands for the whole pure function:"], 
 TapTestSame[(f[#0] & )[x], f[f[#0] & ]], 
 TapComment["A recursive definition for factorial using #0:"], 
 TapTestSame[f = If[#1 == 1, 1, #1*#0[#1 - 1]] & , 
  If[#1 == 1, 1, #1*#0[#1 - 1]] & ], TapTestSame[f[10], 3628800], 
 TapComment["Turn a function that takes several arguments into one that takes \
a list of arguments:"], TapTestSame[cplus = Plus @@ #1 & , Plus @@ #1 & ], 
 TapTestSame[cplus[{a, b, c}], a + b + c], TapTestSameBROKEN[f2 = makef[2], 
  Function[x$, 2*x$]], TapTestSameBROKEN[f2[5], 10], 
 TapComment["Preserve arguments in unevaluated form:"], 
 TapTestSame[Select[Hold[x, $MaxMachineNumber], 
   Function[symbol, Context[symbol] === "System`", HoldAll]], 
  Hold[$MaxMachineNumber]], 
 TapComment[
  "#1 uses only the first argument supplied; the rest are ignored:"], 
 TapTestSame[(f[#1] & )[x, y, z], f[x]], 
 TapComment["Not using any arguments results in a constant pure function:"], 
 TapTestSame[(17 & ) /@ {1, 2, 3}, {17, 17, 17}], 
 TapComment["Replacements can be done inside pure functions:"], 
 TapTestSame[(p + #1 & ) /. p -> q, q + #1 & ], 
 TapTestSameBROKEN[%[x], q + x], TapComment["Formal parameters are renamed \
whenever there is a possibility of confusion:"], 
 TapTestSame[Function[{x}, Function[{y}, f[x, y]]][y], 
  Function[{y$}, f[y, y$]]], TapTestSame[
  Function[{x}, Function[{y}, f[x, y]]][a], Function[{y$}, f[a, y$]]], 
 TapTestSame[Function[{x}, Function[{y}, Function[{z}, f[x, y, z]]]][a], 
  Function[{y$}, Function[{z$}, f[a, y$, z$]]]], 
 TapComment["The names of the parameters do not matter:"], 
 TapTestSame[Function[x, Function[y, x^y]][x][y], x^y], 
 TapTestSame[Function[y, Function[x, y^x]][x][y], x^y], 
 TapComment["However, reusing a name introduces a new scope:"], 
 TapTestSame[Function[x, Function[x, x^x]][x][y], y^y], 
 TapComment["Nested functions take their arguments one at a time:"], 
 TapTestSame[Function[x, Function[y, x^y]][a][b], a^b], 
 TapTestSame[Function[{x, y}, x^y][a, b], a^b], 
 TapComment["f[#]& is the same as simply f in the univariate case:"], 
 TapTestSame[(f[#1] & )[a], f[a]], 
 TapComment["In general f[##]& is the same as f:"], 
 TapTestSame[(f[##1] & )[a, b, c], f[a, b, c]], 
 TapTestSameBROKEN[Function[x, Evaluate[formula]], Function[x, (1 + x)^2]], 
 TapComment["Use a formula in RefLink[Table,paclet:ref/Table]:"], 
 TapTestSame[Table[i^2, {i, 10}], {1, 4, 9, 16, 25, 36, 49, 64, 81, 100}], 
 TapComment["Use the corresponding pure function in an equivalent \
RefLink[Array,paclet:ref/Array] expression:"], 
 TapTestSame[Array[#1^2 & , 10], {1, 4, 9, 16, 25, 36, 49, 64, 81, 100}], 
 TapComment["Special-purpose function constructs include \
RefLink[InterpolatingFunction,paclet:ref/InterpolatingFunction]:"], 
 TapTestSameBROKEN[HoldComplete[f = Interpolation[{1, 2, 4, 5, 6}]], 
  $Failed], TapTestSame[f[4], 5], 
 TapComment["RefLink[CompiledFunction,paclet:ref/CompiledFunction]:"], 
 TapTestSameBROKEN[HoldComplete[f = Compile[{x}, x^2]], $Failed], 
 TapTestSame[f[5.], 25.], TapComment[
  "RefLink[NearestFunction,paclet:ref/NearestFunction]:"], 
 TapTestSameBROKEN[HoldComplete[f = Nearest[{1, 2, 3, 4, 5}]], $Failed], 
 TapTestSame[f[3.1], {3}], 
 TapComment["RefLink[LinearSolveFunction,paclet:ref/LinearSolveFunction]:"], 
 TapTestSameBROKEN[HoldComplete[f = LinearSolve[{{1, 2}, {3, 4}}]], $Failed], 
 TapTestSame[f[{5, 6}], {-4, 9/2}], 
 TapComment[
  "& binds more loosely than ->, so it usually needs parentheses in rules:"], 
 TapTestSameBROKEN[FullForm[x -> y & ], x -> y & ], 
 TapTestSameBROKEN[FullForm[x -> (y & )], x -> (y & )], 
 TapComment["& binds more loosely than ?, so it usually needs parentheses in \
pattern tests:"], TapTestSame[Cases[{1, 2, 3, 4}, _?(OddQ[#1/2] & )], {2}], 
 TapComment["RefLink[Function,paclet:ref/Function] does not evaluate its body \
until the function is applied:"], TapTestSame[#1 + #1 + #1 & , 
  #1 + #1 + #1 & ], TapTestSameBROKEN[%[a], 3*a], 
 TapComment[
  "Supplying fewer than the required number of arguments generates an error:"]\
, TapTestSame[(#2 & )[x], #2], TapComment["Define the recursion operator of \
recursion theory [WebLink[more \
info,http://www.wolframscience.com/nksonline/page-907b-text]]:"], 
 TapTestSame[r[g_, h_] = If[#1 == 0, g[##2], h[#0[#1 - 1, ##2], #1 - 1, 
      ##2]] & , If[#1 == 0, g[##2], h[#0[#1 - 1, ##2], #1 - 1, ##2]] & ], 
 TapComment["Use it to define the factorial function:"], 
 TapTestSame[r[1 & , #1*(#2 + 1) & ][10], 3628800], 
 TapTestSameBROKEN[NewtonZero[BesselJ[2, #1] & , 5.], 5.13562]]
