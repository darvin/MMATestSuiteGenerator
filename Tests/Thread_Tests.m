(* Created by Wolfram Mathematica 10.0 : www.wolfram.com *)
Import["CompatTests.m"]; 
TapSuite[TapTestSameBROKEN[$Failed, HoldComplete[{f[a], f[b], f[c]}]], 
 TapTestSame[Thread[f[{a, b, c}, x]], {f[a, x], f[b, x], f[c, x]}], 
 TapTestSame[Thread[f[{a, b, c}, {x, y, z}]], {f[a, x], f[b, y], f[c, z]}], 
 TapComment["Convert equations for lists to lists of equations:"], 
 TapTestSame[Thread[{a, b, c} == {x, y, z}], {a == x, b == y, c == z}], 
 TapComment["Apply a function to both sides of an equation:"], 
 TapTestSame[Thread[Log[x == y], Equal], Log[x] == Log[y]], 
 TapComment["By default, thread over all arguments:"], 
 TapTestSame[Thread[f[{a, b}, {r, s}, {u, v}, {x, y}], List], 
  {f[a, r, u, x], f[b, s, v, y]}], 
 TapTestSame[Thread[f[{a, b}, {r, s}, {u, v}, {x, y}], List, All], 
  {f[a, r, u, x], f[b, s, v, y]}], TapComment["Do not thread at all:"], 
 TapTestSame[Thread[f[{a, b}, {r, s}, {u, v}, {x, y}], List, None], 
  f[{a, b}, {r, s}, {u, v}, {x, y}]], 
 TapComment["Thread over the first two arguments only:"], 
 TapTestSame[Thread[f[{a, b}, {r, s}, {u, v}, {x, y}], List, 2], 
  {f[a, r, {u, v}, {x, y}], f[b, s, {u, v}, {x, y}]}], 
 TapComment["Thread over the last two arguments only:"], 
 TapTestSame[Thread[f[{a, b}, {r, s}, {u, v}, {x, y}], List, -2], 
  {f[{a, b}, {r, s}, u, x], f[{a, b}, {r, s}, v, y]}], 
 TapComment["Thread over argument 2 only:"], 
 TapTestSame[Thread[f[{a, b}, {r, s}, {u, v}, {x, y}], List, {2}], 
  {f[{a, b}, r, {u, v}, {x, y}], f[{a, b}, s, {u, v}, {x, y}]}], 
 TapComment["Thread over arguments 2 through 4:"], 
 TapTestSame[Thread[f[{a, b}, {r, s}, {u, v}, {x, y}], List, {2, 4}], 
  {f[{a, b}, r, u, x], f[{a, b}, s, v, y]}], 
 TapComment["Thread over every other argument:"], 
 TapTestSame[Thread[f[{a, b}, {r, s}, {u, v}, {x, y}], List, {1, -1, 2}], 
  {f[a, {r, s}, u, {x, y}], f[b, {r, s}, v, {x, y}]}], 
 TapComment["By default, thread over lists:"], 
 TapTestSame[Thread[f[{a, b}, {c, d}]], {f[a, c], f[b, d]}], 
 TapTestSame[Thread[f[{a, b}, {c, d}], List], {f[a, c], f[b, d]}], 
 TapComment["By default, does not thread over heads other than \
RefLink[List,paclet:ref/List]:"], TapTestSame[Thread[f[a + b, c + d]], 
  f[a + b, c + d]], TapComment[
  "Thread with respect to RefLink[Plus,paclet:ref/Plus]:"], 
 TapTestSame[Thread[f[a + b, c + d], Plus], f[a, c] + f[b, d]], 
 TapComment["Elements that are not lists are repeated:"], 
 TapTestSame[Thread[f[{a, b, c}, h, {x, y, z}]], 
  {f[a, h, x], f[b, h, y], f[c, h, z]}], TapTestSame[{1, 2, 3}^2, {1, 4, 9}], 
 TapComment["Build a list of rules:"], 
 TapTestSame[Thread[{a, b, c} -> {1, 2, 3}], {a -> 1, b -> 2, c -> 3}], 
 TapComment["Equate coefficients in a polynomial equation:"], 
 TapTestSame[(CoefficientList[#1, x] & ) /@ (1 + 2*x + 3*x^2 == 
    a + b*x + c*x^2), {1, 2, 3} == {a, b, c}], 
 TapTestSameBROKEN[Thread[%], {1 == a, 2 == b, 3 == c}], 
 TapComment[
  "Alternatively, use RefLink[SolveAlways,paclet:ref/SolveAlways]:"], 
 TapTestSame[SolveAlways[1 + 2*x + 3*x^2 == a + b*x + c*x^2, x], 
  {{a -> 1, b -> 2, c -> 3}}], 
 TapComment["Form pairs with a constant second element:"], 
 TapTestSame[Thread[{{a, b, c}, 0}], {{a, 0}, {b, 0}, {c, 0}}], 
 TapComment["Functions with attribute RefLink[Listable,paclet:ref/Listable] \
are threaded automatically over lists:"], TapTestSame[Sqrt[{1, 2, 3, 4}], 
  {1, Sqrt[2], Sqrt[3], 2}], TapTestSame[{1, 2, 3, 4} + 1, {2, 3, 4, 5}], 
 TapTestSame[{1, 2, 3, 4} + {a, b, c, d}, {1 + a, 2 + b, 3 + c, 4 + d}], 
 TapComment["RefLink[MapThread,paclet:ref/MapThread] works like \
RefLink[Thread,paclet:ref/Thread], but takes the function and arguments \
separately:"], TapTestSame[MapThread[f, {{a, b, c}, {x, y, z}}], 
  {f[a, x], f[b, y], f[c, z]}], TapTestSame[Thread[f[{a, b, c}, {x, y, z}]], 
  {f[a, x], f[b, y], f[c, z]}], 
 TapComment[
  "The function to thread over can be RefLink[List,paclet:ref/List] as well:"]\
, TapTestSame[Thread[{{a, b, c}, {x, y, z}}], {{a, x}, {b, y}, {c, z}}], 
 TapComment["In this case, the result is the same as a transposition:"], 
 TapTestSame[Transpose[{{a, b, c}, {x, y, z}}], {{a, x}, {b, y}, {c, z}}], 
 TapComment["RefLink[Thread,paclet:ref/Thread] evaluates the whole expression \
before threading:"], TapTestSame[Thread[D[{x, x*y, x*z}, {x, y, z}]], 
  {1, x, x}], TapComment["RefLink[MapThread,paclet:ref/MapThread] takes the \
function and its arguments separately:"], 
 TapTestSame[MapThread[D, {{x, x*y, x*z}, {x, y, z}}], {1, x, x}], 
 TapComment["Suppressing evaluation has a similar effect:"], 
 TapTestSame[Thread[Unevaluated[D[{x, x*y, x*z}, {x, y, z}]]], {1, x, x}]]
