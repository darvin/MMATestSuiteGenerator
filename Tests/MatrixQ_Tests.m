(* Created by Wolfram Mathematica 10.0 : www.wolfram.com *)
Import["CompatTests.m"]; 
ESimpleExamples[EComment["Test of whether an object is a matrix:"], 
 ESameTest[MatrixQ[{{a, b}, {3, 4}}], True], 
 ESameTest[MatrixQ[SparseArray[{{1, 1} -> a, {3, 3} -> b}]], True], 
 EComment["These are not matrices:"], ESameTest[MatrixQ[{{1}, {2, 3}}], 
  False], ESameTest[MatrixQ[Array[a, {2, 2, 2}]], False], 
 EComment["Use tests to generalize and specialize:"], 
 ESameTest[MatrixQ[Array[a, {2, 2, 2}], ListQ], True], 
 ESameTest[MatrixQ[RandomReal[1, {3, 3}], MachineNumberQ], True], 
 EComment["Test if a matrix has positive (real) entries:"], 
 ESameTest[MatrixQ[{{1, 2}, {3, 4}}, Positive], True], 
 ESameTest[MatrixQ[{{1, 2}, {3, 4 + 5*I}}, Positive], False], 
 EComment["Test if a matrix has real numeric entries:"], 
 ESameTest[MatrixQ[{{Pi, Sin[1]}, {Cos[2], E}}, Im[#1] == 0 & ], True], 
 EComment["Faster test for real-valued numbers:"], 
 ESameTest[MatrixQ[{{1, 2.}, {3/4, 5.`20.}}, 
   NumberQ[#1] &&  !MatchQ[#1, _Complex] & ], True], 
 EComment["This represents the Hermitian part of a matrix symbolically:"], 
 ESameTest[hpart[a], hpart[a]], 
 EComment["This gets the Hermitian part explicitly:"], 
 ESameTestBROKEN[hpart[{{1, 2*I}, {3*I, 4}}], {{1, -(I/2)}, {I/2, 4}}], 
 ESameTestBROKEN[HermitianMatrixQ[%], True], EComment["RefLink[MatrixQ,paclet\
:ref/MatrixQ] is a special case of RefLink[ArrayQ,paclet:ref/ArrayQ]:"], 
 ESameTestBROKEN[m = RandomReal[1, {2, 2}], {{0.925264, 0.522118}, 
   {0.188581, 0.921065}}], ESameTest[{ArrayQ[m, 2], MatrixQ[m]}, 
  {True, True}], ESameTest[{ArrayQ[m, 2, MachineNumberQ], 
   MatrixQ[m, MachineNumberQ]}, {True, True}], 
 ESameTest[{ArrayQ[m, 2, IntegerQ], MatrixQ[m, IntegerQ]}, {False, False}], 
 EComment["A matrix is made up of vectors of equal length:"], 
 ESameTestBROKEN[m = RandomReal[1, {3, 2}], {{0.79747, 0.551327}, 
   {0.551977, 0.103706}, {0.188657, 0.734707}}], 
 ESameTest[vecs = VectorQ /@ m, {True, True, True}], 
 ESameTest[lens = Length /@ m, {2, 2, 2}], 
 ESameTest[And @@ Append[vecs, Equal @@ lens], True], 
 ESameTest[MatrixQ[m], True]]
