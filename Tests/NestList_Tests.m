(* Created by Wolfram Mathematica 10.0 : www.wolfram.com *)
Import["CompatTests.m"]; 
TapSuite[TapTestSame[NestList[f, x, 4], {x, f[x], f[f[x]], f[f[f[x]]], 
   f[f[f[f[x]]]]}], TapTestSameBROKEN[NestList[Cos, 1., 10], 
  {1., 0.540302, 0.857553, 0.65429, 0.79348, 0.701369, 0.76396, 0.722102, 
   0.750418, 0.731404, 0.744237}], 
 TapComment["The function to nest can be a pure function:"], 
 TapTestSame[NestList[(1 + #1)^2 & , x, 3], {x, (1 + x)^2, (1 + (1 + x)^2)^2, 
   (1 + (1 + (1 + x)^2)^2)^2}], 
 TapComment["Nesting a function can build a formula:"], 
 TapTestSame[NestList[(1 + #1)^2 & , x, 3], {x, (1 + x)^2, (1 + (1 + x)^2)^2, 
   (1 + (1 + (1 + x)^2)^2)^2}], 
 TapComment["Nesting can return a single number:"], 
 TapTestSameBROKEN[NestList[Sqrt, 100., 4], {100., 10., 3.16228, 1.77828, 
   1.33352}], TapComment["The nested function can operate on a list:"], 
 TapTestSameBROKEN[With[{\[Epsilon] = 0.1}, 
   NestList[Function[xy, {2*\[Epsilon], 0} + 
      {{1 - 2*\[Epsilon], 0}, {0, 1 - 2*\[Epsilon]}} . xy], {1., 1.}, 4]], 
  {{1., 1.}, {1., 0.8}, {1., 0.64}, {1., 0.512}, {1., 0.4096}}], 
 TapComment["To nest a function of more than one argument, the arguments can \
be put into a list:"], TapTestSameBROKEN[
  NestList[{(#1[[1]] + #1[[2]])/2, Sqrt[#1[[1]]*#1[[2]]]} & , {0.5, 1.}, 4], 
  {{0.5, 1.}, {0.75, 0.707107}, {0.728553, 0.728238}, {0.728396, 0.728396}, 
   {0.728396, 0.728396}}], TapComment["Powers of 2:"], 
 TapTestSame[NestList[2*#1 & , 1, 10], {1, 2, 4, 8, 16, 32, 64, 128, 256, 
   512, 1024}], TapComment["Successive integers:"], 
 TapTestSame[NestList[#1 + 1 & , 0, 10], {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}], 
 TapComment["Successive squaring:"], TapTestSame[NestList[#1^2 & , 2, 6], 
  {2, 4, 16, 256, 65536, 4294967296, 18446744073709551616}], 
 TapComment["Growth of annually compounded capital:"], 
 TapTestSameBROKEN[NestList[#1*(1 + 0.05) & , 1000, 10], 
  {1000, 1050., 1102.5, 1157.63, 1215.51, 1276.28, 1340.1, 1407.1, 1477.46, 
   1551.33, 1628.89}], TapComment["Successive derivatives:"], 
 TapTestSame[NestList[D[#1, x] & , x^n, 3], {x^n, n*x^(-1 + n), 
   (-1 + n)*n*x^(-2 + n), (-2 + n)*(-1 + n)*n*x^(-3 + n)}], 
 TapComment["Newton iterations for Sqrt[2]:"], 
 TapTestSameBROKEN[NestList[(#1 + 2/#1)/2 & , 1., 5], 
  {1., 1.5, 1.41667, 1.41422, 1.41421, 1.41421}], 
 TapComment["Continued fraction:"], 
 TapTestSame[NestList[1/(1 + #1) & , x, 5], {x, 1/(1 + x), 1/(1 + 1/(1 + x)), 
   1/(1 + 1/(1 + 1/(1 + x))), 1/(1 + 1/(1 + 1/(1 + 1/(1 + x)))), 
   1/(1 + 1/(1 + 1/(1 + 1/(1 + 1/(1 + x)))))}], TapComment["Iterated map:"], 
 TapTestSame[NestList[(4*#1)*(1 - #1) & , 1/3, 5], 
  {1/3, 8/9, 32/81, 6272/6561, 7250432/43046721, 
   1038154236987392/1853020188851841}], TapTestSameBROKEN[
  NestList[(4*#1)*(1 - #1) & , N[1/3], 10], {0.333333, 0.888889, 0.395062, 
   0.955952, 0.168432, 0.56025, 0.98548, 0.0572373, 0.215845, 0.677023, 
   0.874651}], TapComment["Iterates in the 3 n+1 problem:"], 
 TapTestSame[NestList[If[EvenQ[#1], #1/2, (3*#1 + 1)/2] & , 100, 20], 
  {100, 50, 25, 38, 19, 29, 44, 22, 11, 17, 26, 13, 20, 10, 5, 8, 4, 2, 1, 2, 
   1}], TapComment["Linear congruential pseudorandom generator:"], 
 TapTestSame[NestList[Mod[59*#1, 101] & , 1, 15], 
  {1, 59, 47, 46, 88, 41, 96, 8, 68, 73, 65, 98, 25, 61, 64, 39}], 
 TapComment["Random walk:"], TapTestSameBROKEN[
  NestList[#1 + RandomChoice[{-1, 1}] & , 0, 20], 
  {0, -1, -2, -3, -2, -1, -2, -1, -2, -1, 0, 1, 2, 1, 2, 3, 2, 3, 2, 1, 0}], 
 TapTestSameBROKEN[HoldComplete[ListLinePlot[%]], $Failed], 
 TapComment["Iterated string replacements:"], 
 TapTestSameBROKEN[NestList[StringReplace[#1, {"A" -> "BA", "B" -> "AB"}] & , 
   "A", 5], {A, BA, ABBA, BAABABBA, ABBABAABBAABABBA, 
   BAABABBAABBABAABABBABAABBAABABBA}], 
 TapComment["Successively append to a list:"], 
 TapTestSame[NestList[Append[#1, x] & , {a}, 5], 
  {{a}, {a, x}, {a, x, x}, {a, x, x, x}, {a, x, x, x, x}, 
   {a, x, x, x, x, x}}], TapComment["Successively rotate a list:"], 
 TapTestSame[NestList[RotateLeft, {a, b, c, d}, 4], 
  {{a, b, c, d}, {b, c, d, a}, {c, d, a, b}, {d, a, b, c}, {a, b, c, d}}], 
 TapComment["Operations on a pair of values:"], 
 TapTestSame[NestList[{f[Last[#1]], g[First[#1]]} & , {x, y}, 5], 
  {{x, y}, {f[y], g[x]}, {f[g[x]], g[f[y]]}, {f[g[f[y]]], g[f[g[x]]]}, 
   {f[g[f[g[x]]]], g[f[g[f[y]]]]}, {f[g[f[g[f[y]]]]], g[f[g[f[g[x]]]]]}}], 
 TapComment["RefLink[Nest,paclet:ref/Nest] gives the last element of \
RefLink[NestList,paclet:ref/NestList]:"], TapTestSame[NestList[f, x, 4], 
  {x, f[x], f[f[x]], f[f[f[x]]], f[f[f[f[x]]]]}], 
 TapTestSame[Nest[f, x, 4], f[f[f[f[x]]]]], 
 TapComment["Nesting zero times simply returns to the original argument:"], 
 TapTestSame[NestList[f, x, 0], {x}], TapComment["RefLink[FixedPointList,pacl\
et:ref/FixedPointList] goes on until the result no longer changes:"], 
 TapTestSame[NestList[1 + Floor[#1/2] & , 1000, 15], 
  {1000, 501, 251, 126, 64, 33, 17, 9, 5, 3, 2, 2, 2, 2, 2, 2}], 
 TapTestSame[FixedPointList[1 + Floor[#1/2] & , 1000, 15], 
  {1000, 501, 251, 126, 64, 33, 17, 9, 5, 3, 2, 2}], 
 TapComment["RefLink[NestWhileList,paclet:ref/NestWhileList] goes on while a \
condition is true:"], TapTestSame[NestWhileList[
   If[EvenQ[#1], #1/2, (3*#1 + 1)/2] & , 29, #1 > 1 & ], 
  {29, 44, 22, 11, 17, 26, 13, 20, 10, 5, 8, 4, 2, 1}], 
 TapComment["RefLink[FoldList,paclet:ref/FoldList] automatically inserts \
second arguments from a list:"], TapTestSame[NestList[f[#1, a] & , x, 3], 
  {x, f[x, a], f[f[x, a], a], f[f[f[x, a], a], a]}], 
 TapTestSame[FoldList[f, x, {a, a, a}], {x, f[x, a], f[f[x, a], a], 
   f[f[f[x, a], a], a]}], TapTestSameBROKEN[NestList[Framed, x, 6], 
  {x, x, x, x, x, x, x}], TapComment["Power towers:"], 
 TapTestSame[NestList[x^#1 & , x, 6], {x, x^x, x^x^x, x^x^x^x, x^x^x^x^x, 
   x^x^x^x^x^x, x^x^x^x^x^x^x}], TapTestSame[NestList[#1^#1 & , x, 4], 
  {x, x^x, (x^x)^x^x, ((x^x)^x^x)^(x^x)^x^x, (((x^x)^x^x)^(x^x)^x^x)^
    ((x^x)^x^x)^(x^x)^x^x}], TapTestSameBROKEN[
  HoldComplete[NestList[Framed[Row[{#1, #1}]] & , x, 4]], $Failed], 
 TapTestSameBROKEN[NestList[p[#1][#1] & , x, 3], 
  {x, p[x][x], p[p[x][x]][p[x][x]], p[p[p[x][x]][p[x][x]]][
    p[p[x][x]][p[x][x]]]}], TapTestSameBROKEN[
  HoldComplete[NestList[Subsuperscript[#1, #1, #1] & , x, 4]], $Failed]]
