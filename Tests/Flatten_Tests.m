(* Created by Wolfram Mathematica 10.0 : www.wolfram.com *)
Import["CompatTests.m"]; 
TapSuite[TapComment["Flatten out lists at all levels:"], 
 TapTestSame[Flatten[{{a, b}, {c, {d}, e}, {f, {g, h}}}], 
  {a, b, c, d, e, f, g, h}], TapComment["Flatten only at level 1:"], 
 TapTestSame[Flatten[{{a, b}, {c, {d}, e}, {f, {g, h}}}, 1], 
  {a, b, c, {d}, e, f, {g, h}}], TapComment["No flattening:"], 
 TapTestSame[Flatten[{0, {1}, {{2, -2}}, {{{3}, {-3}}}, {{{{4}}}}}, 0], 
  {0, {1}, {{2, -2}}, {{{3}, {-3}}}, {{{{4}}}}}], 
 TapComment["Flatten to level 1:"], 
 TapTestSame[Flatten[{0, {1}, {{2, -2}}, {{{3}, {-3}}}, {{{{4}}}}}, 1], 
  {0, 1, {2, -2}, {{3}, {-3}}, {{{4}}}}], TapComment["Flatten to level 2:"], 
 TapTestSame[Flatten[{0, {1}, {{2, -2}}, {{{3}, {-3}}}, {{{{4}}}}}, 2], 
  {0, 1, 2, -2, {3}, {-3}, {{4}}}], TapComment["Flatten to level 3:"], 
 TapTestSame[Flatten[{0, {1}, {{2, -2}}, {{{3}, {-3}}}, {{{{4}}}}}, 3], 
  {0, 1, 2, -2, 3, -3, {4}}], TapComment["Flatten to level 4:"], 
 TapTestSame[Flatten[{0, {1}, {{2, -2}}, {{{3}, {-3}}}, {{{{4}}}}}, 4], 
  {0, 1, 2, -2, 3, -3, 4}], 
 TapComment["This is the same as using level \\[Infinity]:"], 
 TapTestSame[Flatten[{0, {1}, {{2, -2}}, {{{3}, {-3}}}, {{{{4}}}}}, 
   Infinity], {0, 1, 2, -2, 3, -3, 4}], 
 TapComment["And the same as not specifying a level:"], 
 TapTestSame[Flatten[{0, {1}, {{2, -2}}, {{{3}, {-3}}}, {{{{4}}}}}], 
  {0, 1, 2, -2, 3, -3, 4}], TapComment["Flatten a sparse array:"], 
 TapTestSameBROKEN[HoldComplete[
   Flatten[SparseArray[{{1, 2} -> a, {6, 4} -> b}]]], $Failed], 
 TapTestSameBROKEN[Normal[%], {0, a, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0, b}], 
 TapComment["RefLink[Flatten,paclet:ref/Flatten] works with any head:"], 
 TapTestSame[Flatten[f[f[x, y], z]], f[x, y, z]], 
 TapComment["Flatten all levels with respect to g:"], 
 TapTestSame[Flatten[f[g[u, v], f[x, y]], Infinity, g], f[u, v, f[x, y]]], 
 TapComment["Flatten all levels with respect to f:"], 
 TapTestSame[Flatten[f[g[u, v], f[x, y]], Infinity, f], f[g[u, v], x, y]], 
 TapComment["Here is a matrix:"], TapTestSame[u = {{a, b}, {c, d}}, 
  {{a, b}, {c, d}}], TapComment[
  "Flatten an array of blocks with the shape of u into a single matrix."], 
 TapTestSameBROKEN[MatrixForm[Flatten[{{u, 0*u}, {0*u, u}}, 
    {{1, 3}, {2, 4}}]], a*b*0*0*c*d*0*0*0*0*a*b*0*0*c*d], 
 TapComment["Flatten into a single matrix effectively using the transpose of \
the blocks:"], TapTestSameBROKEN[MatrixForm[Flatten[{{u, 0*u}, {0*u, u}}, 
    {{1, 4}, {2, 3}}]], a*c*0*0*b*d*0*0*0*0*a*c*0*0*b*d], 
 TapComment["Join lists and individual elements:"], 
 TapTestSame[Range[5], {1, 2, 3, 4, 5}], TapTestSameBROKEN[
  Flatten[{%, x, %, %, y}], {1, 2, 3, 4, 5, x, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 
   y}], TapComment["Unravel a matrix:"], 
 TapTestSame[Table[i^j, {i, 3}, {j, 4}], {{1, 1, 1, 1}, {2, 4, 8, 16}, 
   {3, 9, 27, 81}}], TapTestSameBROKEN[Flatten[%], 
  {1, 1, 1, 1, 2, 4, 8, 16, 3, 9, 27, 81}], 
 TapComment["Make a flattened list of rules:"], 
 TapTestSame[Table[i -> j, {i, 4}, {j, 3}], {{1 -> 1, 1 -> 2, 1 -> 3}, 
   {2 -> 1, 2 -> 2, 2 -> 3}, {3 -> 1, 3 -> 2, 3 -> 3}, 
   {4 -> 1, 4 -> 2, 4 -> 3}}], TapTestSameBROKEN[Flatten[%], 
  {1 -> 1, 1 -> 2, 1 -> 3, 2 -> 1, 2 -> 2, 2 -> 3, 3 -> 1, 3 -> 2, 3 -> 3, 
   4 -> 1, 4 -> 2, 4 -> 3}], 
 TapComment["Do a \"transpose\" on a ragged array:"], 
 TapTestSame[list = Table[i + j - 1, {i, 4}, {j, i}], 
  {{1}, {2, 3}, {3, 4, 5}, {4, 5, 6, 7}}], 
 TapTestSame[Flatten[list, {{2}, {1}}], {{1, 2, 3, 4}, {3, 4, 5}, {5, 6}, 
   {7}}], TapComment["RefLink[Flatten,paclet:ref/Flatten] acts as an inverse \
of RefLink[Partition,paclet:ref/Partition]:"], 
 TapTestSame[Range[20], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
   16, 17, 18, 19, 20}], TapTestSameBROKEN[Partition[%, 4], 
  {{1, 2, 3, 4}, {5, 6, 7, 8}, {9, 10, 11, 12}, {13, 14, 15, 16}, 
   {17, 18, 19, 20}}], TapTestSameBROKEN[Flatten[%], 
  {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}], 
 TapComment["RefLink[ArrayReshape,paclet:ref/ArrayReshape] acts as an inverse \
for RefLink[Flatten,paclet:ref/Flatten] on rectangular arrays:"], 
 TapTestSameBROKEN[array = RandomInteger[9, {3, 2, 4}], 
  {{{5, 2, 3, 7}, {8, 6, 5, 9}}, {{1, 1, 4, 5}, {0, 9, 3, 7}}, 
   {{2, 0, 1, 3}, {3, 4, 3, 6}}}], TapTestSameBROKEN[Flatten[array], 
  {5, 2, 3, 7, 8, 6, 5, 9, 1, 1, 4, 5, 0, 9, 3, 7, 2, 0, 1, 3, 3, 4, 3, 6}], 
 TapTestSame[ArrayReshape[%, {3, 2, 4}], {{{5, 2, 3, 7}, {8, 6, 5, 9}}, 
   {{1, 1, 4, 5}, {0, 9, 3, 7}}, {{2, 0, 1, 3}, {3, 4, 3, 6}}}], 
 TapComment["RefLink[Flatten,paclet:ref/Flatten] effectively arranges \
elements in the lexicographic order of their indices:"], 
 TapTestSame[Flatten[Array[a, {3, 4}]], {a[1, 1], a[1, 2], a[1, 3], a[1, 4], 
   a[2, 1], a[2, 2], a[2, 3], a[2, 4], a[3, 1], a[3, 2], a[3, 3], a[3, 4]}], 
 TapTestSame[Flatten[Array[100*#1 + 10*#2 + #3 & , {3, 3, 3}]], 
  {111, 112, 113, 121, 122, 123, 131, 132, 133, 211, 212, 213, 221, 222, 223, 
   231, 232, 233, 311, 312, 313, 321, 322, 323, 331, 332, 333}], 
 TapComment["A random permutation:"], TapTestSameBROKEN[
  p = RandomSample[Range[4]], {4, 2, 3, 1}], TapComment["Get its inverse:"], 
 TapTestSameBROKEN[invp = p; invp[[p]] = Range[4]; invp, {4, 2, 3, 1}], 
 TapTestSameBROKEN[Flatten[list, List /@ invp] == Transpose[list, p], True], 
 TapComment[
  "Peel off successive layers of RefLink[Framed,paclet:ref/Framed]:"], 
 TapTestSameBROKEN[NestList[Flatten[#1, 1] & , Nest[Framed, x, 6], 10], 
  {x, x, x, x, x, x, x, x, x, x, x}]]
