(* Created by Wolfram Mathematica 10.0 : www.wolfram.com *)
Import["CompatTests.m"]; 
TapSuite[TapTestSameBROKEN[$Failed, HoldComplete[{x, f[x, a], f[f[x, a], b], 
    f[f[f[x, a], b], c], f[f[f[f[x, a], b], c], d]}]], 
 TapComment["Cumulative sums of the elements of the list:"], 
 TapTestSame[FoldList[Plus, 0, {a, b, c, d}], {0, a, a + b, a + b + c, 
   a + b + c + d}], TapComment["Cumulative powers:"], 
 TapTestSame[FoldList[#1^#2 & , x, {a, b, c, d}], 
  {x, x^a, (x^a)^b, ((x^a)^b)^c, (((x^a)^b)^c)^d}], 
 TapComment["The head need not be RefLink[List,paclet:ref/List]:"], 
 TapTestSame[FoldList[f, x, p[a, b, c, d]], p[x, f[x, a], f[f[x, a], b], 
   f[f[f[x, a], b], c], f[f[f[f[x, a], b], c], d]]], 
 TapComment["Fold to the right:"], 
 TapTestSame[FoldList[g[#2, #1] & , x, {a, b, c, d}], 
  {x, g[a, x], g[b, g[a, x]], g[c, g[b, g[a, x]]], 
   g[d, g[c, g[b, g[a, x]]]]}], TapComment["Compute successive factorials:"], 
 TapTestSame[FoldList[Times, 1, Range[10]], {1, 1, 2, 6, 24, 120, 720, 5040, 
   40320, 362880, 3628800}], 
 TapComment["Compute products of successive primes:"], 
 TapTestSame[FoldList[Times, 1, Array[Prime, 10]], 
  {1, 2, 6, 30, 210, 2310, 30030, 510510, 9699690, 223092870, 6469693230}], 
 TapComment["Cumulative sums:"], TapTestSame[FoldList[Plus, 0, {a, b, c, d}], 
  {0, a, a + b, a + b + c, a + b + c + d}], 
 TapComment["Build up a continued fraction:"], 
 TapTestSame[FoldList[1/(#2 + #1) & , x, Reverse[{a, b, c}]], 
  {x, 1/(c + x), 1/(b + 1/(c + x)), 1/(a + 1/(b + 1/(c + x)))}], 
 TapComment["Build up a nested polynomial (Horner form):"], 
 TapTestSame[FoldList[x*#1 + #2 & , 0, {a, b, c, d}], 
  {0, a, b + a*x, c + x*(b + a*x), d + x*(c + x*(b + a*x))}], 
 TapComment["Build up a number from digits:"], 
 TapTestSame[FoldList[10*#1 + #2 & , 0, {4, 5, 1, 6, 7, 8}], 
  {0, 4, 45, 451, 4516, 45167, 451678}], 
 TapComment["Form alternating sums:"], 
 TapTestSame[FoldList[#2 - #1 & , 0, {a, b, c, d, e}], 
  {0, a, -a + b, a - b + c, -a + b - c + d, a - b + c - d + e}], 
 TapComment["Generate a random walk:"], TapTestSameBROKEN[
  FoldList[Plus, 0, Table[(-1)^RandomInteger[], {20}]], 
  {0, 1, 2, 3, 2, 1, 0, 1, 2, 1, 2, 3, 4, 5, 6, 7, 6, 5, 6, 7, 6}], 
 TapComment["Find the running maximum of a list:"], 
 TapTestSame[FoldList[Max, 0, {1, 3, 1, 2, 4, 1, 5, 3, 6, 2, 8, 11}], 
  {0, 1, 3, 3, 3, 4, 4, 5, 5, 6, 6, 8, 11}], 
 TapTestSameBROKEN[DeleteDuplicates[%], {0, 1, 3, 4, 5, 6, 8, 11}], 
 TapComment["Find successively deeper parts in an expression:"], 
 TapTestSame[FoldList[#1[[#2]] & , (a + b)*(x^2 + y^2), {2, 1, 1}], 
  {(a + b)*(x^2 + y^2), x^2 + y^2, x^2, x}], 
 TapTestSame[FoldList[Part, (a + b)*(x^2 + y^2), {2, 1, 1}], 
  {(a + b)*(x^2 + y^2), x^2 + y^2, x^2, x}], 
 TapComment["Successively append to a list:"], 
 TapTestSame[FoldList[Append, {x}, {a, b, c, d}], 
  {{x}, {x, a}, {x, a, b}, {x, a, b, c}, {x, a, b, c, d}}], 
 TapComment["Build up a binary tree:"], 
 TapTestSame[FoldList[List, x, {a, b, c, d}], {x, {x, a}, {{x, a}, b}, 
   {{{x, a}, b}, c}, {{{{x, a}, b}, c}, d}}], 
 TapComment["Build up a left-branching binary tree:"], 
 TapTestSame[FoldList[{#2, #1} & , x, {a, b, c, d}], 
  {x, {a, x}, {b, {a, x}}, {c, {b, {a, x}}}, {d, {c, {b, {a, x}}}}}], 
 TapComment["Make function compositions:"], 
 TapTestSame[FoldList[#2[#1] & , x, {a, b, c, d}], 
  {x, a[x], b[a[x]], c[b[a[x]]], d[c[b[a[x]]]]}], 
 TapComment["Compute a power using a power tree with successive squaring:"], 
 TapTestSame[With[{m = x, t = 85}, FoldList[#1^2*m^#2 & , 1, 
    IntegerDigits[t, 2]]], {1, x, x^2, x^5, x^10, x^21, x^42, x^85}], 
 TapTestSame[With[{m = 3, t = 85}, FoldList[#1^2*m^#2 & , 1, 
    IntegerDigits[t, 2]]], {1, 3, 9, 243, 59049, 10460353203, 
   109418989131512359209, 35917545547686059365808220080151141317043}], 
 TapComment[
  "RefLink[FoldList,paclet:ref/FoldList] makes a list of length n+1:"], 
 TapTestSame[Length[FoldList[f, x, Range[10]]], 11], 
 TapComment["RefLink[Rest,paclet:ref/Rest] gives a result of length n:"], 
 TapTestSame[Rest[FoldList[Plus, 0, {a, b, c, d, e}]], 
  {a, a + b, a + b + c, a + b + c + d, a + b + c + d + e}], 
 TapComment[
  "Folding with an empty list does not apply the function at all:"], 
 TapTestSame[FoldList[f, x, {}], {x}], TapComment["RefLink[Fold,paclet:ref/Fo\
ld] gives the last element of RefLink[FoldList,paclet:ref/FoldList]:"], 
 TapTestSame[FoldList[f, x, {a, b, c}], {x, f[x, a], f[f[x, a], b], 
   f[f[f[x, a], b], c]}], TapTestSame[Fold[f, x, {a, b, c}], 
  f[f[f[x, a], b], c]], TapComment["Functions that ignore their second \
argument give the same result as in RefLink[NestList,paclet:ref/NestList]:"], 
 TapTestSame[FoldList[f[#1] & , x, Range[5]], {x, f[x], f[f[x]], f[f[f[x]]], 
   f[f[f[f[x]]]], f[f[f[f[f[x]]]]]}], TapTestSame[NestList[f, x, 5], 
  {x, f[x], f[f[x]], f[f[f[x]]], f[f[f[f[x]]]], f[f[f[f[f[x]]]]]}], 
 TapComment["RefLink[Accumulate,paclet:ref/Accumulate] is equivalent to \
RefLink[FoldList,paclet:ref/FoldList] with RefLink[Plus,paclet:ref/Plus]:"], 
 TapTestSame[Rest[FoldList[Plus, 0, {a, b, c, d}]], 
  {a, a + b, a + b + c, a + b + c + d}], 
 TapTestSame[Accumulate[{a, b, c, d}], {a, a + b, a + b + c, a + b + c + d}], 
 TapComment["Compute the minimum number of coins of different value needed to \
make up an amount d:"], TapTestSame[
  makeChange[d_] := Quotient[FoldList[Mod, 100*d, {25, 10, 5}], 
     {25, 10, 5, 1}]; makeChange[1.63], {6, 1, 0, 3}]]
